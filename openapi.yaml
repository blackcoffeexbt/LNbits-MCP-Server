openapi: 3.1.0
info:
  title: LNbits API
  description: >-
    API for LNbits, the free and open source bitcoin wallet and accounts system
    with plugins.
  license:
    name: MIT License
    url: https://raw.githubusercontent.com/lnbits/lnbits/main/LICENSE
  version: 1.2.0rc2
paths:
  /watchonly/:
    get:
      tags:
        - watchonly
      summary: Index
      operationId: index_watchonly__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /watchonly/api/v1/wallet:
    get:
      tags:
        - watchonly
      summary: Api Wallets Retrieve
      operationId: api_wallets_retrieve_watchonly_api_v1_wallet_get
      parameters:
        - required: false
          schema:
            type: string
            title: Network
            default: Mainnet
          name: network
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WalletAccount'
                type: array
                title: Response Api Wallets Retrieve Watchonly Api V1 Wallet Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - watchonly
      summary: Api Wallet Create Or Update
      operationId: api_wallet_create_or_update_watchonly_api_v1_wallet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/lnbits__extensions__watchonly__models__CreateWallet
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletAccount'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/wallet/{wallet_id}:
    get:
      tags:
        - watchonly
      summary: Api Wallet Retrieve
      operationId: api_wallet_retrieve_watchonly_api_v1_wallet__wallet_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletAccount'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - watchonly
      summary: Api Wallet Delete
      operationId: api_wallet_delete_watchonly_api_v1_wallet__wallet_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/address/{wallet_id}:
    get:
      tags:
        - watchonly
      summary: Api Fresh Address
      operationId: api_fresh_address_watchonly_api_v1_address__wallet_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__watchonly__models__Address
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/address/{address_id}:
    put:
      tags:
        - watchonly
      summary: Api Update Address
      operationId: api_update_address_watchonly_api_v1_address__address_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/addresses/{wallet_id}:
    get:
      tags:
        - watchonly
      summary: Api Get Addresses
      operationId: api_get_addresses_watchonly_api_v1_addresses__wallet_id__get
      parameters:
        - required: true
          schema:
            title: Wallet Id
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__watchonly__models__Address
                type: array
                title: >-
                  Response Api Get Addresses Watchonly Api V1 Addresses  Wallet
                  Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/psbt:
    post:
      tags:
        - watchonly
      summary: Api Psbt Create
      operationId: api_psbt_create_watchonly_api_v1_psbt_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePsbt'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/psbt/utxos:
    put:
      tags:
        - watchonly
      summary: Api Psbt Utxos Tx
      description: Extract previous unspent transaction outputs (tx_id, vout) from PSBT
      operationId: api_psbt_utxos_tx_watchonly_api_v1_psbt_utxos_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/psbt/extract:
    put:
      tags:
        - watchonly
      summary: Api Psbt Extract Tx
      operationId: api_psbt_extract_tx_watchonly_api_v1_psbt_extract_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractPsbt'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedTransaction'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/tx/extract:
    put:
      tags:
        - watchonly
      summary: Api Extract Tx
      operationId: api_extract_tx_watchonly_api_v1_tx_extract_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractTx'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/tx:
    post:
      tags:
        - watchonly
      summary: Api Tx Broadcast
      operationId: api_tx_broadcast_watchonly_api_v1_tx_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedTransaction'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /watchonly/api/v1/config:
    get:
      tags:
        - watchonly
      summary: Api Get Config
      operationId: api_get_config_watchonly_api_v1_config_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__watchonly__models__Config
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - watchonly
      summary: Api Update Config
      operationId: api_update_config_watchonly_api_v1_config_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/lnbits__extensions__watchonly__models__Config
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__watchonly__models__Config
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /where39/:
    get:
      tags:
        - where39
      summary: Index
      operationId: index_where39__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /where39/shared:
    get:
      tags:
        - where39
      summary: Where39
      operationId: where39_where39_shared_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /where39/manifest/shared.webmanifest:
    get:
      tags:
        - where39
      summary: Manifest
      operationId: manifest_where39_manifest_shared_webmanifest_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /jukebox/:
    get:
      tags:
        - jukebox
      summary: Index
      operationId: index_jukebox__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /jukebox/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Connect To Jukebox
      operationId: connect_to_jukebox_jukebox__juke_id__get
      parameters:
        - required: true
          schema:
            title: Juke Id
          name: juke_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox:
    get:
      tags:
        - jukebox
      summary: Api Get Jukeboxs
      operationId: api_get_jukeboxs_jukebox_api_v1_jukebox_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Jukebox'
                type: array
                title: Response Api Get Jukeboxs Jukebox Api V1 Jukebox Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - jukebox
      summary: Api Create Jukebox
      operationId: api_create_jukebox_jukebox_api_v1_jukebox_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJukeLinkData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jukebox'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /jukebox/api/v1/jukebox/spotify/cb/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Api Check Credentials Callbac
      operationId: >-
        api_check_credentials_callbac_jukebox_api_v1_jukebox_spotify_cb__juke_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
        - required: false
          schema:
            type: string
            title: Code
          name: code
          in: query
        - required: false
          schema:
            type: string
            title: Access Token
          name: access_token
          in: query
        - required: false
          schema:
            type: string
            title: Refresh Token
          name: refresh_token
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Api Check Credentials Check
      operationId: api_check_credentials_check_jukebox_api_v1_jukebox__juke_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - jukebox
      summary: Api Update Jukebox
      operationId: api_update_jukebox_jukebox_api_v1_jukebox__juke_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJukeLinkData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jukebox'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - jukebox
      summary: Api Delete Item
      operationId: api_delete_item_jukebox_api_v1_jukebox__juke_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /jukebox/api/v1/jukebox/jb/playlist/{juke_id}/{sp_playlist}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Song
      operationId: >-
        api_get_jukebox_song_jukebox_api_v1_jukebox_jb_playlist__juke_id___sp_playlist__get
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
        - required: true
          schema:
            type: string
            title: Sp Playlist
          name: sp_playlist
          in: path
        - required: false
          schema:
            type: boolean
            title: Retry
            default: false
          name: retry
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/jb/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Device Check
      operationId: api_get_jukebox_device_check_jukebox_api_v1_jukebox_jb__juke_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Retry
            default: false
          name: retry
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/jb/invoice/{juke_id}/{song_id}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Invoice
      operationId: >-
        api_get_jukebox_invoice_jukebox_api_v1_jukebox_jb_invoice__juke_id___song_id__get
      parameters:
        - required: true
          schema:
            title: Juke Id
          name: juke_id
          in: path
        - required: true
          schema:
            title: Song Id
          name: song_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/jb/checkinvoice/{pay_hash}/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Invoice Check
      operationId: >-
        api_get_jukebox_invoice_check_jukebox_api_v1_jukebox_jb_checkinvoice__pay_hash___juke_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Pay Hash
          name: pay_hash
          in: path
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/jb/invoicep/{song_id}/{juke_id}/{pay_hash}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Invoice Paid
      operationId: >-
        api_get_jukebox_invoice_paid_jukebox_api_v1_jukebox_jb_invoicep__song_id___juke_id___pay_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Song Id
          name: song_id
          in: path
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
        - required: true
          schema:
            type: string
            title: Pay Hash
          name: pay_hash
          in: path
        - required: false
          schema:
            type: boolean
            title: Retry
            default: false
          name: retry
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jukebox/api/v1/jukebox/jb/queue/{juke_id}:
    get:
      tags:
        - jukebox
      summary: Api Get Jukebox Queue
      operationId: api_get_jukebox_queue_jukebox_api_v1_jukebox_jb_queue__juke_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Juke Id
          name: juke_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/:
    get:
      tags:
        - Events
      summary: Index
      operationId: index_events__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /events/{event_id}:
    get:
      tags:
        - Events
      summary: Display
      operationId: display_events__event_id__get
      parameters:
        - required: true
          schema:
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/ticket/{ticket_id}:
    get:
      tags:
        - Events
      summary: Ticket
      operationId: ticket_events_ticket__ticket_id__get
      parameters:
        - required: true
          schema:
            title: Ticket Id
          name: ticket_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/register/{event_id}:
    get:
      tags:
        - Events
      summary: Register
      operationId: register_events_register__event_id__get
      parameters:
        - required: true
          schema:
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/events:
    get:
      tags:
        - Events
      summary: Api Events
      operationId: api_events_events_api_v1_events_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - Events
      summary: Api Event Create
      operationId: api_event_create_events_api_v1_events_post
      parameters:
        - required: false
          schema:
            type: string
            title: Event Id
          name: event_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /events/api/v1/events/{event_id}:
    put:
      tags:
        - Events
      summary: Api Event Create
      operationId: api_event_create_events_api_v1_events__event_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Events
      summary: Api Form Delete
      operationId: api_form_delete_events_api_v1_events__event_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /events/api/v1/tickets:
    get:
      tags:
        - Events
      summary: Api Tickets
      operationId: api_tickets_events_api_v1_tickets_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__events__models__Ticket
                type: array
                title: Response Api Tickets Events Api V1 Tickets Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /events/api/v1/tickets/{event_id}:
    post:
      tags:
        - Events
      summary: Api Ticket Create
      operationId: api_ticket_create_events_api_v1_tickets__event_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicket'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/tickets/{event_id}/{name}/{email}:
    get:
      tags:
        - Events
      summary: Api Ticket Make Ticket
      operationId: >-
        api_ticket_make_ticket_events_api_v1_tickets__event_id___name___email__get
      parameters:
        - required: true
          schema:
            title: Event Id
          name: event_id
          in: path
        - required: true
          schema:
            title: Name
          name: name
          in: path
        - required: true
          schema:
            title: Email
          name: email
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/tickets/{event_id}/{payment_hash}:
    post:
      tags:
        - Events
      summary: Api Ticket Send Ticket
      operationId: >-
        api_ticket_send_ticket_events_api_v1_tickets__event_id___payment_hash__post
      parameters:
        - required: true
          schema:
            title: Event Id
          name: event_id
          in: path
        - required: true
          schema:
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/tickets/{ticket_id}:
    delete:
      tags:
        - Events
      summary: Api Ticket Delete
      operationId: api_ticket_delete_events_api_v1_tickets__ticket_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Ticket Id
          name: ticket_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /events/api/v1/purge/{event_id}:
    get:
      tags:
        - Events
      summary: Api Event Purge Tickets
      operationId: api_event_purge_tickets_events_api_v1_purge__event_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/eventtickets/{event_id}:
    get:
      tags:
        - Events
      summary: Api Event Tickets
      operationId: api_event_tickets_events_api_v1_eventtickets__event_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__events__models__Ticket
                type: array
                title: >-
                  Response Api Event Tickets Events Api V1 Eventtickets  Event
                  Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /events/api/v1/register/ticket/{ticket_id}:
    get:
      tags:
        - Events
      summary: Api Event Register Ticket
      operationId: api_event_register_ticket_events_api_v1_register_ticket__ticket_id__get
      parameters:
        - required: true
          schema:
            title: Ticket Id
          name: ticket_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__events__models__Ticket
                type: array
                title: >-
                  Response Api Event Register Ticket Events Api V1 Register
                  Ticket  Ticket Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /splitpayments/:
    get:
      tags:
        - splitpayments
      summary: Index
      operationId: index_splitpayments__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /splitpayments/api/v1/targets:
    get:
      tags:
        - splitpayments
      summary: Api Targets Get
      operationId: api_targets_get_splitpayments_api_v1_targets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Target'
                type: array
                title: Response Api Targets Get Splitpayments Api V1 Targets Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - splitpayments
      summary: Api Targets Set
      operationId: api_targets_set_splitpayments_api_v1_targets_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetPutList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - splitpayments
      summary: Api Targets Delete
      operationId: api_targets_delete_splitpayments_api_v1_targets_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/:
    get:
      tags:
        - boltz
      summary: Index
      operationId: index_boltz__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /boltz/api/v1/swap:
    get:
      tags:
        - boltz
      summary: get a list of swaps a swap
      description: This endpoint gets a list of normal swaps.
      operationId: boltz_get__swap_boltz_api_v1_swap_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: list of normal swaps
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubmarineSwap'
                type: array
                title: Response Boltz Get  Swap Boltz Api V1 Swap Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - boltz
      summary: create a submarine swap
      description: This endpoint creates a submarine swap
      operationId: boltz_post__swap_boltz_api_v1_swap_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmarineSwap'
        required: true
      responses:
        '201':
          description: create swap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmarineSwap'
        '405':
          description: >-
            auto reverse swap is active, a swap would immediatly be swapped out
            again.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: boltz error
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/refund:
    post:
      tags:
        - boltz
      summary: refund of a swap
      description: |-
        This endpoint attempts to refund a normal swaps,
                creates an onchain tx and sets swap status to refunded.
      operationId: boltz_swap_refund_boltz_api_v1_swap_refund_post
      parameters:
        - required: true
          schema:
            type: string
            title: Swap Id
          name: swap_id
          in: query
      responses:
        '200':
          description: refunded swap with status set to refunded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmarineSwap'
        '400':
          description: when swap_id is missing
        '404':
          description: when swap is not found
        '405':
          description: when swap is not pending
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: when something goes wrong creating the refund onchain tx
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/reverse:
    get:
      tags:
        - boltz
      summary: get a list of reverse swaps
      description: This endpoint gets a list of reverse swaps.
      operationId: boltz_get__swap_reverse_boltz_api_v1_swap_reverse_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: list of reverse swaps
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReverseSubmarineSwap'
                type: array
                title: Response Boltz Get  Swap Reverse Boltz Api V1 Swap Reverse Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - boltz
      summary: create a reverse submarine swap
      description: This endpoint creates a reverse submarine swap
      operationId: boltz_post__swap_reverse_boltz_api_v1_swap_reverse_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReverseSubmarineSwap'
        required: true
      responses:
        '201':
          description: create reverse swap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseSubmarineSwap'
        '405':
          description: not allowed method, insufficient balance
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: boltz error
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/reverse/auto:
    get:
      tags:
        - boltz
      summary: get a list of auto reverse swaps
      description: This endpoint gets a list of auto reverse swaps.
      operationId: boltz_get__swap_reverse_auto_boltz_api_v1_swap_reverse_auto_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: list of auto reverse swaps
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AutoReverseSubmarineSwap'
                type: array
                title: >-
                  Response Boltz Get  Swap Reverse Auto Boltz Api V1 Swap
                  Reverse Auto Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - boltz
      summary: create a auto reverse submarine swap
      description: This endpoint creates a auto reverse submarine swap
      operationId: boltz_post__swap_reverse_auto_boltz_api_v1_swap_reverse_auto_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutoReverseSubmarineSwap'
        required: true
      responses:
        '201':
          description: create auto reverse swap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReverseSubmarineSwap'
        '405':
          description: auto reverse swap is active, only 1 swap per wallet possible.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/reverse/auto/{swap_id}:
    delete:
      tags:
        - boltz
      summary: delete a auto reverse submarine swap
      description: This endpoint deletes a auto reverse submarine swap
      operationId: >-
        boltz_delete__swap_reverse_auto_boltz_api_v1_swap_reverse_auto__swap_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Swap Id
          name: swap_id
          in: path
      responses:
        '200':
          description: delete auto reverse swap
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/status:
    post:
      tags:
        - boltz
      summary: shows the status of a swap
      description: This endpoint attempts to get the status of the swap.
      operationId: boltz_swap_status_boltz_api_v1_swap_status_post
      parameters:
        - required: true
          schema:
            type: string
            title: Swap Id
          name: swap_id
          in: query
      responses:
        '200':
          description: status of swap json
          content:
            application/json:
              schema: {}
        '404':
          description: when swap_id is not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltz/api/v1/swap/boltz:
    get:
      tags:
        - boltz
      summary: get a boltz configuration
      description: This endpoint gets configuration for boltz. (limits, fees...)
      operationId: boltz_get__swap_boltz_boltz_api_v1_swap_boltz_get
      responses:
        '200':
          description: dict of boltz config
          content:
            application/json:
              schema:
                type: object
                title: Response Boltz Get  Swap Boltz Boltz Api V1 Swap Boltz Get
  /boltz/api/v1/settings:
    get:
      tags:
        - boltz
      summary: Api Get Or Create Settings
      operationId: api_get_or_create_settings_boltz_api_v1_settings_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoltzSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - boltz
      summary: Api Update Settings
      operationId: api_update_settings_boltz_api_v1_settings_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoltzSettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoltzSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - boltz
      summary: Api Delete Settings
      operationId: api_delete_settings_boltz_api_v1_settings_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satsdice/:
    get:
      tags:
        - satsdice
      summary: Index
      operationId: index_satsdice__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satsdice/{link_id}:
    get:
      tags:
        - satsdice
      summary: Display
      operationId: display_satsdice__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/win/{link_id}/{payment_hash}:
    get:
      tags:
        - satsdice
      summary: Satsdice.Displaywin
      operationId: satsdice_displaywin_satsdice_win__link_id___payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/img/{link_id}:
    get:
      tags:
        - satsdice
      summary: Img
      operationId: img_satsdice_img__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/api/v1/links:
    get:
      tags:
        - satsdice
      summary: Api Links
      operationId: api_links_satsdice_api_v1_links_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - satsdice
      summary: Api Create Satsdice Link
      operationId: api_create_satsdice_link_satsdice_api_v1_links_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSatsDiceLink'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satsdice/api/v1/links/{link_id}:
    get:
      tags:
        - satsdice
      summary: Api Link Retrieve
      operationId: api_link_retrieve_satsdice_api_v1_links__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - satsdice
      summary: Api Update Satsdice Link
      operationId: api_update_satsdice_link_satsdice_api_v1_links__link_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSatsDiceLink'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - satsdice
      summary: Api Link Delete
      operationId: api_link_delete_satsdice_api_v1_links__link_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satsdice/api/v1/withdraws/{the_hash}/{lnurl_id}:
    get:
      tags:
        - satsdice
      summary: Api Withdraw Hash Retrieve
      operationId: >-
        api_withdraw_hash_retrieve_satsdice_api_v1_withdraws__the_hash___lnurl_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: The Hash
          name: the_hash
          in: path
        - required: true
          schema:
            type: string
            title: Lnurl Id
          name: lnurl_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satsdice/api/v1/lnurlp/{link_id}:
    get:
      tags:
        - satsdice
      summary: Satsdice.Lnurlp Response
      operationId: satsdice_lnurlp_response_satsdice_api_v1_lnurlp__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/api/v1/lnurlp/cb/{link_id}:
    get:
      tags:
        - satsdice
      summary: Satsdice.Api Lnurlp Callback
      operationId: satsdice_api_lnurlp_callback_satsdice_api_v1_lnurlp_cb__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
        - required: false
          schema:
            type: string
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/api/v1/lnurlw/{unique_hash}:
    get:
      tags:
        - satsdice
      summary: Satsdice.Lnurlw Response
      operationId: satsdice_lnurlw_response_satsdice_api_v1_lnurlw__unique_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Unique Hash
          name: unique_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satsdice/api/v1/lnurlw/cb/{unique_hash}:
    get:
      tags:
        - satsdice
      summary: Satsdice.Api Lnurlw Callback
      operationId: satsdice_api_lnurlw_callback_satsdice_api_v1_lnurlw_cb__unique_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Unique Hash
          name: unique_hash
          in: path
        - required: false
          schema:
            type: string
            title: Pr
          name: pr
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /offlineshop/:
    get:
      tags:
        - Offlineshop
      summary: Index
      operationId: index_offlineshop__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /offlineshop/print:
    get:
      tags:
        - Offlineshop
      summary: Print Qr Codes
      operationId: print_qr_codes_offlineshop_print_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /offlineshop/confirmation/{p}:
    get:
      tags:
        - Offlineshop
      summary: Offlineshop.Confirmation Code
      operationId: offlineshop_confirmation_code_offlineshop_confirmation__p__get
      parameters:
        - required: true
          schema:
            type: string
            title: P
          name: p
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /offlineshop/api/v1/offlineshop:
    get:
      tags:
        - Offlineshop
      summary: Api Shop From Wallet
      operationId: api_shop_from_wallet_offlineshop_api_v1_offlineshop_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /offlineshop/api/v1/offlineshop/items/{item_id}:
    put:
      tags:
        - Offlineshop
      summary: Api Add Or Update Item
      operationId: >-
        api_add_or_update_item_offlineshop_api_v1_offlineshop_items__item_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItem'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Offlineshop
      summary: Api Delete Item
      operationId: api_delete_item_offlineshop_api_v1_offlineshop_items__item_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /offlineshop/api/v1/offlineshop/items:
    post:
      tags:
        - Offlineshop
      summary: Api Add Or Update Item
      operationId: api_add_or_update_item_offlineshop_api_v1_offlineshop_items_post
      parameters:
        - required: false
          schema:
            type: string
            title: Item Id
          name: item_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItem'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /offlineshop/api/v1/offlineshop/method:
    put:
      tags:
        - Offlineshop
      summary: Api Update Offlineshop
      operationId: api_update_offlineshop_offlineshop_api_v1_offlineshop_method_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShop'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /offlineshop/lnurl/{item_id}:
    get:
      tags:
        - Offlineshop
      summary: Offlineshop.Lnurl Response
      operationId: offlineshop_lnurl_response_offlineshop_lnurl__item_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: >-
                  Response Offlineshop Lnurl Response Offlineshop Lnurl  Item
                  Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /offlineshop/lnurl/cb/{item_id}:
    get:
      tags:
        - Offlineshop
      summary: Offlineshop.Lnurl Callback
      operationId: offlineshop_lnurl_callback_offlineshop_lnurl_cb__item_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/:
    get:
      tags:
        - lnurlp
      summary: Index
      operationId: index_lnurlp__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lnurlp/link/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Display
      operationId: display_lnurlp_link__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/print/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Print Qr
      operationId: print_qr_lnurlp_print__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/api/v1/currencies:
    get:
      tags:
        - lnurlp
      summary: Api List Currencies Available
      operationId: api_list_currencies_available_lnurlp_api_v1_currencies_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /lnurlp/api/v1/links:
    get:
      tags:
        - lnurlp
      summary: Api Links
      operationId: api_links_lnurlp_api_v1_links_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - lnurlp
      summary: Api Link Create Or Update
      operationId: api_link_create_or_update_lnurlp_api_v1_links_post
      parameters:
        - required: false
          schema:
            type: string
            title: Link Id
          name: link_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayLinkData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnurlp/api/v1/links/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Api Link Retrieve
      operationId: api_link_retrieve_lnurlp_api_v1_links__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - lnurlp
      summary: Api Link Create Or Update
      operationId: api_link_create_or_update_lnurlp_api_v1_links__link_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayLinkData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - lnurlp
      summary: Api Link Delete
      operationId: api_link_delete_lnurlp_api_v1_links__link_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnurlp/api/v1/rate/{currency}:
    get:
      tags:
        - lnurlp
      summary: Api Check Fiat Rate
      operationId: api_check_fiat_rate_lnurlp_api_v1_rate__currency__get
      parameters:
        - required: true
          schema:
            title: Currency
          name: currency
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/api/v1/settings:
    get:
      tags:
        - lnurlp
      summary: Api Get Or Create Settings
      operationId: api_get_or_create_settings_lnurlp_api_v1_settings_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LnurlpSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - lnurlp
      summary: Api Update Settings
      operationId: api_update_settings_lnurlp_api_v1_settings_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LnurlpSettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LnurlpSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - lnurlp
      summary: Api Delete Settings
      operationId: api_delete_settings_lnurlp_api_v1_settings_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lnurlp/api/v1/lnurl/cb/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Lnurlp.Api Lnurl Callback
      operationId: lnurlp_api_lnurl_callback_lnurlp_api_v1_lnurl_cb__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - required: false
          schema:
            type: string
            title: Webhook Data
          name: webhook_data
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Lnurlp.Api Lnurl Response
      operationId: lnurlp_api_lnurl_response_lnurlp__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
        - required: false
          schema:
            type: string
            title: Webhook Data
          name: webhook_data
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/api/v1/lnurl/{link_id}:
    get:
      tags:
        - lnurlp
      summary: Lnurlp.Api Lnurl Response.Deprecated
      operationId: lnurlp_api_lnurl_response_deprecated_lnurlp_api_v1_lnurl__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
        - required: false
          schema:
            type: string
            title: Webhook Data
          name: webhook_data
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnurlp/api/v1/well-known/{username}:
    get:
      tags:
        - lnurlp
      summary: Lnaddress
      operationId: lnaddress_lnurlp_api_v1_well_known__username__get
      parameters:
        - required: true
          schema:
            type: string
            title: Username
          name: username
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /invoices/:
    get:
      tags:
        - invoices
      summary: Index
      operationId: index_invoices__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /invoices/pay/{invoice_id}:
    get:
      tags:
        - invoices
      summary: Pay
      operationId: pay_invoices_pay__invoice_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /invoices/api/v1/invoices:
    get:
      tags:
        - invoices
      summary: Api Invoices
      operationId: api_invoices_invoices_api_v1_invoices_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invoice'
                type: array
                title: Response Api Invoices Invoices Api V1 Invoices Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /invoices/api/v1/invoice/{invoice_id}:
    get:
      tags:
        - invoices
      summary: Api Invoice
      operationId: api_invoice_invoices_api_v1_invoice__invoice_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceFull'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - invoices
      summary: Api Invoice Update
      operationId: api_invoice_update_invoices_api_v1_invoice__invoice_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - invoices
      summary: Api Invoice Delete
      operationId: api_invoice_delete_invoices_api_v1_invoice__invoice_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /invoices/api/v1/invoice:
    post:
      tags:
        - invoices
      summary: Api Invoice Create
      operationId: api_invoice_create_invoices_api_v1_invoice_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /invoices/api/v1/invoice/{invoice_id}/payments:
    post:
      tags:
        - invoices
      summary: Api Invoices Create Payment
      operationId: >-
        api_invoices_create_payment_invoices_api_v1_invoice__invoice_id__payments_post
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceAmountPayment'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /invoices/api/v1/invoice/{invoice_id}/payments/{payment_hash}:
    get:
      tags:
        - invoices
      summary: Api Invoices Check Payment
      operationId: >-
        api_invoices_check_payment_invoices_api_v1_invoice__invoice_id__payments__payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice Id
          name: invoice_id
          in: path
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/:
    get:
      tags:
        - satspay
      summary: Index
      operationId: index_satspay__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satspay/{charge_id}:
    get:
      tags:
        - satspay
      summary: Display Charge
      operationId: display_charge_satspay__charge_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satspay/css/{css_id}:
    get:
      tags:
        - satspay
      summary: Display Css
      operationId: display_css_satspay_css__css_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Css Id
          name: css_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satspay/api/v1:
    get:
      tags:
        - satspay
      summary: Api Enabled
      operationId: api_enabled_satspay_api_v1_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Api Enabled Satspay Api V1 Get
  /satspay/api/v1/charge:
    post:
      tags:
        - satspay
      summary: Api Charge Create
      operationId: api_charge_create_satspay_api_v1_charge_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCharge'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/api/v1/charges:
    get:
      tags:
        - satspay
      summary: Api Charges Retrieve
      operationId: api_charges_retrieve_satspay_api_v1_charges_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Charge'
                type: array
                title: Response Api Charges Retrieve Satspay Api V1 Charges Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/api/v1/charge/balance/{charge_id}:
    get:
      tags:
        - satspay
      summary: Api Charge Retrieve
      description: >-
        This endpoint is used by the woocommerce plugin to check if the status
        of a charge

        is paid. you can refresh the success page of the webshop to trigger this
        endpoint.

        useful if the webhook is not working or fails for some reason.

        https://github.com/lnbits/woocommerce-payment-gateway/blob/main/lnbits.php#L312
      operationId: api_charge_retrieve_satspay_api_v1_charge_balance__charge_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - satspay
      summary: Api Charge Check Balance
      operationId: api_charge_check_balance_satspay_api_v1_charge_balance__charge_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/api/v1/charge/{charge_id}:
    get:
      tags:
        - satspay
      summary: Api Charge Retrieve
      description: >-
        This endpoint is used by the woocommerce plugin to check if the status
        of a charge

        is paid. you can refresh the success page of the webshop to trigger this
        endpoint.

        useful if the webhook is not working or fails for some reason.

        https://github.com/lnbits/woocommerce-payment-gateway/blob/main/lnbits.php#L312
      operationId: api_charge_retrieve_satspay_api_v1_charge__charge_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - satspay
      summary: Api Charge Delete
      operationId: api_charge_delete_satspay_api_v1_charge__charge_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/api/v1/charge/webhook/{charge_id}:
    get:
      tags:
        - satspay
      summary: Api Charge Webhook
      operationId: api_charge_webhook_satspay_api_v1_charge_webhook__charge_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Charge Id
          name: charge_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspay/api/v1/settings:
    get:
      tags:
        - satspay
      summary: Api Get Or Create Settings
      operationId: api_get_or_create_settings_satspay_api_v1_settings_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatspaySettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - satspay
      summary: Api Update Settings
      operationId: api_update_settings_satspay_api_v1_settings_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SatspaySettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatspaySettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - satspay
      summary: Api Delete Settings
      operationId: api_delete_settings_satspay_api_v1_settings_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satspay/api/v1/themes:
    get:
      tags:
        - satspay
      summary: Api Get Themes
      operationId: api_get_themes_satspay_api_v1_themes_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SatsPayTheme'
                type: array
                title: Response Api Get Themes Satspay Api V1 Themes Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - satspay
      summary: Api Themes Create
      operationId: api_themes_create_satspay_api_v1_themes_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSatsPayTheme'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatsPayTheme'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satspay/api/v1/themes/{css_id}:
    post:
      tags:
        - satspay
      summary: Api Themes Save
      operationId: api_themes_save_satspay_api_v1_themes__css_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Css Id
          name: css_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSatsPayTheme'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatsPayTheme'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satspay/api/v1/themes/{theme_id}:
    delete:
      tags:
        - satspay
      summary: Api Theme Delete
      operationId: api_theme_delete_satspay_api_v1_themes__theme_id__delete
      parameters:
        - required: true
          schema:
            title: Theme Id
          name: theme_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /paywall/:
    get:
      tags:
        - Paywall
      summary: Index
      operationId: index_paywall__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /paywall/{paywall_id}:
    get:
      tags:
        - Paywall
      summary: Display
      operationId: display_paywall__paywall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /paywall/api/v1/paywalls:
    get:
      tags:
        - Paywall
      summary: Api Paywalls
      operationId: api_paywalls_paywall_api_v1_paywalls_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Paywall'
                type: array
                title: Response Api Paywalls Paywall Api V1 Paywalls Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - Paywall
      summary: Api Paywall Create
      operationId: api_paywall_create_paywall_api_v1_paywalls_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaywall'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paywall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /paywall/api/v1/paywalls/{paywall_id}:
    put:
      tags:
        - Paywall
      summary: Api Paywall Update
      operationId: api_paywall_update_paywall_api_v1_paywalls__paywall_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaywall'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paywall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Paywall
      summary: Api Paywall Delete
      operationId: api_paywall_delete_paywall_api_v1_paywalls__paywall_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - Paywall
      summary: Api Paywall Update
      operationId: api_paywall_update_paywall_api_v1_paywalls__paywall_id__patch
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaywall'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paywall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /paywall/api/v1/paywalls/invoice/{paywall_id}:
    get:
      tags:
        - Paywall
      summary: Api Paywall Create Fixed Amount Invoice
      operationId: >-
        api_paywall_create_fixed_amount_invoice_paywall_api_v1_paywalls_invoice__paywall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
        - required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Paywall
      summary: Api Paywall Create Invoice
      operationId: >-
        api_paywall_create_invoice_paywall_api_v1_paywalls_invoice__paywall_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaywallInvoice'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /paywall/api/v1/paywalls/check_invoice/{paywall_id}:
    post:
      tags:
        - Paywall
      summary: Api Paywal Check Invoice
      operationId: >-
        api_paywal_check_invoice_paywall_api_v1_paywalls_check_invoice__paywall_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPaywallInvoice'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /paywall/download/{paywall_id}:
    get:
      tags:
        - Paywall
      summary: Api Paywall Download File
      operationId: api_paywall_download_file_paywall_download__paywall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
        - required: false
          schema:
            type: string
            title: Version
          name: version
          in: query
        - required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    head:
      tags:
        - Paywall
      summary: Api Paywall Check File
      operationId: api_paywall_check_file_paywall_download__paywall_id__head
      parameters:
        - required: true
          schema:
            type: string
            title: Paywall Id
          name: paywall_id
          in: path
        - required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/:
    get:
      tags:
        - withdraw
      summary: Index
      operationId: index_withdraw__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /withdraw/{link_id}:
    get:
      tags:
        - withdraw
      summary: Display
      operationId: display_withdraw__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/img/{link_id}:
    get:
      tags:
        - withdraw
      summary: Img
      operationId: img_withdraw_img__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/print/{link_id}:
    get:
      tags:
        - withdraw
      summary: Print Qr
      operationId: print_qr_withdraw_print__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/csv/{link_id}:
    get:
      tags:
        - withdraw
      summary: Csv
      operationId: csv_withdraw_csv__link_id__get
      parameters:
        - required: true
          schema:
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/api/v1/links:
    get:
      tags:
        - withdraw
      summary: Api Links
      operationId: api_links_withdraw_api_v1_links_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
            default: 0
          name: offset
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
            default: 0
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - withdraw
      summary: Api Link Create Or Update
      operationId: api_link_create_or_update_withdraw_api_v1_links_post
      parameters:
        - required: false
          schema:
            type: string
            title: Link Id
          name: link_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWithdrawData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /withdraw/api/v1/links/{link_id}:
    get:
      tags:
        - withdraw
      summary: Api Link Retrieve
      operationId: api_link_retrieve_withdraw_api_v1_links__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - withdraw
      summary: Api Link Create Or Update
      operationId: api_link_create_or_update_withdraw_api_v1_links__link_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWithdrawData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - withdraw
      summary: Api Link Delete
      operationId: api_link_delete_withdraw_api_v1_links__link_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /withdraw/api/v1/links/{the_hash}/{lnurl_id}:
    get:
      tags:
        - withdraw
      summary: Api Hash Retrieve
      operationId: api_hash_retrieve_withdraw_api_v1_links__the_hash___lnurl_id__get
      parameters:
        - required: true
          schema:
            title: The Hash
          name: the_hash
          in: path
        - required: true
          schema:
            title: Lnurl Id
          name: lnurl_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashCheck'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /withdraw/api/v1/lnurl/{unique_hash}:
    get:
      tags:
        - withdraw
      summary: Withdraw.Api Lnurl Response
      operationId: withdraw_api_lnurl_response_withdraw_api_v1_lnurl__unique_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Unique Hash
          name: unique_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/api/v1/lnurl/cb/{unique_hash}:
    get:
      tags:
        - withdraw
      summary: lnurl withdraw callback
      description: |-
        This endpoints allows you to put unique_hash, k1
                and a payment_request to get your payment_request paid.
      operationId: withdraw_api_lnurl_callback_withdraw_api_v1_lnurl_cb__unique_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Unique Hash
          name: unique_hash
          in: path
        - required: true
          schema:
            type: string
            title: K1
          name: k1
          in: query
        - required: true
          schema:
            type: string
            title: Pr
          name: pr
          in: query
        - required: false
          schema:
            type: string
            title: Id Unique Hash
          name: id_unique_hash
          in: query
      responses:
        '200':
          description: 'status: OK'
          content:
            application/json:
              schema: {}
        '400':
          description: k1 is wrong or link open time or withdraw not working.
        '404':
          description: withdraw link not found.
        '405':
          description: withdraw link is spent.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /withdraw/api/v1/lnurl/{unique_hash}/{id_unique_hash}:
    get:
      tags:
        - withdraw
      summary: Withdraw.Api Lnurl Multi Response
      operationId: >-
        withdraw_api_lnurl_multi_response_withdraw_api_v1_lnurl__unique_hash___id_unique_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Unique Hash
          name: unique_hash
          in: path
        - required: true
          schema:
            type: string
            title: Id Unique Hash
          name: id_unique_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /decoder/:
    get:
      tags:
        - decoder
      summary: Index
      operationId: index_decoder__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /gerty/:
    get:
      tags:
        - Gerty
      summary: Index
      operationId: index_gerty__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /gerty/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Display
      operationId: display_gerty__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty:
    get:
      tags:
        - Gerty
      summary: Api Gertys
      operationId: api_gertys_gerty_api_v1_gerty_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Gerty'
                type: array
                title: Response Api Gertys Gerty Api V1 Gerty Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - Gerty
      summary: Api Link Create
      operationId: api_link_create_gerty_api_v1_gerty_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGerty'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gerty'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /gerty/api/v1/gerty/{gerty_id}:
    put:
      tags:
        - Gerty
      summary: Api Link Update
      operationId: api_link_update_gerty_api_v1_gerty__gerty_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Gerty Id
          name: gerty_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gerty'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gerty'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Gerty
      summary: Api Gerty Delete
      operationId: api_gerty_delete_gerty_api_v1_gerty__gerty_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /gerty/api/v1/gerty/satoshiquote:
    get:
      tags:
        - Gerty
      summary: Api Gerty Satoshi
      operationId: api_gerty_satoshi_gerty_api_v1_gerty_satoshiquote_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /gerty/api/v1/gerty/pages/{gerty_id}/{p}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Json
      operationId: api_gerty_json_gerty_api_v1_gerty_pages__gerty_id___p__get
      parameters:
        - required: true
          schema:
            type: string
            title: Gerty Id
          name: gerty_id
          in: path
        - required: true
          schema:
            type: integer
            title: P
          name: p
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/fees-recommended/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Fees Recommended
      operationId: >-
        api_gerty_get_fees_recommended_gerty_api_v1_gerty_fees_recommended__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/hashrate-1w/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Hashrate 1W
      operationId: api_gerty_get_hashrate_1w_gerty_api_v1_gerty_hashrate_1w__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/hashrate-1m/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Hashrate 1M
      operationId: api_gerty_get_hashrate_1m_gerty_api_v1_gerty_hashrate_1m__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/statistics/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Statistics
      operationId: api_gerty_get_statistics_gerty_api_v1_gerty_statistics__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/difficulty-adjustment/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Difficulty Adjustment
      operationId: >-
        api_gerty_get_difficulty_adjustment_gerty_api_v1_gerty_difficulty_adjustment__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/tip-height/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Tip Height
      operationId: api_gerty_get_tip_height_gerty_api_v1_gerty_tip_height__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /gerty/api/v1/gerty/mempool/{gerty_id}:
    get:
      tags:
        - Gerty
      summary: Api Gerty Get Mempool
      operationId: api_gerty_get_mempool_gerty_api_v1_gerty_mempool__gerty_id__get
      parameters:
        - required: true
          schema:
            title: Gerty Id
          name: gerty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /example/:
    get:
      tags:
        - example
        - example
      summary: Index
      description: Example generic endpoint
      operationId: index_example__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /example/api/v1/test/{example_data}:
    get:
      tags:
        - example
      summary: Api Example
      description: Example API endpoint
      operationId: api_example_example_api_v1_test__example_data__get
      parameters:
        - required: true
          schema:
            type: string
            title: Example Data
          name: example_data
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /example/api/v1/vetted:
    get:
      tags:
        - example
      summary: Api Get Vetted
      description: Get the vetted extension readme
      operationId: api_get_vetted_example_api_v1_vetted_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bitcoinswitch/:
    get:
      tags:
        - bitcoinswitch
      summary: Index
      operationId: index_bitcoinswitch__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /bitcoinswitch/api/v1/bitcoinswitch:
    get:
      tags:
        - bitcoinswitch
      summary: Api Bitcoinswitchs Retrieve
      operationId: api_bitcoinswitchs_retrieve_bitcoinswitch_api_v1_bitcoinswitch_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Bitcoinswitch'
                type: array
                title: >-
                  Response Api Bitcoinswitchs Retrieve Bitcoinswitch Api V1
                  Bitcoinswitch Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - bitcoinswitch
      summary: Api Bitcoinswitch Create
      operationId: api_bitcoinswitch_create_bitcoinswitch_api_v1_bitcoinswitch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBitcoinswitch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bitcoinswitch'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bitcoinswitch/api/v1/bitcoinswitch/{bitcoinswitch_id}:
    get:
      tags:
        - bitcoinswitch
      summary: Api Bitcoinswitch Retrieve
      operationId: >-
        api_bitcoinswitch_retrieve_bitcoinswitch_api_v1_bitcoinswitch__bitcoinswitch_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Bitcoinswitch Id
          name: bitcoinswitch_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - bitcoinswitch
      summary: Api Bitcoinswitch Update
      operationId: >-
        api_bitcoinswitch_update_bitcoinswitch_api_v1_bitcoinswitch__bitcoinswitch_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Bitcoinswitch Id
          name: bitcoinswitch_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBitcoinswitch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - bitcoinswitch
      summary: Api Bitcoinswitch Delete
      operationId: >-
        api_bitcoinswitch_delete_bitcoinswitch_api_v1_bitcoinswitch__bitcoinswitch_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Bitcoinswitch Id
          name: bitcoinswitch_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bitcoinswitch/api/v1/lnurl{bitcoinswitch_id}:
    get:
      tags:
        - bitcoinswitch
      summary: Bitcoinswitch.Lnurl Params
      operationId: >-
        bitcoinswitch_lnurl_params_bitcoinswitch_api_v1_lnurl_bitcoinswitch_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Bitcoinswitch Id
          name: bitcoinswitch_id
          in: path
        - required: true
          schema:
            type: string
            title: Pin
          name: pin
          in: query
        - required: true
          schema:
            type: string
            title: Amount
          name: amount
          in: query
        - required: true
          schema:
            type: string
            title: Duration
          name: duration
          in: query
        - required: false
          schema:
            type: boolean
            title: Variable
          name: variable
          in: query
        - required: false
          schema:
            type: boolean
            title: Comment
          name: comment
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bitcoinswitch/api/v1/lnurl/cb/{payment_id}:
    get:
      tags:
        - bitcoinswitch
      summary: Bitcoinswitch.Lnurl Callback
      operationId: >-
        bitcoinswitch_lnurl_callback_bitcoinswitch_api_v1_lnurl_cb__payment_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Id
          name: payment_id
          in: path
        - required: false
          schema:
            type: string
            title: Variable
          name: variable
          in: query
        - required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - required: false
          schema:
            type: string
            title: Comment
          name: comment
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /scrub/:
    get:
      tags:
        - scrub
      summary: Index
      operationId: index_scrub__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /scrub/api/v1/links:
    get:
      tags:
        - scrub
      summary: Api Links
      operationId: api_links_scrub_api_v1_links_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScrubLink'
                type: array
                title: Response Api Links Scrub Api V1 Links Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - scrub
      summary: Api Scrub Create Or Update
      operationId: api_scrub_create_or_update_scrub_api_v1_links_post
      parameters:
        - required: false
          schema:
            type: string
            title: Link Id
          name: link_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScrubLink'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scrub/api/v1/links/{link_id}:
    get:
      tags:
        - scrub
      summary: Api Link Retrieve
      operationId: api_link_retrieve_scrub_api_v1_links__link_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - scrub
      summary: Api Scrub Create Or Update
      operationId: api_scrub_create_or_update_scrub_api_v1_links__link_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScrubLink'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - scrub
      summary: Api Link Delete
      operationId: api_link_delete_scrub_api_v1_links__link_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Link Id
          name: link_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lncalendar/:
    get:
      tags:
        - LNCalendar
      summary: Index
      operationId: index_lncalendar__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lncalendar/{schedule_id}:
    get:
      tags:
        - LNCalendar
      summary: Display
      operationId: display_lncalendar__schedule_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/schedule:
    get:
      tags:
        - LNCalendar
      summary: Api Schedules
      operationId: api_schedules_lncalendar_api_v1_schedule_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - LNCalendar
      summary: Api Schedule Create
      operationId: api_schedule_create_lncalendar_api_v1_schedule_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchedule'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lncalendar/api/v1/schedule/{schedule_id}:
    put:
      tags:
        - LNCalendar
      summary: Api Schedule Update
      operationId: api_schedule_update_lncalendar_api_v1_schedule__schedule_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchedule'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - LNCalendar
      summary: Api Schedule Delete
      operationId: api_schedule_delete_lncalendar_api_v1_schedule__schedule_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lncalendar/api/v1/appointment:
    get:
      tags:
        - LNCalendar
      summary: Api Get All Appointments
      operationId: api_get_all_appointments_lncalendar_api_v1_appointment_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - LNCalendar
      summary: Api Appointment Create
      operationId: api_appointment_create_lncalendar_api_v1_appointment_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointment'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/appointment/purge/{schedule_id}:
    get:
      tags:
        - LNCalendar
      summary: Api Purge Appointments
      operationId: >-
        api_purge_appointments_lncalendar_api_v1_appointment_purge__schedule_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/appointment/{schedule_id}/{payment_hash}:
    get:
      tags:
        - LNCalendar
      summary: Api Appointment Check Invoice
      operationId: >-
        api_appointment_check_invoice_lncalendar_api_v1_appointment__schedule_id___payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/appointment/{schedule_id}:
    get:
      tags:
        - LNCalendar
      summary: Api Get Appointments Schedule
      operationId: >-
        api_get_appointments_schedule_lncalendar_api_v1_appointment__schedule_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/unavailable:
    post:
      tags:
        - LNCalendar
      summary: Api Unavailable Create
      operationId: api_unavailable_create_lncalendar_api_v1_unavailable_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUnavailableTime'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lncalendar/api/v1/unavailable/{schedule_id}:
    get:
      tags:
        - LNCalendar
      summary: Api Unavailable Get
      operationId: api_unavailable_get_lncalendar_api_v1_unavailable__schedule_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lncalendar/api/v1/unavailable/{schedule_id}/{unavailable_id}:
    delete:
      tags:
        - LNCalendar
      summary: Api Unavailable Delete
      operationId: >-
        api_unavailable_delete_lncalendar_api_v1_unavailable__schedule_id___unavailable_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Schedule Id
          name: schedule_id
          in: path
        - required: true
          schema:
            type: string
            title: Unavailable Id
          name: unavailable_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnticket/:
    get:
      tags:
        - LNTicket
      summary: Index
      operationId: index_lnticket__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lnticket/{form_id}:
    get:
      tags:
        - LNTicket
      summary: Display
      operationId: display_lnticket__form_id__get
      parameters:
        - required: true
          schema:
            title: Form Id
          name: form_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnticket/api/v1/forms:
    get:
      tags:
        - LNTicket
      summary: Api Forms Get
      operationId: api_forms_get_lnticket_api_v1_forms_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Form'
                type: array
                title: Response Api Forms Get Lnticket Api V1 Forms Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - LNTicket
      summary: Api Form Create
      operationId: api_form_create_lnticket_api_v1_forms_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnticket/api/v1/forms/{form_id}:
    put:
      tags:
        - LNTicket
      summary: Api Form Update
      operationId: api_form_update_lnticket_api_v1_forms__form_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Form Id
          name: form_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - LNTicket
      summary: Api Form Delete
      operationId: api_form_delete_lnticket_api_v1_forms__form_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Form Id
          name: form_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnticket/api/v1/tickets:
    get:
      tags:
        - LNTicket
      summary: Api Tickets
      operationId: api_tickets_lnticket_api_v1_tickets_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__lnticket__models__Ticket
                type: array
                title: Response Api Tickets Lnticket Api V1 Tickets Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnticket/api/v1/tickets/{form_id}:
    post:
      tags:
        - LNTicket
      summary: Api Ticket Make Ticket
      operationId: api_ticket_make_ticket_lnticket_api_v1_tickets__form_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Form Id
          name: form_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnticket/api/v1/tickets/{payment_hash}:
    get:
      tags:
        - LNTicket
      summary: Api Ticket Send Ticket
      operationId: api_ticket_send_ticket_lnticket_api_v1_tickets__payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnticket/api/v1/tickets/{ticket_id}:
    delete:
      tags:
        - LNTicket
      summary: Api Ticket Delete
      operationId: api_ticket_delete_lnticket_api_v1_tickets__ticket_id__delete
      parameters:
        - required: true
          schema:
            title: Ticket Id
          name: ticket_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /raisenow/:
    get:
      tags:
        - raisenow
      summary: Index
      operationId: index_raisenow__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /raisenow/{raisenow_id}:
    get:
      tags:
        - raisenow
      summary: Raisenow
      operationId: raisenow_raisenow__raisenow_id__get
      parameters:
        - required: true
          schema:
            title: Raisenow Id
          name: raisenow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /raisenow/manifest/{raisenow_id}.webmanifest:
    get:
      tags:
        - raisenow
      summary: Manifest
      operationId: manifest_raisenow_manifest__raisenow_id__webmanifest_get
      parameters:
        - required: true
          schema:
            type: string
            title: Raisenow Id
          name: raisenow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /raisenow/api/v1/ranow:
    get:
      tags:
        - raisenow
      summary: Api Raisenows
      operationId: api_raisenows_raisenow_api_v1_ranow_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - raisenow
      summary: Api Raisenow Update
      operationId: api_raisenow_update_raisenow_api_v1_ranow_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RaiseNow'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - raisenow
      summary: Api Raisenow Create
      operationId: api_raisenow_create_raisenow_api_v1_ranow_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRaiseNowData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /raisenow/api/v1/ranow/{raisenow_id}:
    get:
      tags:
        - raisenow
      summary: Api Raisenow
      operationId: api_raisenow_raisenow_api_v1_ranow__raisenow_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Raisenow Id
          name: raisenow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - raisenow
      summary: Api Raisenow Delete
      operationId: api_raisenow_delete_raisenow_api_v1_ranow__raisenow_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Raisenow Id
          name: raisenow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /raisenow/api/v1/participants/{raisenow_id}:
    get:
      tags:
        - raisenow
      summary: Api Participants
      operationId: api_participants_raisenow_api_v1_participants__raisenow_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Raisenow Id
          name: raisenow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /raisenow/api/v1/participant/{participant_id}:
    get:
      tags:
        - raisenow
      summary: Api Participant
      operationId: api_participant_raisenow_api_v1_participant__participant_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Participant Id
          name: participant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - raisenow
      summary: Api Participant Update
      operationId: api_participant_update_raisenow_api_v1_participant__participant_id__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - raisenow
      summary: Api Participant Delete
      operationId: >-
        api_participant_delete_raisenow_api_v1_participant__participant_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Participant Id
          name: participant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /raisenow/api/v1/participant:
    post:
      tags:
        - raisenow
      summary: Api Participant Create
      operationId: api_participant_create_raisenow_api_v1_participant_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParticipantData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /raisenow/api/v1/lnurl/pay/{record_id}:
    get:
      tags:
        - raisenow
      summary: Raisenow.Api Lnurl Pay
      operationId: raisenow_api_lnurl_pay_raisenow_api_v1_lnurl_pay__record_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Record Id
          name: record_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /raisenow/api/v1/lnurl/pay/cb/{record_id}:
    get:
      tags:
        - raisenow
      summary: Raisenow.Api Lnurl Pay Callback
      operationId: >-
        raisenow_api_lnurl_pay_callback_raisenow_api_v1_lnurl_pay_cb__record_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Record Id
          name: record_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrmarket/:
    get:
      tags:
        - nostrmarket
      summary: Index
      operationId: index_nostrmarket__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrmarket/market:
    get:
      tags:
        - nostrmarket
      summary: Market
      operationId: market_nostrmarket_market_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /nostrmarket/api/v1/merchant:
    get:
      tags:
        - nostrmarket
      summary: Api Get Merchant
      operationId: api_get_merchant_nostrmarket_api_v1_merchant_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - nostrmarket
      summary: Api Create Merchant
      operationId: api_create_merchant_nostrmarket_api_v1_merchant_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialMerchant'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/merchant/{merchant_id}:
    delete:
      tags:
        - nostrmarket
      summary: Api Delete Merchant
      operationId: api_delete_merchant_nostrmarket_api_v1_merchant__merchant_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Merchant Id
          name: merchant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/merchant/{merchant_id}/nostr:
    get:
      tags:
        - nostrmarket
      summary: Api Refresh Merchant
      operationId: api_refresh_merchant_nostrmarket_api_v1_merchant__merchant_id__nostr_get
      parameters:
        - required: true
          schema:
            type: string
            title: Merchant Id
          name: merchant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - nostrmarket
      summary: Api Republish Merchant
      operationId: >-
        api_republish_merchant_nostrmarket_api_v1_merchant__merchant_id__nostr_put
      parameters:
        - required: true
          schema:
            type: string
            title: Merchant Id
          name: merchant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - nostrmarket
      summary: Api Delete Merchant On Nostr
      operationId: >-
        api_delete_merchant_on_nostr_nostrmarket_api_v1_merchant__merchant_id__nostr_delete
      parameters:
        - required: true
          schema:
            type: string
            title: Merchant Id
          name: merchant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/merchant/{merchant_id}/toggle:
    put:
      tags:
        - nostrmarket
      summary: Api Toggle Merchant
      operationId: api_toggle_merchant_nostrmarket_api_v1_merchant__merchant_id__toggle_put
      parameters:
        - required: true
          schema:
            type: string
            title: Merchant Id
          name: merchant_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/zone:
    get:
      tags:
        - nostrmarket
      summary: Api Get Zones
      operationId: api_get_zones_nostrmarket_api_v1_zone_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
                title: Response Api Get Zones Nostrmarket Api V1 Zone Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - nostrmarket
      summary: Api Create Zone
      operationId: api_create_zone_nostrmarket_api_v1_zone_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/zone/{zone_id}:
    delete:
      tags:
        - nostrmarket
      summary: Api Delete Zone
      operationId: api_delete_zone_nostrmarket_api_v1_zone__zone_id__delete
      parameters:
        - required: true
          schema:
            title: Zone Id
          name: zone_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - nostrmarket
      summary: Api Update Zone
      operationId: api_update_zone_nostrmarket_api_v1_zone__zone_id__patch
      parameters:
        - required: true
          schema:
            type: string
            title: Zone Id
          name: zone_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/stall:
    get:
      tags:
        - nostrmarket
      summary: Api Get Stalls
      operationId: api_get_stalls_nostrmarket_api_v1_stall_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: Pending
            default: false
          name: pending
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - nostrmarket
      summary: Api Create Stall
      operationId: api_create_stall_nostrmarket_api_v1_stall_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stall'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/stall/{stall_id}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Stall
      operationId: api_get_stall_nostrmarket_api_v1_stall__stall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Stall Id
          name: stall_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - nostrmarket
      summary: Api Update Stall
      operationId: api_update_stall_nostrmarket_api_v1_stall__stall_id__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stall'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - nostrmarket
      summary: Api Delete Stall
      operationId: api_delete_stall_nostrmarket_api_v1_stall__stall_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Stall Id
          name: stall_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/stall/product/{stall_id}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Stall Products
      operationId: api_get_stall_products_nostrmarket_api_v1_stall_product__stall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Stall Id
          name: stall_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Pending
            default: false
          name: pending
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/stall/order/{stall_id}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Stall Orders
      operationId: api_get_stall_orders_nostrmarket_api_v1_stall_order__stall_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Stall Id
          name: stall_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Paid
          name: paid
          in: query
        - required: false
          schema:
            type: boolean
            title: Shipped
          name: shipped
          in: query
        - required: false
          schema:
            type: string
            title: Pubkey
          name: pubkey
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/product:
    post:
      tags:
        - nostrmarket
      summary: Api Create Product
      operationId: api_create_product_nostrmarket_api_v1_product_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/product/{product_id}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Product
      operationId: api_get_product_nostrmarket_api_v1_product__product_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Product Id
          name: product_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - nostrmarket
      summary: Api Delete Product
      operationId: api_delete_product_nostrmarket_api_v1_product__product_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Product Id
          name: product_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - nostrmarket
      summary: Api Update Product
      operationId: api_update_product_nostrmarket_api_v1_product__product_id__patch
      parameters:
        - required: true
          schema:
            type: string
            title: Product Id
          name: product_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/order/{order_id}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Order
      operationId: api_get_order_nostrmarket_api_v1_order__order_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Order Id
          name: order_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - nostrmarket
      summary: Api Update Order Status
      operationId: api_update_order_status_nostrmarket_api_v1_order__order_id__patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/order:
    get:
      tags:
        - nostrmarket
      summary: Api Get Orders
      operationId: api_get_orders_nostrmarket_api_v1_order_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: Paid
          name: paid
          in: query
        - required: false
          schema:
            type: boolean
            title: Shipped
          name: shipped
          in: query
        - required: false
          schema:
            type: string
            title: Pubkey
          name: pubkey
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/order/restore/{event_id}:
    put:
      tags:
        - nostrmarket
      summary: Api Restore Order
      operationId: api_restore_order_nostrmarket_api_v1_order_restore__event_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Event Id
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/orders/restore:
    put:
      tags:
        - nostrmarket
      summary: Api Restore Orders
      operationId: api_restore_orders_nostrmarket_api_v1_orders_restore_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/order/reissue:
    put:
      tags:
        - nostrmarket
      summary: Api Reissue Order Invoice
      operationId: api_reissue_order_invoice_nostrmarket_api_v1_order_reissue_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderReissue'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/message/{public_key}:
    get:
      tags:
        - nostrmarket
      summary: Api Get Messages
      operationId: api_get_messages_nostrmarket_api_v1_message__public_key__get
      parameters:
        - required: true
          schema:
            type: string
            title: Public Key
          name: public_key
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DirectMessage'
                type: array
                title: >-
                  Response Api Get Messages Nostrmarket Api V1 Message  Public
                  Key  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/message:
    post:
      tags:
        - nostrmarket
      summary: Api Create Message
      operationId: api_create_message_nostrmarket_api_v1_message_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialDirectMessage'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/customer:
    get:
      tags:
        - nostrmarket
      summary: Api Get Customers
      operationId: api_get_customers_nostrmarket_api_v1_customer_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Customer'
                type: array
                title: Response Api Get Customers Nostrmarket Api V1 Customer Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - nostrmarket
      summary: Api Create Customer
      operationId: api_create_customer_nostrmarket_api_v1_customer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrmarket/api/v1/currencies:
    get:
      tags:
        - nostrmarket
      summary: Api List Currencies Available
      operationId: api_list_currencies_available_nostrmarket_api_v1_currencies_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /nostrmarket/api/v1/restart:
    put:
      tags:
        - nostrmarket
      summary: Restart Nostr Client
      operationId: restart_nostr_client_nostrmarket_api_v1_restart_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/:
    get:
      tags:
        - nostrnip5
      summary: Index
      operationId: index_nostrnip5__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/domain/{domain_id}:
    get:
      tags:
        - nostrnip5
      summary: Domain Details
      operationId: domain_details_nostrnip5_domain__domain_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/signup/{domain_id}:
    get:
      tags:
        - nostrnip5
      summary: Signup
      operationId: signup_nostrnip5_signup__domain_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            title: Identifier
          name: identifier
          in: query
        - required: false
          schema:
            type: integer
            title: Years
          name: years
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/rotate/{domain_id}/{address_id}:
    get:
      tags:
        - nostrnip5
      summary: Rotate
      operationId: rotate_nostrnip5_rotate__domain_id___address_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
        - required: false
          schema:
            type: string
            title: Secret
          name: secret
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/api/v1/domains:
    get:
      tags:
        - nostrnip5
      summary: Api Domains
      operationId: api_domains_nostrnip5_api_v1_domains_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
                title: Response Api Domains Nostrnip5 Api V1 Domains Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}:
    get:
      tags:
        - nostrnip5
      summary: Api Get Domain
      operationId: api_get_domain_nostrnip5_api_v1_domain__domain_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - nostrnip5
      summary: Api Domain Delete
      operationId: api_domain_delete_nostrnip5_api_v1_domain__domain_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain:
    put:
      tags:
        - nostrnip5
      summary: Api Update Domain
      operationId: api_update_domain_nostrnip5_api_v1_domain_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDomainData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - nostrnip5
      summary: Api Create Domain
      operationId: api_create_domain_nostrnip5_api_v1_domain_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}/nostr.json:
    get:
      tags:
        - nostrnip5
      summary: Api Get Nostr Json
      operationId: api_get_nostr_json_nostrnip5_api_v1_domain__domain_id__nostr_json_get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/api/v1/domain/{domain_id}/search:
    get:
      tags:
        - nostrnip5
      summary: Api Search Identifier
      operationId: api_search_identifier_nostrnip5_api_v1_domain__domain_id__search_get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            title: Q
          name: q
          in: query
        - required: false
          schema:
            type: integer
            title: Years
          name: years
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/api/v1/domain/{domain_id}/payments/{payment_hash}:
    get:
      tags:
        - nostrnip5
      summary: Api Check Address Payment
      operationId: >-
        api_check_address_payment_nostrnip5_api_v1_domain__domain_id__payments__payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/api/v1/addresses:
    get:
      tags:
        - nostrnip5
      summary: Api Get Addresses
      operationId: api_get_addresses_nostrnip5_api_v1_addresses_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/lnbits__extensions__nostrnip5__models__Address
                type: array
                title: Response Api Get Addresses Nostrnip5 Api V1 Addresses Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/addresses/paginated:
    get:
      tags:
        - nostrnip5
      summary: get paginated list of addresses
      operationId: Addresses_List_nostrnip5_api_v1_addresses_paginated_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
          name: all_wallets
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Local Part
          name: local_part
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Reimburse Amount
          name: reimburse_amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Pubkey
          name: pubkey
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: boolean
            title: Active
          name: active
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
      responses:
        '200':
          description: list of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}/address/{address_id}:
    put:
      tags:
        - nostrnip5
      summary: Api Update Address
      operationId: >-
        api_update_address_nostrnip5_api_v1_domain__domain_id__address__address_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__nostrnip5__models__Address
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - nostrnip5
      summary: Api Delete Address
      operationId: >-
        api_delete_address_nostrnip5_api_v1_domain__domain_id__address__address_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}/address/{address_id}/activate:
    put:
      tags:
        - nostrnip5
      summary: Api Activate Address
      operationId: >-
        api_activate_address_nostrnip5_api_v1_domain__domain_id__address__address_id__activate_put
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__nostrnip5__models__Address
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}/address/{address_id}/reimburse:
    get:
      tags:
        - nostrnip5
      summary: Api Address Reimburse
      operationId: >-
        api_address_reimburse_nostrnip5_api_v1_domain__domain_id__address__address_id__reimburse_get
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/domain/{domain_id}/address:
    post:
      tags:
        - nostrnip5
      summary: Api Request Address
      operationId: api_request_address_nostrnip5_api_v1_domain__domain_id__address_post
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrnip5/api/v1/user/addresses:
    get:
      tags:
        - nostrnip5
      summary: Api Get User Addresses
      operationId: api_get_user_addresses_nostrnip5_api_v1_user_addresses_get
      parameters:
        - required: false
          schema:
            type: string
            title: Local Part
          name: local_part
          in: query
        - required: false
          schema:
            type: boolean
            title: Active
          name: active
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/user/domain/{domain_id}/address/{address_id}:
    put:
      tags:
        - nostrnip5
      summary: Api Update User Address
      operationId: >-
        api_update_user_address_nostrnip5_api_v1_user_domain__domain_id__address__address_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__nostrnip5__models__Address
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - nostrnip5
      summary: Api Delete User Address
      operationId: >-
        api_delete_user_address_nostrnip5_api_v1_user_domain__domain_id__address__address_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/domain/{domain_id}/address/{address_id}/rotate:
    put:
      tags:
        - nostrnip5
      summary: Api Rotate User Address
      operationId: >-
        api_rotate_user_address_nostrnip5_api_v1_domain__domain_id__address__address_id__rotate_put
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RotateAddressData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrnip5/api/v1/user/domain/{domain_id}/address:
    post:
      tags:
        - nostrnip5
      summary: Api Request User Address
      operationId: >-
        api_request_user_address_nostrnip5_api_v1_user_domain__domain_id__address_post
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/public/domain/{domain_id}/address:
    post:
      tags:
        - nostrnip5
      summary: Api Request Public User Address
      operationId: >-
        api_request_public_user_address_nostrnip5_api_v1_public_domain__domain_id__address_post
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/user/domain/{domain_id}/address/{address_id}/lnaddress:
    put:
      tags:
        - nostrnip5
      summary: Api Lnurl Create Or Update
      operationId: >-
        api_lnurl_create_or_update_nostrnip5_api_v1_user_domain__domain_id__address__address_id__lnaddress_put
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LnAddressConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - nostrnip5
      summary: Api Lnurl Create Or Update
      operationId: >-
        api_lnurl_create_or_update_nostrnip5_api_v1_user_domain__domain_id__address__address_id__lnaddress_post
      parameters:
        - required: true
          schema:
            type: string
            title: Domain Id
          name: domain_id
          in: path
        - required: true
          schema:
            type: string
            title: Address Id
          name: address_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LnAddressConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/domain/ranking/{bucket}:
    put:
      tags:
        - nostrnip5
      summary: Api Refresh Identifier Ranking
      operationId: >-
        api_refresh_identifier_ranking_nostrnip5_api_v1_domain_ranking__bucket__put
      parameters:
        - required: true
          schema:
            type: integer
            title: Bucket
          name: bucket
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    patch:
      tags:
        - nostrnip5
      summary: Api Add Identifier Ranking
      operationId: >-
        api_add_identifier_ranking_nostrnip5_api_v1_domain_ranking__bucket__patch
      parameters:
        - required: true
          schema:
            type: integer
            title: Bucket
          name: bucket
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/ranking/search:
    get:
      tags:
        - nostrnip5
      summary: Api Domain Search Address
      operationId: api_domain_search_address_nostrnip5_api_v1_ranking_search_get
      parameters:
        - required: false
          schema:
            type: string
            title: Q
          name: q
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierRanking'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/ranking:
    put:
      tags:
        - nostrnip5
      summary: Api Domain Update Ranking
      operationId: api_domain_update_ranking_nostrnip5_api_v1_ranking_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifierRanking'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierRanking'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrnip5/api/v1/settings:
    get:
      tags:
        - nostrnip5
      summary: Api Get Settings
      operationId: api_get_settings_nostrnip5_api_v1_settings_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nip5Settings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - nostrnip5
      summary: Api Settings Create Or Update
      operationId: api_settings_create_or_update_nostrnip5_api_v1_settings_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nip5Settings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - nostrnip5
      summary: Api Settings Create Or Update
      operationId: api_settings_create_or_update_nostrnip5_api_v1_settings_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nip5Settings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrclient/:
    get:
      tags:
        - nostrclient
      summary: Index
      operationId: index_nostrclient__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrclient/api/v1/relays:
    get:
      tags:
        - nostrclient
      summary: Api Get Relays
      operationId: api_get_relays_nostrclient_api_v1_relays_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Relay'
                type: array
                title: Response Api Get Relays Nostrclient Api V1 Relays Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrclient/api/v1/relay:
    post:
      tags:
        - nostrclient
      summary: Api Add Relay
      operationId: api_add_relay_nostrclient_api_v1_relay_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relay'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Relay'
                type: array
                title: Response Api Add Relay Nostrclient Api V1 Relay Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - nostrclient
      summary: Api Delete Relay
      operationId: api_delete_relay_nostrclient_api_v1_relay_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relay'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrclient/api/v1/relay/test:
    put:
      tags:
        - nostrclient
      summary: Api Test Endpoint
      operationId: api_test_endpoint_nostrclient_api_v1_relay_test_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMessage'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMessageResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrclient/api/v1/config:
    get:
      tags:
        - nostrclient
      summary: Api Get Config
      operationId: api_get_config_nostrclient_api_v1_config_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/lnbits__extensions__nostrclient__models__Config
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - nostrclient
      summary: Api Update Config
      operationId: api_update_config_nostrclient_api_v1_config_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/lnbits__extensions__nostrclient__models__Config
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrrelay/:
    get:
      tags:
        - NostrRelay
      summary: Index
      operationId: index_nostrrelay__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /nostrrelay/{relay_id}:
    get:
      tags:
        - NostrRelay
      summary: Nostrrelay
      operationId: nostrrelay_nostrrelay__relay_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /nostrrelay/api/v1/relay:
    get:
      tags:
        - NostrRelay
      summary: Api Get Relays
      operationId: api_get_relays_nostrrelay_api_v1_relay_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NostrRelay'
                type: array
                title: Response Api Get Relays Nostrrelay Api V1 Relay Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - NostrRelay
      summary: Api Create Relay
      operationId: api_create_relay_nostrrelay_api_v1_relay_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NostrRelay'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NostrRelay'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrrelay/api/v1/relay/{relay_id}:
    get:
      tags:
        - NostrRelay
      summary: Api Get Relay
      operationId: api_get_relay_nostrrelay_api_v1_relay__relay_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NostrRelay'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - NostrRelay
      summary: Api Toggle Relay
      operationId: api_toggle_relay_nostrrelay_api_v1_relay__relay_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NostrRelay'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - NostrRelay
      summary: Api Delete Relay
      operationId: api_delete_relay_nostrrelay_api_v1_relay__relay_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - NostrRelay
      summary: Api Update Relay
      operationId: api_update_relay_nostrrelay_api_v1_relay__relay_id__patch
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NostrRelay'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NostrRelay'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrrelay/api/v1/relay-info:
    get:
      tags:
        - NostrRelay
      summary: Api Get Relay Info
      operationId: api_get_relay_info_nostrrelay_api_v1_relay_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /nostrrelay/api/v1/account:
    get:
      tags:
        - NostrRelay
      summary: Api Get Accounts
      operationId: api_get_accounts_nostrrelay_api_v1_account_get
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: query
        - required: false
          schema:
            type: boolean
            title: Allowed
            default: false
          name: allowed
          in: query
        - required: false
          schema:
            type: boolean
            title: Blocked
            default: true
          name: blocked
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NostrAccount'
                type: array
                title: Response Api Get Accounts Nostrrelay Api V1 Account Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - NostrRelay
      summary: Api Create Or Update Account
      operationId: api_create_or_update_account_nostrrelay_api_v1_account_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NostrPartialAccount'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NostrAccount'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrrelay/api/v1/account/{relay_id}/{pubkey}:
    delete:
      tags:
        - NostrRelay
      summary: Api Delete Account
      operationId: api_delete_account_nostrrelay_api_v1_account__relay_id___pubkey__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Relay Id
          name: relay_id
          in: path
        - required: true
          schema:
            type: string
            title: Pubkey
          name: pubkey
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /nostrrelay/api/v1/pay:
    put:
      tags:
        - NostrRelay
      summary: Api Pay To Join
      operationId: api_pay_to_join_nostrrelay_api_v1_pay_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOrder'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/:
    get:
      tags:
        - boltcards
      summary: Index
      operationId: index_boltcards__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /boltcards/{card_id}:
    get:
      tags:
        - boltcards
      summary: Display
      operationId: display_boltcards__card_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Card Id
          name: card_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/api/v1/cards:
    get:
      tags:
        - boltcards
      summary: Api Cards
      operationId: api_cards_boltcards_api_v1_cards_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Card'
                type: array
                title: Response Api Cards Boltcards Api V1 Cards Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - boltcards
      summary: Api Card Create
      operationId: api_card_create_boltcards_api_v1_cards_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltcards/api/v1/cards/{card_id}:
    put:
      tags:
        - boltcards
      summary: Api Card Update
      operationId: api_card_update_boltcards_api_v1_cards__card_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Card Id
          name: card_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - boltcards
      summary: Api Card Delete
      operationId: api_card_delete_boltcards_api_v1_cards__card_id__delete
      parameters:
        - required: true
          schema:
            title: Card Id
          name: card_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltcards/api/v1/cards/enable/{card_id}/{enable}:
    get:
      tags:
        - boltcards
      summary: Enable Card
      operationId: enable_card_boltcards_api_v1_cards_enable__card_id___enable__get
      parameters:
        - required: true
          schema:
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            title: Enable
          name: enable
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltcards/api/v1/hits:
    get:
      tags:
        - boltcards
      summary: Api Hits
      operationId: api_hits_boltcards_api_v1_hits_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hit'
                type: array
                title: Response Api Hits Boltcards Api V1 Hits Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltcards/api/v1/refunds:
    get:
      tags:
        - boltcards
      summary: Api Refunds
      operationId: api_refunds_boltcards_api_v1_refunds_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Refund'
                type: array
                title: Response Api Refunds Boltcards Api V1 Refunds Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /boltcards/api/v1/scan/{external_id}:
    get:
      tags:
        - boltcards
      summary: Api Scan
      operationId: api_scan_boltcards_api_v1_scan__external_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: External Id
          name: external_id
          in: path
        - required: true
          schema:
            title: P
          name: p
          in: query
        - required: true
          schema:
            title: C
          name: c
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/api/v1/lnurl/cb/{hit_id}:
    get:
      tags:
        - boltcards
      summary: Boltcards.Lnurl Callback
      operationId: boltcards_lnurl_callback_boltcards_api_v1_lnurl_cb__hit_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Hit Id
          name: hit_id
          in: path
        - required: false
          schema:
            type: string
            title: K1
          name: k1
          in: query
        - required: false
          schema:
            type: string
            title: Pr
          name: pr
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/api/v1/auth:
    get:
      tags:
        - boltcards
      summary: Api Auth
      operationId: api_auth_boltcards_api_v1_auth_get
      parameters:
        - required: true
          schema:
            title: A
          name: a
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/api/v1/lnurlp/{hit_id}:
    get:
      tags:
        - boltcards
      summary: Boltcards.Lnurlp Response
      operationId: boltcards_lnurlp_response_boltcards_api_v1_lnurlp__hit_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Hit Id
          name: hit_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boltcards/api/v1/lnurlp/cb/{hit_id}:
    get:
      tags:
        - boltcards
      summary: Boltcards.Lnurlp Callback
      operationId: boltcards_lnurlp_callback_boltcards_api_v1_lnurlp_cb__hit_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Hit Id
          name: hit_id
          in: path
        - required: false
          schema:
            type: string
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnpos/:
    get:
      tags:
        - lnpos
      summary: Index
      operationId: index_lnpos__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lnpos/{payment_id}:
    get:
      tags:
        - lnpos
      summary: Lnpos.Displaypin
      operationId: lnpos_displaypin_lnpos__payment_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Id
          name: payment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnpos/api/v1:
    get:
      tags:
        - lnpos
      summary: Api Lnposs Get
      operationId: api_lnposs_get_lnpos_api_v1_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - lnpos
      summary: Api Lnpos Create
      operationId: api_lnpos_create_lnpos_api_v1_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLnpos'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnpos/api/v1/{lnpos_id}:
    get:
      tags:
        - lnpos
      summary: Api Lnpos Get
      operationId: api_lnpos_get_lnpos_api_v1__lnpos_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Lnpos Id
          name: lnpos_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - lnpos
      summary: Api Lnpos Update
      operationId: api_lnpos_update_lnpos_api_v1__lnpos_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Lnpos Id
          name: lnpos_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLnpos'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - lnpos
      summary: Api Lnpos Delete
      operationId: api_lnpos_delete_lnpos_api_v1__lnpos_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Lnpos Id
          name: lnpos_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /lnpos/api/v1/lnurl/{lnpos_id}:
    get:
      tags:
        - lnpos
      summary: Lnpos.Lnurl V1 Params
      operationId: lnpos_lnurl_v1_params_lnpos_api_v1_lnurl__lnpos_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Lnpos Id
          name: lnpos_id
          in: path
        - required: false
          schema:
            type: string
            title: P
          name: p
          in: query
        - required: false
          schema:
            type: string
            title: Atm
          name: atm
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lnpos/api/v1/lnurl/cb/{payment_id}:
    get:
      tags:
        - lnpos
      summary: Lnpos.Lnurl Callback
      operationId: lnpos_lnurl_callback_lnpos_api_v1_lnurl_cb__payment_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Id
          name: payment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/:
    get:
      tags:
        - fossa
      summary: Index
      operationId: index_fossa__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /fossa/atm:
    get:
      tags:
        - fossa
      summary: Atmpage
      operationId: atmpage_fossa_atm_get
      parameters:
        - required: true
          schema:
            type: string
            title: Lightning
          name: lightning
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/print/{payment_id}:
    get:
      tags:
        - fossa
      summary: Print Receipt
      operationId: print_receipt_fossa_print__payment_id__get
      parameters:
        - required: true
          schema:
            title: Payment Id
          name: payment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/api/v1/fossa:
    get:
      tags:
        - fossa
      summary: Api Fossas Retrieve
      operationId: api_fossas_retrieve_fossa_api_v1_fossa_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Fossa'
                type: array
                title: Response Api Fossas Retrieve Fossa Api V1 Fossa Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - fossa
      summary: Api Fossa Create
      operationId: api_fossa_create_fossa_api_v1_fossa_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFossa'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fossa'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /fossa/api/v1/fossa/{fossa_id}:
    get:
      tags:
        - fossa
      summary: Api Fossa Retrieve
      operationId: api_fossa_retrieve_fossa_api_v1_fossa__fossa_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Fossa Id
          name: fossa_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fossa'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - fossa
      summary: Api Fossa Update
      operationId: api_fossa_update_fossa_api_v1_fossa__fossa_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Fossa Id
          name: fossa_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFossa'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fossa'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - fossa
      summary: Api Fossa Delete
      operationId: api_fossa_delete_fossa_api_v1_fossa__fossa_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Fossa Id
          name: fossa_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /fossa/api/v1/lnurl/{device_id}:
    get:
      tags:
        - fossa
      summary: Fossa.Lnurl Params
      operationId: fossa_lnurl_params_fossa_api_v1_lnurl__device_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Device Id
          name: device_id
          in: path
        - required: false
          schema:
            type: string
            title: P
          name: p
          in: query
        - required: false
          schema:
            type: string
            title: Atm
          name: atm
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/api/v1/lnurl/cb/{payment_id}:
    get:
      tags:
        - fossa
      summary: Fossa.Lnurl Callback
      operationId: fossa_lnurl_callback_fossa_api_v1_lnurl_cb__payment_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Id
          name: payment_id
          in: path
        - required: false
          schema:
            type: string
            title: Pr
          name: pr
          in: query
        - required: false
          schema:
            type: string
            title: K1
          name: k1
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/api/v1/lnurlencode:
    post:
      tags:
        - fossa
      summary: Api Lnurlencode
      operationId: api_lnurlencode_fossa_api_v1_lnurlencode_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lnurlencode'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Api Lnurlencode Fossa Api V1 Lnurlencode Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /fossa/api/v1/atm:
    get:
      tags:
        - fossa
      summary: Api Atm Payments Retrieve
      operationId: api_atm_payments_retrieve_fossa_api_v1_atm_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FossaPayment'
                type: array
                title: Response Api Atm Payments Retrieve Fossa Api V1 Atm Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /fossa/api/v1/atm/{atm_id}:
    delete:
      tags:
        - fossa
      summary: Api Atm Payment Delete
      operationId: api_atm_payment_delete_fossa_api_v1_atm__atm_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Atm Id
          name: atm_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /fossa/api/v1/ln/{fossa_id}/{p}/{ln}:
    get:
      tags:
        - fossa
      summary: Get Fossa Payment Lightning
      description: Handle Lightning payments for atms via invoice, lnaddress, lnurlp.
      operationId: get_fossa_payment_lightning_fossa_api_v1_ln__fossa_id___p___ln__get
      parameters:
        - required: true
          schema:
            type: string
            title: Fossa Id
          name: fossa_id
          in: path
        - required: true
          schema:
            type: string
            title: P
          name: p
          in: path
        - required: true
          schema:
            type: string
            title: Ln
          name: ln
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: >-
                  Response Get Fossa Payment Lightning Fossa Api V1 Ln  Fossa
                  Id   P   Ln  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /fossa/api/v1/boltz/{fossa_id}/{payload}/{onchain_liquid}/{address}:
    get:
      tags:
        - fossa
      summary: Get Fossa Payment Boltz
      description: Handle Boltz payments for atms.
      operationId: >-
        get_fossa_payment_boltz_fossa_api_v1_boltz__fossa_id___payload___onchain_liquid___address__get
      parameters:
        - required: true
          schema:
            type: string
            title: Fossa Id
          name: fossa_id
          in: path
        - required: true
          schema:
            type: string
            title: Payload
          name: payload
          in: path
        - required: true
          schema:
            type: string
            title: Onchain Liquid
          name: onchain_liquid
          in: path
        - required: true
          schema:
            type: string
            title: Address
          name: address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lndhub/:
    get:
      tags:
        - lndhub
      summary: Lndhub Index
      operationId: lndhub_index_lndhub__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /lndhub/ext/getinfo:
    get:
      tags:
        - lndhub
      summary: Lndhub Getinfo
      operationId: lndhub_getinfo_lndhub_ext_getinfo_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /lndhub/ext/auth:
    post:
      tags:
        - lndhub
      summary: Lndhub Auth
      operationId: lndhub_auth_lndhub_ext_auth_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LndhubAuthData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lndhub/ext/addinvoice:
    post:
      tags:
        - lndhub
      summary: Lndhub Addinvoice
      operationId: lndhub_addinvoice_lndhub_ext_addinvoice_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LndhubAddInvoice'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /lndhub/ext/payinvoice:
    post:
      tags:
        - lndhub
      summary: Lndhub Payinvoice
      operationId: lndhub_payinvoice_lndhub_ext_payinvoice_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LndhubCreateInvoice'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /lndhub/ext/balance:
    get:
      tags:
        - lndhub
      summary: Lndhub Balance
      operationId: lndhub_balance_lndhub_ext_balance_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /lndhub/ext/gettxs:
    get:
      tags:
        - lndhub
      summary: Lndhub Gettxs
      operationId: lndhub_gettxs_lndhub_ext_gettxs_get
      parameters:
        - required: false
          schema:
            type: integer
            maximum: 200
            minimum: 1
            title: Limit
            default: 20
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            minimum: 0
            title: Offset
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /lndhub/ext/getuserinvoices:
    get:
      tags:
        - lndhub
      summary: Lndhub Getuserinvoices
      operationId: lndhub_getuserinvoices_lndhub_ext_getuserinvoices_get
      parameters:
        - required: false
          schema:
            type: integer
            maximum: 200
            minimum: 1
            title: Limit
            default: 20
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            minimum: 0
            title: Offset
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /lndhub/ext/getbtc:
    get:
      tags:
        - lndhub
      summary: Lndhub Getbtc
      description: load an address for incoming onchain btc
      operationId: lndhub_getbtc_lndhub_ext_getbtc_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /lndhub/ext/getpending:
    get:
      tags:
        - lndhub
      summary: Lndhub Getpending
      description: pending onchain transactions
      operationId: lndhub_getpending_lndhub_ext_getpending_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /lndhub/ext/decodeinvoice:
    get:
      tags:
        - lndhub
      summary: Lndhub Decodeinvoice
      operationId: lndhub_decodeinvoice_lndhub_ext_decodeinvoice_get
      parameters:
        - required: true
          schema:
            type: string
            title: Invoice
          name: invoice
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lndhub/ext/checkrouteinvoice:
    get:
      tags:
        - lndhub
      summary: Lndhub Checkrouteinvoice
      description: not implemented on canonical lndhub
      operationId: lndhub_checkrouteinvoice_lndhub_ext_checkrouteinvoice_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /copilot/:
    get:
      tags:
        - copilot
      summary: Index
      operationId: index_copilot__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /copilot/cp/:
    get:
      tags:
        - copilot
      summary: Compose
      operationId: compose_copilot_cp__get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /copilot/pn/:
    get:
      tags:
        - copilot
      summary: Panel
      operationId: panel_copilot_pn__get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /copilot/chat/{chat_id}:
    get:
      tags:
        - copilot
      summary: Chat
      operationId: chat_copilot_chat__chat_id__get
      parameters:
        - required: true
          schema:
            title: Chat Id
          name: chat_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /copilot/api/v1/copilot:
    get:
      tags:
        - copilot
      summary: Api Copilots Retrieve
      operationId: api_copilots_retrieve_copilot_api_v1_copilot_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - copilot
      summary: Api Copilot Create
      operationId: api_copilot_create_copilot_api_v1_copilot_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCopilotData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copilot'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /copilot/api/v1/copilot/{copilot_id}:
    get:
      tags:
        - copilot
      summary: Api Copilot Retrieve
      operationId: api_copilot_retrieve_copilot_api_v1_copilot__copilot_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Copilot Id
          name: copilot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - copilot
      summary: Api Copilot Update
      operationId: api_copilot_update_copilot_api_v1_copilot__copilot_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Copilot Id
          name: copilot_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCopilotData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copilot'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - copilot
      summary: Api Copilot Delete
      operationId: api_copilot_delete_copilot_api_v1_copilot__copilot_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Copilot Id
          name: copilot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /copilot/api/v1/copilot/ws/{copilot_id}/{comment}/{data}:
    get:
      tags:
        - copilot
      summary: Api Copilot Ws Relay
      operationId: >-
        api_copilot_ws_relay_copilot_api_v1_copilot_ws__copilot_id___comment___data__get
      parameters:
        - required: true
          schema:
            type: string
            title: Copilot Id
          name: copilot_id
          in: path
        - required: true
          schema:
            type: string
            title: Comment
          name: comment
          in: path
        - required: true
          schema:
            type: string
            title: Data
          name: data
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /copilot/lnurl/{cp_id}:
    get:
      tags:
        - copilot
      summary: Copilot.Lnurl Response
      operationId: copilot_lnurl_response_copilot_lnurl__cp_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Cp Id
          name: cp_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /copilot/lnurl/cb/{cp_id}:
    get:
      tags:
        - copilot
      summary: Copilot.Lnurl Callback
      operationId: copilot_lnurl_callback_copilot_lnurl_cb__cp_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Cp Id
          name: cp_id
          in: path
        - required: false
          schema:
            type: string
            title: Amount
          name: amount
          in: query
        - required: false
          schema:
            type: string
            title: Comment
          name: comment
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinflip/:
    get:
      tags:
        - coinflip
      summary: Index
      operationId: index_coinflip__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /coinflip/coinflip/{coinflip_settings_id}/{game}:
    get:
      tags:
        - coinflip
      summary: Display Coinflip
      operationId: display_coinflip_coinflip_coinflip__coinflip_settings_id___game__get
      parameters:
        - required: true
          schema:
            type: string
            title: Coinflip Settings Id
          name: coinflip_settings_id
          in: path
        - required: true
          schema:
            type: string
            title: Game
          name: game
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinflip/api/v1/coinflip/settings:
    get:
      tags:
        - coinflip
      summary: Api Get Coinflip Settings
      operationId: api_get_coinflip_settings_coinflip_api_v1_coinflip_settings_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - coinflip
      summary: Api Update Coinflip Settings
      operationId: api_update_coinflip_settings_coinflip_api_v1_coinflip_settings_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoinflipSettings'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinflipSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - coinflip
      summary: Api Create Coinflip Settings
      operationId: api_create_coinflip_settings_coinflip_api_v1_coinflip_settings_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoinflipSettings'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinflipSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /coinflip/api/v1/coinflip:
    post:
      tags:
        - coinflip
      summary: Api Create Coinflip
      operationId: api_create_coinflip_coinflip_api_v1_coinflip_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoinflip'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /coinflip/api/v1/coinflip/join/:
    post:
      tags:
        - coinflip
      summary: Api Join Coinflip
      operationId: api_join_coinflip_coinflip_api_v1_coinflip_join__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinCoinflipGame'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinflip/api/v1/coinflip/coinflip/{coinflip_id}:
    get:
      tags:
        - coinflip
      summary: Api Get Coinflip
      operationId: api_get_coinflip_coinflip_api_v1_coinflip_coinflip__coinflip_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Coinflip Id
          name: coinflip_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satspot/:
    get:
      tags:
        - satspot
      summary: Index
      operationId: index_satspot__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /satspot/{satspot_id}:
    get:
      tags:
        - satspot
      summary: Display Satspot
      operationId: display_satspot_satspot__satspot_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Satspot Id
          name: satspot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satspot/api/v1/satspot:
    get:
      tags:
        - satspot
      summary: Api Get Satspots
      operationId: api_get_satspots_satspot_api_v1_satspot_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - satspot
      summary: Api Create Satspot
      operationId: api_create_satspot_satspot_api_v1_satspot_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSatspot'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspot/api/v1/satspot/join/:
    post:
      tags:
        - satspot
      summary: Api Join Satspot
      operationId: api_join_satspot_satspot_api_v1_satspot_join__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinSatspotGame'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /satspot/api/v1/satspot/{satspot_id}:
    delete:
      tags:
        - satspot
      summary: Api Satspot Delete
      operationId: api_satspot_delete_satspot_api_v1_satspot__satspot_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Satspot Id
          name: satspot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /satspot/api/v1/satspot/satspot/{satspot_id}:
    get:
      tags:
        - satspot
      summary: Api Get Satspot
      operationId: api_get_satspot_satspot_api_v1_satspot_satspot__satspot_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Satspot Id
          name: satspot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/:
    get:
      tags:
        - MyExtension
      summary: Index
      operationId: index_myextension__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /myextension/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Myextension
      operationId: myextension_myextension__myextension_id__get
      parameters:
        - required: true
          schema:
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/manifest/{myextension_id}.webmanifest:
    get:
      tags:
        - MyExtension
      summary: Manifest
      operationId: manifest_myextension_manifest__myextension_id__webmanifest_get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/api/v1/myex:
    get:
      tags:
        - MyExtension
      summary: Api Myextensions
      operationId: api_myextensions_myextension_api_v1_myex_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MyExtension'
                type: array
                title: Response Api Myextensions Myextension Api V1 Myex Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - MyExtension
      summary: Api Myextension Create
      operationId: api_myextension_create_myextension_api_v1_myex_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMyExtensionData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyExtension'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /myextension/api/v1/myex/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Api Myextension
      operationId: api_myextension_myextension_api_v1_myex__myextension_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyExtension'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - MyExtension
      summary: Api Myextension Update
      operationId: api_myextension_update_myextension_api_v1_myex__myextension_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMyExtensionData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyExtension'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - MyExtension
      summary: Api Myextension Delete
      operationId: api_myextension_delete_myextension_api_v1_myex__myextension_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /myextension/api/v1/myex/payment:
    post:
      tags:
        - MyExtension
      summary: Api Myextension Create Invoice
      operationId: api_myextension_create_invoice_myextension_api_v1_myex_payment_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayment'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: >-
                  Response Api Myextension Create Invoice Myextension Api V1
                  Myex Payment Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/api/v1/lnurl/pay/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Myextension.Api Lnurl Pay
      operationId: >-
        myextension_api_lnurl_pay_myextension_api_v1_lnurl_pay__myextension_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/api/v1/lnurl/paycb/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Myextension.Api Lnurl Pay Callback
      operationId: >-
        myextension_api_lnurl_pay_callback_myextension_api_v1_lnurl_paycb__myextension_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/api/v1/lnurl/withdraw/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Myextension.Api Lnurl Withdraw
      operationId: >-
        myextension_api_lnurl_withdraw_myextension_api_v1_lnurl_withdraw__myextension_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /myextension/api/v1/lnurl/withdrawcb/{myextension_id}:
    get:
      tags:
        - MyExtension
      summary: Myextension.Api Lnurl Withdraw Callback
      operationId: >-
        myextension_api_lnurl_withdraw_callback_myextension_api_v1_lnurl_withdrawcb__myextension_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Myextension Id
          name: myextension_id
          in: path
        - required: false
          schema:
            type: string
            title: Pr
          name: pr
          in: query
        - required: false
          schema:
            type: string
            title: K1
          name: k1
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bleskomat/:
    get:
      tags:
        - Bleskomat
      summary: Index
      operationId: index_bleskomat__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /bleskomat/api/v1/bleskomats:
    get:
      tags:
        - Bleskomat
      summary: Api Bleskomats
      operationId: api_bleskomats_bleskomat_api_v1_bleskomats_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Bleskomat'
                type: array
                title: Response Api Bleskomats Bleskomat Api V1 Bleskomats Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bleskomat/api/v1/bleskomat/{bleskomat_id}:
    get:
      tags:
        - Bleskomat
      summary: Api Bleskomat Retrieve
      operationId: api_bleskomat_retrieve_bleskomat_api_v1_bleskomat__bleskomat_id__get
      parameters:
        - required: true
          schema:
            title: Bleskomat Id
          name: bleskomat_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bleskomat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - Bleskomat
      summary: Api Bleskomat Create Or Update
      operationId: >-
        api_bleskomat_create_or_update_bleskomat_api_v1_bleskomat__bleskomat_id__put
      parameters:
        - required: true
          schema:
            title: Bleskomat Id
          name: bleskomat_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBleskomat'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bleskomat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Bleskomat
      summary: Api Bleskomat Delete
      operationId: api_bleskomat_delete_bleskomat_api_v1_bleskomat__bleskomat_id__delete
      parameters:
        - required: true
          schema:
            title: Bleskomat Id
          name: bleskomat_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bleskomat/api/v1/bleskomat:
    post:
      tags:
        - Bleskomat
      summary: Api Bleskomat Create Or Update
      operationId: api_bleskomat_create_or_update_bleskomat_api_v1_bleskomat_post
      parameters:
        - required: false
          schema:
            title: Bleskomat Id
          name: bleskomat_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBleskomat'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bleskomat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /bleskomat/u:
    get:
      tags:
        - Bleskomat
      summary: Bleskomat.Api Bleskomat Lnurl
      operationId: bleskomat_api_bleskomat_lnurl_bleskomat_u_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /scheduler/:
    get:
      tags:
        - scheduler
      summary: Index
      operationId: index_scheduler__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /scheduler/api/v1/test_log/{job_id}:
    get:
      tags:
        - scheduler
      summary: his log saves the testlogs
      description: testlog
      operationId: testlog_scheduler_api_v1_test_log__job_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Job Id
          name: job_id
          in: path
      responses:
        '200':
          description: testlog
          content:
            application/json:
              schema:
                type: string
                title: Response Testlog Scheduler Api V1 Test Log  Job Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/logentry/{log_id}:
    get:
      tags:
        - scheduler
      summary: get log entires for job from DB
      operationId: >-
        Log_entries_for_a_specific_job_id_from_DB_scheduler_api_v1_logentry__log_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Log Id
          name: log_id
          in: path
      responses:
        '200':
          description: log entries for a job from DB
          content:
            application/json:
              schema:
                type: string
                title: >-
                  Response Log Entries For A Specific Job Id From Db Scheduler
                  Api V1 Logentry  Log Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - scheduler
      summary: Delete a Job's Log from DB
      description: Delete Job Log from DB
      operationId: Job_Log_Delete_scheduler_api_v1_logentry__log_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Log Id
          name: log_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: >-
                  Response Job Log Delete Scheduler Api V1 Logentry  Log Id 
                  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/logentry:
    post:
      tags:
        - scheduler
      summary: Create a new log entry in DB
      description: Create a new log entry in DB
      operationId: Log_Entry_Create_scheduler_api_v1_logentry_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
        required: true
      responses:
        '200':
          description: New Log Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogEntry'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/complete_log:
    get:
      tags:
        - scheduler
      summary: get log of all the jobs plus extra logs
      operationId: Complete_Log_scheduler_api_v1_complete_log_get
      responses:
        '200':
          description: complete log from scheduler.log
          content:
            application/json:
              schema:
                type: string
                title: Response Complete Log Scheduler Api V1 Complete Log Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/delete_log:
    post:
      tags:
        - scheduler
      summary: clear all log messages
      operationId: delete_Log_scheduler_api_v1_delete_log_post
      responses:
        '200':
          description: delete complete log from scheduler.log
          content:
            application/json:
              schema:
                type: boolean
                title: Response Delete Log Scheduler Api V1 Delete Log Post
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/jobs:
    get:
      tags:
        - scheduler
      summary: get list of jobs
      description: |-
        Retrieves all jobs, supporting flexible filtering (LHS Brackets).

        ### Syntax
        `field[op]=value`

        ### Operators
        - eq, ne
        - gt, lt
        - in (include)
        - ex (exclude)

        Filters are AND-combined
      operationId: Jobs_List_scheduler_api_v1_jobs_get
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Id
          name: id
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Schedule
          name: schedule
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Selectedverb
          name: selectedverb
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Url
          name: url
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Body
          name: body
          in: query
        - description: Supports Filtering
          required: false
          schema:
            additionalProperties:
              type: string
            type: object
            title: Extra
          name: extra
          in: query
      responses:
        '200':
          description: list of jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - scheduler
      summary: Create a new job
      description: Create a new job
      operationId: Job_Create_scheduler_api_v1_jobs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobData'
        required: true
      responses:
        '200':
          description: New Job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/jobs/{job_id}:
    get:
      tags:
        - scheduler
      summary: Get a specific jobs
      description: get jobs
      operationId: Jobs_Get_scheduler_api_v1_jobs__job_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Job Id
          name: job_id
          in: path
      responses:
        '200':
          description: job if job exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - scheduler
      summary: Update a jobs
      description: Update a jobs
      operationId: Jobs_Update_scheduler_api_v1_jobs__job_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Job Id
          name: job_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobData'
        required: true
      responses:
        '200':
          description: Updated jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/jobs/{jobs_id}:
    delete:
      tags:
        - scheduler
      summary: Delete a jobs
      description: Delete a jobs
      operationId: Jobs_Delete_scheduler_api_v1_jobs__jobs_id__delete
      parameters:
        - required: true
          schema:
            title: Jobs Id
          name: jobs_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Jobs does not exist.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /scheduler/api/v1/pause/{job_id}/{status}:
    post:
      tags:
        - scheduler
      summary: Start or Stop Cron jobs
      description: Stop or Start Cron jobs
      operationId: Pause_Jobs_scheduler_api_v1_pause__job_id___status__post
      parameters:
        - required: true
          schema:
            type: string
            title: Job Id
          name: job_id
          in: path
        - required: true
          schema:
            type: string
            title: Status
          name: status
          in: path
      responses:
        '200':
          description: Pause jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job does not exist.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/:
    get:
      tags:
        - livestream
      summary: Index
      operationId: index_livestream__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /livestream/track/{track_id}:
    get:
      tags:
        - livestream
      summary: Livestream.Track Redirect Download
      operationId: livestream_track_redirect_download_livestream_track__track_id__get
      parameters:
        - required: true
          schema:
            title: Track Id
          name: track_id
          in: path
        - required: true
          schema:
            type: string
            title: P
          name: p
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /livestream/api/v1/livestream:
    get:
      tags:
        - livestream
      summary: Api Livestream From Wallet
      operationId: api_livestream_from_wallet_livestream_api_v1_livestream_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivestreamOverview'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/api/v1/livestream/track/{track_id}:
    put:
      tags:
        - livestream
      summary: Api Update Tracks
      operationId: api_update_tracks_livestream_api_v1_livestream_track__track_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Track Id
          name: track_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrack'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/api/v1/livestream/fee/{fee_pct}:
    put:
      tags:
        - livestream
      summary: Api Update Fee
      operationId: api_update_fee_livestream_api_v1_livestream_fee__fee_pct__put
      parameters:
        - required: true
          schema:
            title: Fee Pct
          name: fee_pct
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/api/v1/livestream/track:
    post:
      tags:
        - livestream
      summary: Api Add Tracks
      operationId: api_add_tracks_livestream_api_v1_livestream_track_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrack'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/api/v1/livestream/tracks/{track_id}:
    delete:
      tags:
        - livestream
      summary: Api Delete Track
      operationId: api_delete_track_livestream_api_v1_livestream_tracks__track_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Track Id
          name: track_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /livestream/lnurl/{ls_id}:
    get:
      tags:
        - livestream
      summary: Livestream.Lnurl Livestream
      operationId: livestream_lnurl_livestream_livestream_lnurl__ls_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Ls Id
          name: ls_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /livestream/lnurl/t/{track_id}:
    get:
      tags:
        - livestream
      summary: Livestream.Lnurl Track
      operationId: livestream_lnurl_track_livestream_lnurl_t__track_id__get
      parameters:
        - required: true
          schema:
            title: Track Id
          name: track_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /livestream/lnurl/cb/{track_id}:
    get:
      tags:
        - livestream
      summary: Livestream.Lnurl Callback
      operationId: livestream_lnurl_callback_livestream_lnurl_cb__track_id__get
      parameters:
        - required: true
          schema:
            title: Track Id
          name: track_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - required: false
          schema:
            type: string
            title: Comment
            default: ''
          name: comment
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/:
    get:
      tags:
        - TPoS
      summary: Index
      operationId: index_tpos__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /tpos/{tpos_id}:
    get:
      tags:
        - TPoS
      summary: Tpos
      operationId: tpos_tpos__tpos_id__get
      parameters:
        - required: true
          schema:
            title: Tpos Id
          name: tpos_id
          in: path
        - required: false
          schema:
            type: string
            title: Lnaddress
            default: ''
          name: lnaddress
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/manifest/{tpos_id}.webmanifest:
    get:
      tags:
        - TPoS
      summary: Manifest
      operationId: manifest_tpos_manifest__tpos_id__webmanifest_get
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/lnurl/{lnurlcharge_id}/{amount}:
    get:
      tags:
        - TPoS
      summary: Tpos.Tposlnurlcharge
      operationId: tpos_tposlnurlcharge_tpos_api_v1_lnurl__lnurlcharge_id___amount__get
      parameters:
        - required: true
          schema:
            type: string
            title: Lnurlcharge Id
          name: lnurlcharge_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/lnurl/cb:
    get:
      tags:
        - TPoS
      summary: Tpos.Tposlnurlcharge.Callback
      operationId: tpos_tposlnurlcharge_callback_tpos_api_v1_lnurl_cb_get
      parameters:
        - required: false
          schema:
            type: string
            title: Pr
          name: pr
          in: query
        - required: false
          schema:
            type: string
            title: K1
          name: k1
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/tposs:
    get:
      tags:
        - TPoS
      summary: Api Tposs
      operationId: api_tposs_tpos_api_v1_tposs_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tpos'
                type: array
                title: Response Api Tposs Tpos Api V1 Tposs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - TPoS
      summary: Api Tpos Create
      operationId: api_tpos_create_tpos_api_v1_tposs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTposData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /tpos/api/v1/tposs/{tpos_id}:
    put:
      tags:
        - TPoS
      summary: Api Tpos Update
      operationId: api_tpos_update_tpos_api_v1_tposs__tpos_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTposData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - TPoS
      summary: Api Tpos Delete
      operationId: api_tpos_delete_tpos_api_v1_tposs__tpos_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /tpos/api/v1/tposs/{tpos_id}/invoices:
    get:
      tags:
        - TPoS
      summary: Api Tpos Get Latest Invoices
      operationId: api_tpos_get_latest_invoices_tpos_api_v1_tposs__tpos_id__invoices_get
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - TPoS
      summary: Api Tpos Create Invoice
      operationId: api_tpos_create_invoice_tpos_api_v1_tposs__tpos_id__invoices_post
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTposInvoice'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: >-
                  Response Api Tpos Create Invoice Tpos Api V1 Tposs  Tpos Id 
                  Invoices Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/tposs/{tpos_id}/invoices/{payment_request}/pay:
    post:
      tags:
        - TPoS
      summary: Api Tpos Pay Invoice
      operationId: >-
        api_tpos_pay_invoice_tpos_api_v1_tposs__tpos_id__invoices__payment_request__pay_post
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Request
          name: payment_request
          in: path
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/lnbits__extensions__tpos__models__PayLnurlWData
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/tposs/{tpos_id}/invoices/{payment_hash}:
    get:
      tags:
        - TPoS
      summary: Api Tpos Check Invoice
      operationId: >-
        api_tpos_check_invoice_tpos_api_v1_tposs__tpos_id__invoices__payment_hash__get
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
        - required: true
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/atm/{tpos_id}/{atmpin}:
    get:
      tags:
        - TPoS
      summary: Api Tpos Atm Pin Check
      operationId: api_tpos_atm_pin_check_tpos_api_v1_atm__tpos_id___atmpin__get
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
        - required: true
          schema:
            type: integer
            title: Atmpin
          name: atmpin
          in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LnurlCharge'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/atm/withdraw/{k1}/{amount}/pay:
    post:
      tags:
        - TPoS
      summary: Api Tpos Atm Pay
      operationId: api_tpos_atm_pay_tpos_api_v1_atm_withdraw__k1___amount__pay_post
      parameters:
        - required: true
          schema:
            type: string
            title: K1
          name: k1
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWithdrawPay'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/atm/withdraw/{withdraw_token}/{amount}:
    get:
      tags:
        - TPoS
      summary: Api Tpos Create Withdraw
      operationId: >-
        api_tpos_create_withdraw_tpos_api_v1_atm_withdraw__withdraw_token___amount__get
      parameters:
        - required: true
          schema:
            type: string
            title: Withdraw Token
          name: withdraw_token
          in: path
        - required: true
          schema:
            type: string
            title: Amount
          name: amount
          in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: >-
                  Response Api Tpos Create Withdraw Tpos Api V1 Atm Withdraw 
                  Withdraw Token   Amount  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tpos/api/v1/tposs/{tpos_id}/items:
    put:
      tags:
        - TPoS
      summary: Api Tpos Create Items
      operationId: api_tpos_create_items_tpos_api_v1_tposs__tpos_id__items_put
      parameters:
        - required: true
          schema:
            type: string
            title: Tpos Id
          name: tpos_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /tpos/api/v1/tposs/lnaddresscheck:
    get:
      tags:
        - TPoS
      summary: Api Tpos Check Lnaddress
      operationId: api_tpos_check_lnaddress_tpos_api_v1_tposs_lnaddresscheck_get
      parameters:
        - required: true
          schema:
            type: string
            title: Lnaddress
          name: lnaddress
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eightball/:
    get:
      tags:
        - EightBall
      summary: Index
      operationId: index_eightball__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /eightball/{eightball_id}:
    get:
      tags:
        - EightBall
      summary: Eightball
      operationId: eightball_eightball__eightball_id__get
      parameters:
        - required: true
          schema:
            title: Eightball Id
          name: eightball_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eightball/manifest/{eightball_id}.webmanifest:
    get:
      tags:
        - EightBall
      summary: Manifest
      operationId: manifest_eightball_manifest__eightball_id__webmanifest_get
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eightball/api/v1/eightb:
    get:
      tags:
        - EightBall
      summary: Api Eightballs
      operationId: api_eightballs_eightball_api_v1_eightb_get
      parameters:
        - required: false
          schema:
            type: boolean
            title: All Wallets
            default: false
          name: all_wallets
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - EightBall
      summary: Api Eightball Create
      operationId: api_eightball_create_eightball_api_v1_eightb_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEightBallData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EightBall'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /eightball/api/v1/eightb/{eightball_id}:
    get:
      tags:
        - EightBall
      summary: Api Eightball
      operationId: api_eightball_eightball_api_v1_eightb__eightball_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    put:
      tags:
        - EightBall
      summary: Api Eightball Update
      operationId: api_eightball_update_eightball_api_v1_eightb__eightball_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEightBallData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - EightBall
      summary: Api Eightball Delete
      operationId: api_eightball_delete_eightball_api_v1_eightb__eightball_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /eightball/api/v1/lnurl/pay/{eightball_id}:
    get:
      tags:
        - EightBall
      summary: Eightball.Api Lnurl Pay
      operationId: eightball_api_lnurl_pay_eightball_api_v1_lnurl_pay__eightball_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eightball/api/v1/lnurl/paycb/{eightball_id}:
    get:
      tags:
        - EightBall
      summary: Eightball.Api Lnurl Pay Callback
      operationId: >-
        eightball_api_lnurl_pay_callback_eightball_api_v1_lnurl_paycb__eightball_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Eightball Id
          name: eightball_id
          in: path
        - required: true
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tipjar/:
    get:
      tags:
        - tipjar
      summary: Index
      operationId: index_tipjar__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /tipjar/{tipjar_id}:
    get:
      tags:
        - tipjar
      summary: Tip
      description: Return the donation form for the Tipjar corresponding to id
      operationId: tip_tipjar__tipjar_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Tipjar Id
          name: tipjar_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tipjar/api/v1/tipjars:
    get:
      tags:
        - tipjar
      summary: Api Get Tipjars
      description: Return list of all tipjars assigned to wallet with given invoice key
      operationId: api_get_tipjars_tipjar_api_v1_tipjars_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TipJar'
                type: array
                title: Response Api Get Tipjars Tipjar Api V1 Tipjars Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - tipjar
      summary: Api Create Tipjar
      description: Create a tipjar, which holds data about how/where to post tips
      operationId: api_create_tipjar_tipjar_api_v1_tipjars_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTipJar'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipJar'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /tipjar/api/v1/tips:
    get:
      tags:
        - tipjar
      summary: Api Get Tips
      description: Return list of all tips assigned to wallet with given invoice key
      operationId: api_get_tips_tipjar_api_v1_tips_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tip'
                type: array
                title: Response Api Get Tips Tipjar Api V1 Tips Get
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - tipjar
      summary: Api Create Tip
      description: Public route to take data from tip form and return satspay charge
      operationId: api_create_tip_tipjar_api_v1_tips_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTips'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Api Create Tip Tipjar Api V1 Tips Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tipjar/api/v1/tips/{tip_id}:
    put:
      tags:
        - tipjar
      summary: Api Update Tip
      description: Update a tip with the data given in the request
      operationId: api_update_tip_tipjar_api_v1_tips__tip_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Tip Id
          name: tip_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTip'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - tipjar
      summary: Api Delete Tip
      description: Delete the tip with the given tip_id
      operationId: api_delete_tip_tipjar_api_v1_tips__tip_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Tip Id
          name: tip_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /tipjar/api/v1/tipjars/{tipjar_id}:
    put:
      tags:
        - tipjar
      summary: Api Update Tipjar
      description: Update a tipjar with the data given in the request
      operationId: api_update_tipjar_tipjar_api_v1_tipjars__tipjar_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Tipjar Id
          name: tipjar_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTipJar'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipJar'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - tipjar
      summary: Api Delete Tipjar
      description: Delete the tipjar with the given tipjar_id
      operationId: api_delete_tipjar_tipjar_api_v1_tipjars__tipjar_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Tipjar Id
          name: tipjar_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /auction_house/:
    get:
      tags:
        - auction_house
      summary: Index
      operationId: index_auction_house__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/auction_room/{auction_room_id}:
    get:
      tags:
        - auction_house
      summary: Auction Room Details
      operationId: auction_room_details_auction_house_auction_room__auction_room_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/auctions/{auction_room_id}:
    get:
      tags:
        - auction_house
      summary: Auctions List
      operationId: auctions_list_auction_house_auctions__auction_room_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/bids/{auction_item_id}:
    get:
      tags:
        - auction_house
      summary: Bids List
      operationId: bids_list_auction_house_bids__auction_item_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/audit/auctions/{entry_id}:
    get:
      tags:
        - auction_house
      summary: Entry Audit
      operationId: entry_audit_auction_house_audit_auctions__entry_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Entry Id
          name: entry_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/auction_room:
    get:
      tags:
        - auction_house
      summary: Api Get Auction Rooms
      operationId: api_get_auction_rooms_auction_house_api_v1_auction_room_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuctionRoom'
                type: array
                title: >-
                  Response Api Get Auction Rooms Auction House Api V1 Auction
                  Room Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - auction_house
      summary: Api Update Auction Room
      operationId: api_update_auction_room_auction_house_api_v1_auction_room_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAuctionRoomData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - auction_house
      summary: Api Create Auction Room
      operationId: api_create_auction_room_auction_house_api_v1_auction_room_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuctionRoomData'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/auction_room/{auction_room_id}:
    get:
      tags:
        - auction_house
      summary: Api Get Auction Room
      operationId: >-
        api_get_auction_room_auction_house_api_v1_auction_room__auction_room_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuctionRoom'
                  - $ref: '#/components/schemas/PublicAuctionRoom'
                title: >-
                  Response Api Get Auction Room Auction House Api V1 Auction
                  Room  Auction Room Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - auction_house
      summary: Api Auction Room Delete
      operationId: >-
        api_auction_room_delete_auction_house_api_v1_auction_room__auction_room_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/items/{auction_room_id}:
    post:
      tags:
        - auction_house
      summary: Api Create Auction Item
      operationId: >-
        api_create_auction_item_auction_house_api_v1_items__auction_room_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuctionItem'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuctionItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/items/{auction_room_id}/paginated:
    get:
      tags:
        - auction_house
      summary: get paginated list of auction items
      operationId: >-
        Auction_Items_List_auction_house_api_v1_items__auction_room_id__paginated_get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Room Id
          name: auction_room_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Include Inactive
          name: include_inactive
          in: query
        - required: false
          schema:
            type: boolean
            title: User Is Owner
          name: user_is_owner
          in: query
        - required: false
          schema:
            type: boolean
            title: User Is Participant
          name: user_is_participant
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: number
            title: Ask Price
          name: ask_price
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: number
            title: Current Price
          name: current_price
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            format: date-time
            title: Created At
          name: created_at
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            format: date-time
            title: Expires At
          name: expires_at
          in: query
      responses:
        '200':
          description: list of auction items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/items/{auction_item_id}:
    get:
      tags:
        - auction_house
      summary: >-
        Get the auction item with this is. If the user is the owner, return the
        full item, otherwise return a public item
      operationId: Get_Auction_Item_auction_house_api_v1_items__auction_item_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: An auction item or 404 if not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuctionItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - auction_house
      summary: >-
        Close the auction for this item manually. The auction must be expired or
        have zero bids to be able to close it.Only the owner of the item or of
        the auction room can close the auction.
      operationId: >-
        Manually_close_Auction_Item_auction_house_api_v1_items__auction_item_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Force Close
            default: false
          name: force_close
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: An auction item or 404 if not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/bids/{auction_item_id}:
    put:
      tags:
        - auction_house
      summary: Api Place Bid
      operationId: api_place_bid_auction_house_api_v1_bids__auction_item_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/bids/{auction_item_id}/paginated:
    get:
      tags:
        - auction_house
      summary: get paginated list of bids for an auction item
      operationId: Bids_List_auction_house_api_v1_bids__auction_item_id__paginated_get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Only Mine
            default: false
          name: only_mine
          in: query
        - required: false
          schema:
            type: boolean
            title: Include Unpaid
            default: false
          name: include_unpaid
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            format: date-time
            title: Created At
          name: created_at
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: number
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: number
            title: Amount Sat
          name: amount_sat
          in: query
      responses:
        '200':
          description: list of bids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /auction_house/api/v1/audit/items/{auction_item_id}/paginated:
    get:
      tags:
        - auction_house
      summary: get paginated list of audit entries for an entry
      operationId: >-
        Audit_Data_auction_house_api_v1_audit_items__auction_item_id__paginated_get
      parameters:
        - required: true
          schema:
            type: string
            title: Auction Item Id
          name: auction_item_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Entry Id
          name: entry_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Data
          name: data
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            format: date-time
            title: Created At
          name: created_at
          in: query
      responses:
        '200':
          description: list of audit entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth:
    get:
      tags:
        - Auth
      summary: Get Auth User
      description: Get the authenticated user
      operationId: get_auth_user_api_v1_auth_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Auth
      summary: Login
      description: Login via the username and password
      operationId: login_api_v1_auth_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUsernamePassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/nostr:
    post:
      tags:
        - Auth
      summary: Nostr Login
      description: Login via Nostr
      operationId: nostr_login_api_v1_auth_nostr_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/auth/usr:
    post:
      tags:
        - Auth
      summary: Login Usr
      description: Login via the User ID
      operationId: login_usr_api_v1_auth_usr_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUsr'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/acl:
    get:
      tags:
        - Auth
      summary: Api Get User Acls
      operationId: api_get_user_acls_api_v1_auth_acl_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAcls'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - Auth
      summary: Api Update User Acl
      operationId: api_update_user_acl_api_v1_auth_acl_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessControlList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAcls'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Auth
      summary: Api Delete User Acl
      operationId: api_delete_user_acl_api_v1_auth_acl_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessControlList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    patch:
      tags:
        - Auth
      summary: Api Update User Acl
      operationId: api_update_user_acl_api_v1_auth_acl_patch
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessControlList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAcls'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth/acl/token:
    post:
      tags:
        - Auth
      summary: Api Create User Api Token
      operationId: api_create_user_api_token_api_v1_auth_acl_token_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Auth
      summary: Api Delete User Api Token
      operationId: api_delete_user_api_token_api_v1_auth_acl_token_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth/{provider}:
    get:
      tags:
        - Auth
      summary: Login With Sso Provider
      description: SSO Provider
      operationId: login_with_sso_provider_api_v1_auth__provider__get
      parameters:
        - required: true
          schema:
            type: string
            title: Provider
          name: provider
          in: path
        - required: false
          schema:
            type: string
            title: User Id
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/{provider}/token:
    get:
      tags:
        - Auth
      summary: Handle Oauth Token
      description: Handle OAuth callback
      operationId: handle_oauth_token_api_v1_auth__provider__token_get
      parameters:
        - required: true
          schema:
            type: string
            title: Provider
          name: provider
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/logout:
    post:
      tags:
        - Auth
      summary: Logout
      operationId: logout_api_v1_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: register_api_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/pubkey:
    put:
      tags:
        - Auth
      summary: Update Pubkey
      operationId: update_pubkey_api_v1_auth_pubkey_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPubkey'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth/password:
    put:
      tags:
        - Auth
      summary: Update Password
      operationId: update_password_api_v1_auth_password_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth/reset:
    put:
      tags:
        - Auth
      summary: Reset Password
      operationId: reset_password_api_v1_auth_reset_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/update:
    put:
      tags:
        - Auth
      summary: Update
      operationId: update_api_v1_auth_update_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/auth/first_install:
    put:
      tags:
        - Auth
      summary: First Install
      operationId: first_install_api_v1_auth_first_install_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSuperuserPassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /admin/api/v1/audit:
    get:
      tags:
        - Admin UI
      summary: Audit
      description: show the current balance of the node and the LNbits database
      operationId: Audit_admin_api_v1_audit_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/monitor:
    get:
      tags:
        - Admin UI
      summary: Monitor
      description: show the current listeners and other monitoring data
      operationId: Monitor_admin_api_v1_monitor_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/testemail:
    get:
      tags:
        - Admin UI
      summary: Testemail
      description: send a test email to the admin
      operationId: TestEmail_admin_api_v1_testemail_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/settings:
    get:
      tags:
        - Admin UI
      summary: Api Get Settings
      operationId: api_get_settings_admin_api_v1_settings_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSettings'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - Admin UI
      summary: Api Update Settings
      operationId: api_update_settings_admin_api_v1_settings_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Admin UI
      summary: Api Delete Settings
      operationId: api_delete_settings_admin_api_v1_settings_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    patch:
      tags:
        - Admin UI
      summary: Api Update Settings Partial
      operationId: api_update_settings_partial_admin_api_v1_settings_patch
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/settings/default:
    get:
      tags:
        - Admin UI
      summary: Api Reset Settings
      operationId: api_reset_settings_admin_api_v1_settings_default_get
      parameters:
        - required: true
          schema:
            type: string
            title: Field Name
          name: field_name
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/restart:
    get:
      tags:
        - Admin UI
      summary: Api Restart Server
      operationId: api_restart_server_admin_api_v1_restart_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Api Restart Server Admin Api V1 Restart Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/backup:
    get:
      tags:
        - Admin UI
      summary: Api Download Backup
      operationId: api_download_backup_admin_api_v1_backup_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/images:
    get:
      tags:
        - Admin UI
      summary: List Uploaded Images
      operationId: list_uploaded_images_admin_api_v1_images_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
                title: Response List Uploaded Images Admin Api V1 Images Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Admin UI
      summary: Upload Image
      operationId: upload_image_admin_api_v1_images_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: true
          schema:
            type: integer
            maximum: 512000
            title: Content-Length
          name: content-length
          in: header
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_image_admin_api_v1_images_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /admin/api/v1/images/{filename}:
    delete:
      tags:
        - Admin UI
      summary: Delete Uploaded Image
      operationId: delete_uploaded_image_admin_api_v1_images__filename__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Filename
          name: filename
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/ok:
    get:
      tags:
        - Node Managment
      summary: Api Get Ok
      description: Check if node api can be enabled
      operationId: api_get_ok_node_api_v1_ok_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/info:
    get:
      tags:
        - Node Managment
      summary: Api Get Info
      operationId: api_get_info_node_api_v1_info_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfoResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/channels:
    get:
      tags:
        - Node Managment
      summary: Api Get Channels
      operationId: api_get_channels_node_api_v1_channels_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodeChannel'
                type: array
                title: Response Api Get Channels Node Api V1 Channels Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Node Managment
      summary: Api Create Channel
      operationId: api_create_channel_node_api_v1_channels_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Body_api_create_channel_node_api_v1_channels_post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPoint'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Node Managment
      summary: Api Delete Channel
      operationId: api_delete_channel_node_api_v1_channels_delete
      parameters:
        - required: true
          schema:
            type: string
            title: Short Id
          name: short_id
          in: query
        - required: true
          schema:
            type: string
            title: Funding Txid
          name: funding_txid
          in: query
        - required: true
          schema:
            type: integer
            title: Output Index
          name: output_index
          in: query
        - required: false
          schema:
            type: boolean
            title: Force
            default: false
          name: force
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodeChannel'
                type: array
                title: Response Api Delete Channel Node Api V1 Channels Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/channels/{channel_id}:
    get:
      tags:
        - Node Managment
      summary: Api Get Channel
      operationId: api_get_channel_node_api_v1_channels__channel_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Channel Id
          name: channel_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeChannel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - Node Managment
      summary: Api Set Channel Fees
      operationId: api_set_channel_fees_node_api_v1_channels__channel_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Channel Id
          name: channel_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Body_api_set_channel_fees_node_api_v1_channels__channel_id__put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/payments:
    get:
      tags:
        - Node Managment
      summary: Api Get Payments
      operationId: api_get_payments_node_api_v1_payments_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/invoices:
    get:
      tags:
        - Node Managment
      summary: Api Get Invoices
      operationId: api_get_invoices_node_api_v1_invoices_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/peers:
    get:
      tags:
        - Node Managment
      summary: Api Get Peers
      operationId: api_get_peers_node_api_v1_peers_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodePeerInfo'
                type: array
                title: Response Api Get Peers Node Api V1 Peers Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Node Managment
      summary: Api Connect Peer
      operationId: api_connect_peer_node_api_v1_peers_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Body_api_connect_peer_node_api_v1_peers_post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/rank:
    get:
      tags:
        - Node Managment
      summary: Api Get 1Ml Stats
      description: Retrieve node ranks from https://1ml.com
      operationId: api_get_1ml_stats_node_api_v1_rank_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeRank'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension:
    get:
      tags:
        - Extension Managment
      summary: Api Get User Extensions
      operationId: api_get_user_extensions_api_v1_extension_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Extension'
                type: array
                title: Response Api Get User Extensions Api V1 Extension Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Extension Managment
      summary: Api Install Extension
      operationId: api_install_extension_api_v1_extension_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtension'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/details:
    get:
      tags:
        - Extension Managment
      summary: Api Extension Details
      operationId: api_extension_details_api_v1_extension__ext_id__details_get
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: true
          schema:
            type: string
            title: Details Link
          name: details_link
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/extension/{ext_id}/sell:
    put:
      tags:
        - Extension Managment
      summary: Api Update Pay To Enable
      operationId: api_update_pay_to_enable_api_v1_extension__ext_id__sell_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayToEnableInfo'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/enable:
    put:
      tags:
        - Extension Managment
      summary: Api Enable Extension
      operationId: api_enable_extension_api_v1_extension__ext_id__enable_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/disable:
    put:
      tags:
        - Extension Managment
      summary: Api Disable Extension
      operationId: api_disable_extension_api_v1_extension__ext_id__disable_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/activate:
    put:
      tags:
        - Extension Managment
      summary: Api Activate Extension
      operationId: api_activate_extension_api_v1_extension__ext_id__activate_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/deactivate:
    put:
      tags:
        - Extension Managment
      summary: Api Deactivate Extension
      operationId: api_deactivate_extension_api_v1_extension__ext_id__deactivate_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}:
    delete:
      tags:
        - Extension Managment
      summary: Api Uninstall Extension
      operationId: api_uninstall_extension_api_v1_extension__ext_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/releases:
    get:
      tags:
        - Extension Managment
      summary: Get Extension Releases
      operationId: get_extension_releases_api_v1_extension__ext_id__releases_get
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExtensionRelease'
                type: array
                title: >-
                  Response Get Extension Releases Api V1 Extension  Ext Id 
                  Releases Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/invoice/install:
    put:
      tags:
        - Extension Managment
      summary: Get Pay To Install Invoice
      operationId: get_pay_to_install_invoice_api_v1_extension__ext_id__invoice_install_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtension'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleasePaymentInfo'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/invoice/enable:
    put:
      tags:
        - Extension Managment
      summary: Get Pay To Enable Invoice
      operationId: get_pay_to_enable_invoice_api_v1_extension__ext_id__invoice_enable_put
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayToEnableInfo'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/release/{org}/{repo}/{tag_name}:
    get:
      tags:
        - Extension Managment
      summary: Get Extension Release
      operationId: >-
        get_extension_release_api_v1_extension_release__org___repo___tag_name__get
      parameters:
        - required: true
          schema:
            type: string
            title: Org
          name: org
          in: path
        - required: true
          schema:
            type: string
            title: Repo
          name: repo
          in: path
        - required: true
          schema:
            type: string
            title: Tag Name
          name: tag_name
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/extension/{ext_id}/db:
    delete:
      tags:
        - Extension Managment
      summary: Delete Extension Db
      operationId: delete_extension_db_api_v1_extension__ext_id__db_delete
      parameters:
        - required: true
          schema:
            type: string
            title: Ext Id
          name: ext_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/api/v1/peers/{peer_id}:
    delete:
      tags:
        - Node Managment
      summary: Api Disconnect Peer
      operationId: api_disconnect_peer_node_api_v1_peers__peer_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Peer Id
          name: peer_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /node/public/api/v1/info:
    get:
      tags:
        - Node Managment
      summary: Api Get Public Info
      operationId: api_get_public_info_node_public_api_v1_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicNodeInfo'
  /node/public/api/v1/rank:
    get:
      tags:
        - Node Managment
      summary: Api Get 1Ml Stats
      description: Retrieve node ranks from https://1ml.com
      operationId: api_get_1ml_stats_node_public_api_v1_rank_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeRank'
  /api/v1/payments:
    get:
      tags:
        - Payments
      summary: get list of payments
      operationId: Payment_List_api_v1_payments_get
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: list of payments
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Payment'
                type: array
                title: Response Payment List Api V1 Payments Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - Payments
      summary: Create or pay an invoice
      description: |-
        This endpoint can be used both to generate and pay a BOLT11 invoice.
                To generate a new invoice for receiving funds into the authorized account,
                specify at least the first four fields in the POST body: `out: false`,
                `amount`, `unit`, and `memo`. To pay an arbitrary invoice from the funds
                already in the authorized account, specify `out: true` and use the `bolt11`
                field to supply the BOLT11 invoice to be paid.
      operationId: api_payments_create_api_v1_payments_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoice'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid BOLT11 string or missing fields.
        '401':
          description: Invoice (or Admin) key required.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '520':
          description: Payment or Invoice error.
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/payments/history:
    get:
      tags:
        - Payments
      summary: Get Payments History
      operationId: Get_payments_history_api_v1_payments_history_get
      parameters:
        - required: false
          schema:
            type: string
            enum:
              - hour
              - day
              - month
            title: Group
            default: day
          name: group
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentHistoryPoint'
                type: array
                title: Response Get Payments History Api V1 Payments History Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/payments/stats/count:
    get:
      tags:
        - Payments
      summary: Get Payments History For All Users
      operationId: Get_payments_history_for_all_users_api_v1_payments_stats_count_get
      parameters:
        - required: false
          schema:
            type: string
            enum:
              - status
              - tag
              - extension
              - wallet_id
            title: Count By
            default: tag
          name: count_by
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentCountStat'
                type: array
                title: >-
                  Response Get Payments History For All Users Api V1 Payments
                  Stats Count Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/payments/stats/wallets:
    get:
      tags:
        - Payments
      summary: Get Payments History For All Users
      operationId: Get_payments_history_for_all_users_api_v1_payments_stats_wallets_get
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentWalletStats'
                type: array
                title: >-
                  Response Get Payments History For All Users Api V1 Payments
                  Stats Wallets Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/payments/stats/daily:
    get:
      tags:
        - Payments
      summary: Get Payments History Per Day
      operationId: Get_payments_history_per_day_api_v1_payments_stats_daily_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentDailyStats'
                type: array
                title: >-
                  Response Get Payments History Per Day Api V1 Payments Stats
                  Daily Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/payments/paginated:
    get:
      tags:
        - Payments
      summary: get paginated list of payments
      operationId: Payment_List_api_v1_payments_paginated_get
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: list of payments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/payments/all/paginated:
    get:
      tags:
        - Payments
      summary: get paginated list of payments
      operationId: Payment_List_api_v1_payments_all_paginated_get
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Status
          name: status
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Tag
          name: tag
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Checking Id
          name: checking_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: integer
            title: Amount
          name: amount
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: integer
            title: Fee
          name: fee
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Memo
          name: memo
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            format: date-time
            title: Time
          name: time
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Preimage
          name: preimage
          in: query
        - description: Supports Filtering
          required: false
          schema:
            type: string
            title: Payment Hash
          name: payment_hash
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: list of payments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/payments/fee-reserve:
    get:
      tags:
        - Payments
      summary: Api Payments Fee Reserve
      operationId: api_payments_fee_reserve_api_v1_payments_fee_reserve_get
      parameters:
        - required: false
          schema:
            type: string
            title: Invoice
            default: invoice
          name: invoice
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/payments/lnurl:
    post:
      tags:
        - Payments
      summary: Api Payments Pay Lnurl
      operationId: api_payments_pay_lnurl_api_v1_payments_lnurl_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLnurl'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/payments/{payment_hash}:
    get:
      tags:
        - Payments
      summary: Api Payment
      operationId: api_payment_api_v1_payments__payment_hash__get
      parameters:
        - required: true
          schema:
            title: Payment Hash
          name: payment_hash
          in: path
        - required: false
          schema:
            type: string
            title: X-Api-Key
          name: x-api-key
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/payments/decode:
    post:
      tags:
        - Payments
      summary: Api Payments Decode
      operationId: api_payments_decode_api_v1_payments_decode_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecodePayment'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/payments/{payment_request}/pay-with-nfc:
    post:
      tags:
        - Payments
      summary: Api Payment Pay With Nfc
      operationId: >-
        api_payment_pay_with_nfc_api_v1_payments__payment_request__pay_with_nfc_post
      parameters:
        - required: true
          schema:
            type: string
            title: Payment Request
          name: payment_request
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lnbits__core__models__lnurl__PayLnurlWData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/wallet:
    get:
      tags:
        - Wallet
      summary: Api Wallet
      operationId: api_wallet_api_v1_wallet_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    post:
      tags:
        - Wallet
      summary: Api Create Wallet
      operationId: api_create_wallet_api_v1_wallet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lnbits__core__models__wallets__CreateWallet'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    patch:
      tags:
        - Wallet
      summary: Api Update Wallet
      operationId: api_update_wallet_api_v1_wallet_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_api_update_wallet_api_v1_wallet_patch'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/wallet/paginated:
    get:
      tags:
        - Wallet
      summary: get paginated list of user wallets
      operationId: Wallet_List_api_v1_wallet_paginated_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Id
          name: id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Name
          name: name
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Currency
          name: currency
          in: query
      responses:
        '200':
          description: list of user wallets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/wallet/{new_name}:
    put:
      tags:
        - Wallet
      summary: Api Update Wallet Name
      operationId: api_update_wallet_name_api_v1_wallet__new_name__put
      parameters:
        - required: true
          schema:
            type: string
            title: New Name
          name: new_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/wallet/reset/{wallet_id}:
    put:
      tags:
        - Wallet
      summary: Api Reset Wallet Keys
      operationId: api_reset_wallet_keys_api_v1_wallet_reset__wallet_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/wallet/{wallet_id}:
    delete:
      tags:
        - Wallet
      summary: Api Delete Wallet
      operationId: api_delete_wallet_api_v1_wallet__wallet_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/health:
    get:
      tags:
        - Core
      summary: Health
      operationId: health_api_v1_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Health Api V1 Health Get
  /api/v1/status:
    get:
      tags:
        - Core
      summary: Health Check
      operationId: health_check_api_v1_status_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Health Check Api V1 Status Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/wallets:
    get:
      tags:
        - Core
      summary: Wallets
      description: Get basic info for all of user's wallets.
      operationId: Wallets_api_v1_wallets_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseWallet'
                type: array
                title: Response Wallets Api V1 Wallets Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/account:
    post:
      tags:
        - Core
      summary: Api Create Account
      operationId: api_create_account_api_v1_account_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lnbits__core__models__wallets__CreateWallet'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/lnurlscan/{code}:
    get:
      tags:
        - Core
      summary: Api Lnurlscan
      operationId: api_lnurlscan_api_v1_lnurlscan__code__get
      parameters:
        - required: true
          schema:
            type: string
            title: Code
          name: code
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/lnurlauth:
    post:
      tags:
        - Core
      summary: Api Perform Lnurlauth
      operationId: api_perform_lnurlauth_api_v1_lnurlauth_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLnurlAuth'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/rate/history:
    get:
      tags:
        - Core
      summary: Api Exchange Rate History
      operationId: api_exchange_rate_history_api_v1_rate_history_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
                title: Response Api Exchange Rate History Api V1 Rate History Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /api/v1/rate/{currency}:
    get:
      tags:
        - Core
      summary: Api Check Fiat Rate
      operationId: api_check_fiat_rate_api_v1_rate__currency__get
      parameters:
        - required: true
          schema:
            type: string
            title: Currency
          name: currency
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: number
                type: object
                title: Response Api Check Fiat Rate Api V1 Rate  Currency  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/currencies:
    get:
      tags:
        - Core
      summary: Api List Currencies Available
      operationId: api_list_currencies_available_api_v1_currencies_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                title: Response Api List Currencies Available Api V1 Currencies Get
  /api/v1/conversion:
    post:
      tags:
        - Core
      summary: Api Fiat As Sats
      operationId: api_fiat_as_sats_api_v1_conversion_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/qrcode/{data}:
    get:
      tags:
        - Core
      summary: Img
      operationId: img_api_v1_qrcode__data__get
      parameters:
        - required: true
          schema:
            title: Data
          name: data
          in: path
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ws/{item_id}:
    post:
      tags:
        - Websocket
      summary: Websocket Update Post
      operationId: websocket_update_post_api_v1_ws__item_id__post
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
        - required: true
          schema:
            type: string
            title: Data
          name: data
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ws/{item_id}/{data}:
    get:
      tags:
        - Websocket
      summary: Websocket Update Get
      operationId: websocket_update_get_api_v1_ws__item_id___data__get
      parameters:
        - required: true
          schema:
            type: string
            title: Item Id
          name: item_id
          in: path
        - required: true
          schema:
            type: string
            title: Data
          name: data
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tinyurl:
    post:
      tags:
        - Tinyurl
      summary: Tinyurl
      description: creates a tinyurl
      operationId: Tinyurl_api_v1_tinyurl_post
      parameters:
        - required: true
          schema:
            type: string
            title: Url
          name: url
          in: query
        - required: false
          schema:
            type: boolean
            title: Endless
            default: false
          name: endless
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /api/v1/tinyurl/{tinyurl_id}:
    get:
      tags:
        - Tinyurl
      summary: Tinyurl
      description: get a tinyurl by id
      operationId: Tinyurl_api_v1_tinyurl__tinyurl_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Tinyurl Id
          name: tinyurl_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
    delete:
      tags:
        - Tinyurl
      summary: Tinyurl
      description: delete a tinyurl by id
      operationId: Tinyurl_api_v1_tinyurl__tinyurl_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: Tinyurl Id
          name: tinyurl_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
        - APIKeyQuery: []
  /t/{tinyurl_id}:
    get:
      tags:
        - Tinyurl
      summary: Tinyurl
      description: redirects a tinyurl by id
      operationId: Tinyurl_t__tinyurl_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: Tinyurl Id
          name: tinyurl_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/webpush:
    post:
      tags:
        - Webpush
      summary: Api Create Webpush Subscription
      operationId: api_create_webpush_subscription_api_v1_webpush_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebPushSubscription'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPushSubscription'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Webpush
      summary: Api Delete Webpush Subscription
      operationId: api_delete_webpush_subscription_api_v1_webpush_delete
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user:
    get:
      tags:
        - Users
      summary: Get paginated list of accounts
      operationId: Get_accounts_users_api_v1_user_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Email
          name: email
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: User
          name: user
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Username
          name: username
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Pubkey
          name: pubkey
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Wallet Id
          name: wallet_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Users
      summary: Create User
      operationId: Create_user_users_api_v1_user_post
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}:
    get:
      tags:
        - Users
      summary: Get user by Id
      operationId: Get_user_users_api_v1_user__user_id__get
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    put:
      tags:
        - Users
      summary: Update User
      operationId: Update_user_users_api_v1_user__user_id__put
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    delete:
      tags:
        - Users
      summary: Delete User By Id
      operationId: Delete_user_by_Id_users_api_v1_user__user_id__delete
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/reset_password:
    put:
      tags:
        - Users
      summary: Reset User Password
      operationId: Reset_user_password_users_api_v1_user__user_id__reset_password_put
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: >-
                  Response Reset User Password Users Api V1 User  User Id  Reset
                  Password Put
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/admin:
    get:
      tags:
        - Users
      summary: Give Or Revoke Admin Permsisions To A User
      operationId: >-
        Give_or_revoke_admin_permsisions_to_a_user_users_api_v1_user__user_id__admin_get
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/wallet:
    get:
      tags:
        - Users
      summary: Get Wallets For User
      operationId: Get_wallets_for_user_users_api_v1_user__user_id__wallet_get
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Wallet'
                type: array
                title: >-
                  Response Get Wallets For User Users Api V1 User  User Id 
                  Wallet Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
    post:
      tags:
        - Users
      summary: Create A New Wallet For User
      operationId: Create_a_new_wallet_for_user_users_api_v1_user__user_id__wallet_post
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Body_Create_a_new_wallet_for_user_users_api_v1_user__user_id__wallet_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/wallet/{wallet}/undelete:
    put:
      tags:
        - Users
      summary: Reactivate Deleted Wallet
      operationId: >-
        Reactivate_deleted_wallet_users_api_v1_user__user_id__wallet__wallet__undelete_put
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: true
          schema:
            type: string
            title: Wallet
          name: wallet
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/wallets:
    delete:
      tags:
        - Users
      summary: Soft delete (only sets a flag) all user wallets.
      operationId: Delete_all_wallets_for_user_users_api_v1_user__user_id__wallets_delete
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/user/{user_id}/wallet/{wallet}:
    delete:
      tags:
        - Users
      summary: >-
        First time it is called it does a soft delete (only sets a flag).The
        second time it is called will delete the entry from the DB
      operationId: Delete_wallet_by_id_users_api_v1_user__user_id__wallet__wallet__delete
      parameters:
        - required: true
          schema:
            type: string
            title: User Id
          name: user_id
          in: path
        - required: true
          schema:
            type: string
            title: Wallet
          name: wallet
          in: path
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /users/api/v1/balance:
    put:
      tags:
        - Users
      summary: Update balance for a particular wallet.
      operationId: UpdateBalance_users_api_v1_balance_put
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBalance'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /audit/api/v1:
    get:
      tags:
        - Audit
      summary: Get paginated list audit entries
      operationId: Get_audit_entries_audit_api_v1_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Ip Address
          name: ip_address
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: User Id
          name: user_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Path
          name: path
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Request Method
          name: request_method
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Response Code
          name: response_code
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Component
          name: component
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
  /audit/api/v1/stats:
    get:
      tags:
        - Audit
      summary: Get paginated list audit entries
      operationId: Get_audit_entries_audit_api_v1_stats_get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid4
            title: Usr
          name: usr
          in: query
        - required: false
          schema:
            type: integer
            title: Limit
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            title: Offset
          name: offset
          in: query
        - required: false
          schema:
            type: string
            title: Sortby
          name: sortby
          in: query
        - required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            title: Direction
          name: direction
          in: query
        - description: Text based search
          required: false
          schema:
            type: string
            title: Search
            description: Text based search
          name: search
          in: query
        - required: false
          schema:
            type: string
            title: Cookie Access Token
          name: cookie_access_token
          in: cookie
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Ip Address
          name: ip_address
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: User Id
          name: user_id
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Path
          name: path
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Request Method
          name: request_method
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Response Code
          name: response_code
          in: query
        - description: Supports Filtering. Supports Search
          required: false
          schema:
            type: string
            title: Component
          name: component
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditStats'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - HTTPBearer: []
components:
  schemas:
    AccessControlList:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        endpoints:
          items:
            $ref: '#/components/schemas/EndpointAccess'
          type: array
          title: Endpoints
          default: []
        token_id_list:
          items:
            $ref: '#/components/schemas/SimpleItem'
          type: array
          title: Token Id List
          default: []
      type: object
      required:
        - id
        - name
      title: AccessControlList
    AddressExtra:
      properties:
        currency:
          type: string
          title: Currency
        price:
          type: number
          title: Price
        price_in_sats:
          type: number
          title: Price In Sats
        payment_hash:
          type: string
          title: Payment Hash
        reimburse_payment_hash:
          type: string
          title: Reimburse Payment Hash
        promo_code:
          type: string
          title: Promo Code
        referer:
          type: string
          title: Referer
        activated_by_owner:
          type: boolean
          title: Activated By Owner
          default: false
        years:
          type: integer
          title: Years
          default: 1
        max_years:
          type: integer
          title: Max Years
          default: 1
        relays:
          items:
            type: string
          type: array
          title: Relays
          default: []
        ln_address:
          allOf:
            - $ref: '#/components/schemas/LnAddressConfig'
          title: Ln Address
          default:
            wallet: ''
            min: 1
            max: 10000000
            pay_link_id: ''
      type: object
      title: AddressExtra
    AddressStatus:
      properties:
        identifier:
          type: string
          title: Identifier
        available:
          type: boolean
          title: Available
          default: false
        price:
          type: number
          title: Price
        price_in_sats:
          type: number
          title: Price In Sats
        price_reason:
          type: string
          title: Price Reason
        currency:
          type: string
          title: Currency
      type: object
      required:
        - identifier
      title: AddressStatus
    AdminSettings:
      properties:
        keycloak_discovery_url:
          type: string
          title: Keycloak Discovery Url
          default: ''
        keycloak_client_id:
          type: string
          title: Keycloak Client Id
          default: ''
        keycloak_client_secret:
          type: string
          title: Keycloak Client Secret
          default: ''
        keycloak_client_custom_org:
          type: string
          title: Keycloak Client Custom Org
        keycloak_client_custom_icon:
          type: string
          title: Keycloak Client Custom Icon
        github_client_id:
          type: string
          title: Github Client Id
          default: ''
        github_client_secret:
          type: string
          title: Github Client Secret
          default: ''
        google_client_id:
          type: string
          title: Google Client Id
          default: ''
        google_client_secret:
          type: string
          title: Google Client Secret
          default: ''
        nostr_absolute_request_urls:
          items:
            type: string
          type: array
          title: Nostr Absolute Request Urls
          default:
            - http://127.0.0.1:5000
            - http://localhost:5000
        auth_token_expire_minutes:
          type: integer
          exclusiveMinimum: 0
          title: Auth Token Expire Minutes
          default: 525600
        auth_allowed_methods:
          items:
            type: string
          type: array
          title: Auth Allowed Methods
          default:
            - user-id-only
            - username-password
        auth_credetials_update_threshold:
          type: integer
          exclusiveMinimum: 0
          title: Auth Credetials Update Threshold
          default: 120
        auth_all_methods:
          items: {}
          type: array
          title: Auth All Methods
          default:
            - user-id-only
            - username-password
            - nostr-auth-nip98
            - google-auth
            - github-auth
            - keycloak-auth
        lnbits_audit_enabled:
          type: boolean
          title: Lnbits Audit Enabled
          default: true
        lnbits_audit_retention_days:
          type: integer
          minimum: 0
          title: Lnbits Audit Retention Days
          default: 7
        lnbits_audit_log_ip_address:
          type: boolean
          title: Lnbits Audit Log Ip Address
          default: false
        lnbits_audit_log_path_params:
          type: boolean
          title: Lnbits Audit Log Path Params
          default: true
        lnbits_audit_log_query_params:
          type: boolean
          title: Lnbits Audit Log Query Params
          default: true
        lnbits_audit_log_request_body:
          type: boolean
          title: Lnbits Audit Log Request Body
          default: false
        lnbits_audit_include_paths:
          items:
            type: string
          type: array
          title: Lnbits Audit Include Paths
          default:
            - .*api/v1/.*
        lnbits_audit_exclude_paths:
          items:
            type: string
          type: array
          title: Lnbits Audit Exclude Paths
          default:
            - /static
        lnbits_audit_http_methods:
          items:
            type: string
          type: array
          title: Lnbits Audit Http Methods
          default:
            - POST
            - PUT
            - PATCH
            - DELETE
        lnbits_audit_http_response_codes:
          items:
            type: string
          type: array
          title: Lnbits Audit Http Response Codes
          default:
            - 4.*
            - 5.*
        lnbits_node_ui:
          type: boolean
          title: Lnbits Node Ui
          default: false
        lnbits_public_node_ui:
          type: boolean
          title: Lnbits Public Node Ui
          default: false
        lnbits_node_ui_transactions:
          type: boolean
          title: Lnbits Node Ui Transactions
          default: false
        lnbits_webpush_pubkey:
          type: string
          title: Lnbits Webpush Pubkey
        lnbits_webpush_privkey:
          type: string
          title: Lnbits Webpush Privkey
        lightning_invoice_expiry:
          type: integer
          exclusiveMinimum: 0
          title: Lightning Invoice Expiry
          default: 3600
        strike_api_endpoint:
          type: string
          title: Strike Api Endpoint
          default: https://api.strike.me/v1
          env: STRIKE_API_ENDPOINT
        strike_api_key:
          type: string
          title: Strike Api Key
          env: STRIKE_API_KEY
        breez_api_key:
          type: string
          title: Breez Api Key
        breez_greenlight_seed:
          type: string
          title: Breez Greenlight Seed
        breez_greenlight_invite_code:
          type: string
          title: Breez Greenlight Invite Code
        breez_greenlight_device_key:
          type: string
          title: Breez Greenlight Device Key
        breez_greenlight_device_cert:
          type: string
          title: Breez Greenlight Device Cert
        breez_use_trampoline:
          type: boolean
          title: Breez Use Trampoline
          default: true
        nwc_pairing_url:
          type: string
          title: Nwc Pairing Url
        lntips_api_endpoint:
          type: string
          title: Lntips Api Endpoint
        lntips_api_key:
          type: string
          title: Lntips Api Key
        lntips_admin_key:
          type: string
          title: Lntips Admin Key
        lntips_invoice_key:
          type: string
          title: Lntips Invoice Key
        spark_url:
          type: string
          title: Spark Url
        spark_token:
          type: string
          title: Spark Token
        opennode_api_endpoint:
          type: string
          title: Opennode Api Endpoint
        opennode_key:
          type: string
          title: Opennode Key
        opennode_admin_key:
          type: string
          title: Opennode Admin Key
        opennode_invoice_key:
          type: string
          title: Opennode Invoice Key
        phoenixd_api_endpoint:
          type: string
          title: Phoenixd Api Endpoint
          default: http://localhost:9740/
        phoenixd_api_password:
          type: string
          title: Phoenixd Api Password
        zbd_api_endpoint:
          type: string
          title: Zbd Api Endpoint
          default: https://api.zebedee.io/v0/
        zbd_api_key:
          type: string
          title: Zbd Api Key
        boltz_client_endpoint:
          type: string
          title: Boltz Client Endpoint
          default: 127.0.0.1:9002
        boltz_client_macaroon:
          type: string
          title: Boltz Client Macaroon
        boltz_client_wallet:
          type: string
          title: Boltz Client Wallet
          default: lnbits
        boltz_client_password:
          type: string
          title: Boltz Client Password
          default: ''
        boltz_client_cert:
          type: string
          title: Boltz Client Cert
        boltz_mnemonic:
          type: string
          title: Boltz Mnemonic
        alby_api_endpoint:
          type: string
          title: Alby Api Endpoint
          default: https://api.getalby.com/
        alby_access_token:
          type: string
          title: Alby Access Token
        blink_api_endpoint:
          type: string
          title: Blink Api Endpoint
          default: https://api.blink.sv/graphql
        blink_ws_endpoint:
          type: string
          title: Blink Ws Endpoint
          default: wss://ws.blink.sv/graphql
        blink_token:
          type: string
          title: Blink Token
        lnpay_api_endpoint:
          type: string
          title: Lnpay Api Endpoint
        lnpay_api_key:
          type: string
          title: Lnpay Api Key
        lnpay_wallet_key:
          type: string
          title: Lnpay Wallet Key
        lnpay_admin_key:
          type: string
          title: Lnpay Admin Key
        lnd_grpc_endpoint:
          type: string
          title: Lnd Grpc Endpoint
        lnd_grpc_cert:
          type: string
          title: Lnd Grpc Cert
        lnd_grpc_port:
          type: integer
          title: Lnd Grpc Port
        lnd_grpc_admin_macaroon:
          type: string
          title: Lnd Grpc Admin Macaroon
        lnd_grpc_invoice_macaroon:
          type: string
          title: Lnd Grpc Invoice Macaroon
        lnd_grpc_macaroon:
          type: string
          title: Lnd Grpc Macaroon
        lnd_grpc_macaroon_encrypted:
          type: string
          title: Lnd Grpc Macaroon Encrypted
        lnd_rest_endpoint:
          type: string
          title: Lnd Rest Endpoint
        lnd_rest_cert:
          type: string
          title: Lnd Rest Cert
        lnd_rest_macaroon:
          type: string
          title: Lnd Rest Macaroon
        lnd_rest_macaroon_encrypted:
          type: string
          title: Lnd Rest Macaroon Encrypted
        lnd_rest_route_hints:
          type: boolean
          title: Lnd Rest Route Hints
          default: true
        lnd_rest_allow_self_payment:
          type: boolean
          title: Lnd Rest Allow Self Payment
          default: false
        lnd_cert:
          type: string
          title: Lnd Cert
        lnd_admin_macaroon:
          type: string
          title: Lnd Admin Macaroon
        lnd_invoice_macaroon:
          type: string
          title: Lnd Invoice Macaroon
        lnd_rest_admin_macaroon:
          type: string
          title: Lnd Rest Admin Macaroon
        lnd_rest_invoice_macaroon:
          type: string
          title: Lnd Rest Invoice Macaroon
        eclair_url:
          type: string
          title: Eclair Url
        eclair_pass:
          type: string
          title: Eclair Pass
        corelightning_rest_url:
          type: string
          title: Corelightning Rest Url
        corelightning_rest_macaroon:
          type: string
          title: Corelightning Rest Macaroon
        corelightning_rest_cert:
          type: string
          title: Corelightning Rest Cert
        corelightning_rpc:
          type: string
          title: Corelightning Rpc
        corelightning_pay_command:
          type: string
          title: Corelightning Pay Command
          default: pay
        clightning_rpc:
          type: string
          title: Clightning Rpc
        cliche_endpoint:
          type: string
          title: Cliche Endpoint
        lnbits_endpoint:
          type: string
          title: Lnbits Endpoint
          default: https://demo.lnbits.com
        lnbits_key:
          type: string
          title: Lnbits Key
        lnbits_admin_key:
          type: string
          title: Lnbits Admin Key
        lnbits_invoice_key:
          type: string
          title: Lnbits Invoice Key
        fake_wallet_secret:
          type: string
          title: Fake Wallet Secret
          default: ToTheMoon1
        lnbits_denomination:
          type: string
          title: Lnbits Denomination
          default: sats
        lnbits_backend_wallet_class:
          type: string
          title: Lnbits Backend Wallet Class
          default: VoidWallet
        lnbits_funding_source_pay_invoice_wait_seconds:
          type: integer
          minimum: 0
          title: Lnbits Funding Source Pay Invoice Wait Seconds
          default: 5
        lnbits_nostr_notifications_enabled:
          type: boolean
          title: Lnbits Nostr Notifications Enabled
          default: false
        lnbits_nostr_notifications_private_key:
          type: string
          title: Lnbits Nostr Notifications Private Key
          default: ''
        lnbits_nostr_notifications_identifiers:
          items:
            type: string
          type: array
          title: Lnbits Nostr Notifications Identifiers
          default: []
        lnbits_telegram_notifications_enabled:
          type: boolean
          title: Lnbits Telegram Notifications Enabled
          default: false
        lnbits_telegram_notifications_access_token:
          type: string
          title: Lnbits Telegram Notifications Access Token
          default: ''
        lnbits_telegram_notifications_chat_id:
          type: string
          title: Lnbits Telegram Notifications Chat Id
          default: ''
        lnbits_email_notifications_enabled:
          type: boolean
          title: Lnbits Email Notifications Enabled
          default: false
        lnbits_email_notifications_email:
          type: string
          title: Lnbits Email Notifications Email
          default: ''
        lnbits_email_notifications_username:
          type: string
          title: Lnbits Email Notifications Username
          default: ''
        lnbits_email_notifications_password:
          type: string
          title: Lnbits Email Notifications Password
          default: ''
        lnbits_email_notifications_server:
          type: string
          title: Lnbits Email Notifications Server
          default: smtp.protonmail.ch
        lnbits_email_notifications_port:
          type: integer
          title: Lnbits Email Notifications Port
          default: 587
        lnbits_email_notifications_to_emails:
          items:
            type: string
          type: array
          title: Lnbits Email Notifications To Emails
          default: []
        lnbits_notification_settings_update:
          type: boolean
          title: Lnbits Notification Settings Update
          default: true
        lnbits_notification_credit_debit:
          type: boolean
          title: Lnbits Notification Credit Debit
          default: true
        notification_balance_delta_changed:
          type: boolean
          title: Notification Balance Delta Changed
          default: true
        lnbits_notification_server_start_stop:
          type: boolean
          title: Lnbits Notification Server Start Stop
          default: true
        lnbits_notification_watchdog:
          type: boolean
          title: Lnbits Notification Watchdog
          default: false
        lnbits_notification_server_status_hours:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Notification Server Status Hours
          default: 24
        lnbits_notification_incoming_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Notification Incoming Payment Amount Sats
          default: 1000000
        lnbits_notification_outgoing_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Notification Outgoing Payment Amount Sats
          default: 1000000
        lnbits_rate_limit_no:
          type: integer
          minimum: 0
          title: Lnbits Rate Limit No
          default: 200
        lnbits_rate_limit_unit:
          type: string
          title: Lnbits Rate Limit Unit
          default: minute
        lnbits_allowed_ips:
          items:
            type: string
          type: array
          title: Lnbits Allowed Ips
          default: []
        lnbits_blocked_ips:
          items:
            type: string
          type: array
          title: Lnbits Blocked Ips
          default: []
        lnbits_callback_url_rules:
          items:
            type: string
          type: array
          title: Lnbits Callback Url Rules
          default:
            - https?://([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})(:\d+)?
        lnbits_wallet_limit_max_balance:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Max Balance
          default: 0
        lnbits_wallet_limit_daily_max_withdraw:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Daily Max Withdraw
          default: 0
        lnbits_wallet_limit_secs_between_trans:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Secs Between Trans
          default: 0
        lnbits_only_allow_incoming_payments:
          type: boolean
          title: Lnbits Only Allow Incoming Payments
          default: false
        lnbits_watchdog_switch_to_voidwallet:
          type: boolean
          title: Lnbits Watchdog Switch To Voidwallet
          default: false
        lnbits_watchdog_interval_minutes:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Watchdog Interval Minutes
          default: 60
        lnbits_watchdog_delta:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Watchdog Delta
          default: 1000000
        lnbits_max_outgoing_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Max Outgoing Payment Amount Sats
          default: 10000000
        lnbits_max_incoming_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Max Incoming Payment Amount Sats
          default: 10000000
        lnbits_exchange_rate_cache_seconds:
          type: integer
          minimum: 0
          title: Lnbits Exchange Rate Cache Seconds
          default: 30
        lnbits_exchange_history_size:
          type: integer
          minimum: 0
          title: Lnbits Exchange History Size
          default: 60
        lnbits_exchange_history_refresh_interval_seconds:
          type: integer
          minimum: 0
          title: Lnbits Exchange History Refresh Interval Seconds
          default: 300
        lnbits_exchange_rate_providers:
          items:
            $ref: '#/components/schemas/ExchangeRateProvider'
          type: array
          title: Lnbits Exchange Rate Providers
          default:
            - name: Binance
              api_url: https://api.binance.com/api/v3/ticker/price?symbol=BTC{TO}
              path: $.price
              exclude_to:
                - czk
              ticker_conversion:
                - USD:USDT
            - name: Blockchain
              api_url: https://blockchain.info/frombtc?currency={TO}&value=100000000
              path: ''
              exclude_to: []
              ticker_conversion: []
            - name: Exir
              api_url: https://api.exir.io/v1/ticker?symbol=btc-{to}
              path: $.last
              exclude_to:
                - czk
                - eur
              ticker_conversion:
                - USD:USDT
            - name: Bitfinex
              api_url: https://api.bitfinex.com/v1/pubticker/btc{to}
              path: $.last_price
              exclude_to:
                - czk
              ticker_conversion: []
            - name: Bitstamp
              api_url: https://www.bitstamp.net/api/v2/ticker/btc{to}/
              path: $.last
              exclude_to:
                - czk
              ticker_conversion: []
            - name: Coinbase
              api_url: https://api.coinbase.com/v2/exchange-rates?currency=BTC
              path: $.data.rates.{TO}
              exclude_to: []
              ticker_conversion: []
            - name: Kraken
              api_url: https://api.kraken.com/0/public/Ticker?pair=XBT{TO}
              path: $.result.XXBTZ{TO}.c[0]
              exclude_to:
                - czk
              ticker_conversion: []
            - name: yadio
              api_url: https://api.yadio.io/exrates/BTC
              path: $.BTC.{TO}
              exclude_to: []
              ticker_conversion: []
        lnbits_reserve_fee_min:
          type: integer
          minimum: 0
          title: Lnbits Reserve Fee Min
          default: 2000
        lnbits_reserve_fee_percent:
          type: number
          minimum: 0
          title: Lnbits Reserve Fee Percent
          default: 1
        lnbits_service_fee:
          type: number
          minimum: 0
          title: Lnbits Service Fee
          default: 0
        lnbits_service_fee_ignore_internal:
          type: boolean
          title: Lnbits Service Fee Ignore Internal
          default: true
        lnbits_service_fee_max:
          type: integer
          title: Lnbits Service Fee Max
          default: 0
        lnbits_service_fee_wallet:
          type: string
          title: Lnbits Service Fee Wallet
        lnbits_baseurl:
          type: string
          title: Lnbits Baseurl
          default: http://127.0.0.1:5000/
        lnbits_hide_api:
          type: boolean
          title: Lnbits Hide Api
          default: false
        lnbits_upload_size_bytes:
          type: integer
          minimum: 0
          title: Lnbits Upload Size Bytes
          default: 512000
        lnbits_upload_allowed_types:
          items:
            type: string
          type: array
          title: Lnbits Upload Allowed Types
          default:
            - image/png
            - image/jpeg
            - image/jpg
            - image/heic
            - image/heif
            - image/heics
            - png
            - jpeg
            - jpg
            - heic
            - heif
            - heics
        lnbits_site_title:
          type: string
          title: Lnbits Site Title
          default: LNbits
        lnbits_site_tagline:
          type: string
          title: Lnbits Site Tagline
          default: free and open-source lightning wallet
        lnbits_site_description:
          type: string
          title: Lnbits Site Description
          default: The world's most powerful suite of bitcoin tools.
        lnbits_show_home_page_elements:
          type: boolean
          title: Lnbits Show Home Page Elements
          default: true
        lnbits_default_wallet_name:
          type: string
          title: Lnbits Default Wallet Name
          default: LNbits wallet
        lnbits_custom_badge:
          type: string
          title: Lnbits Custom Badge
        lnbits_custom_badge_color:
          type: string
          title: Lnbits Custom Badge Color
          default: warning
        lnbits_theme_options:
          items:
            type: string
          type: array
          title: Lnbits Theme Options
          default:
            - classic
            - freedom
            - mint
            - salvador
            - monochrome
            - autumn
            - cyber
            - flamingo
            - bitcoin
        lnbits_custom_logo:
          type: string
          title: Lnbits Custom Logo
        lnbits_custom_image:
          type: string
          title: Lnbits Custom Image
          default: /static/images/logos/lnbits.svg
        lnbits_ad_space_title:
          type: string
          title: Lnbits Ad Space Title
          default: Supported by
        lnbits_ad_space:
          type: string
          title: Lnbits Ad Space
          default: >-
            https://shop.lnbits.com/;/static/images/bitcoin-shop-banner.png;/static/images/bitcoin-shop-banner.png,https://affil.trezor.io/aff_c?offer_id=169&aff_id=33845;/static/images/bitcoin-hardware-wallet.png;/static/images/bitcoin-hardware-wallet.png,https://opensats.org/;/static/images/open-sats.png;/static/images/open-sats.png
        lnbits_ad_space_enabled:
          type: boolean
          title: Lnbits Ad Space Enabled
          default: false
        lnbits_allowed_currencies:
          items:
            type: string
          type: array
          title: Lnbits Allowed Currencies
          default: []
        lnbits_default_accounting_currency:
          type: string
          title: Lnbits Default Accounting Currency
        lnbits_qr_logo:
          type: string
          title: Lnbits Qr Logo
          default: /static/images/favicon_qr_logo.png
        lnbits_default_reaction:
          type: string
          title: Lnbits Default Reaction
          default: confettiBothSides
        lnbits_default_theme:
          type: string
          title: Lnbits Default Theme
          default: salvador
        lnbits_default_border:
          type: string
          title: Lnbits Default Border
          default: hard-border
        lnbits_default_gradient:
          type: boolean
          title: Lnbits Default Gradient
          default: true
        lnbits_default_bgimage:
          type: string
          title: Lnbits Default Bgimage
        lnbits_admin_extensions:
          items:
            type: string
          type: array
          title: Lnbits Admin Extensions
          default: []
        lnbits_user_default_extensions:
          items:
            type: string
          type: array
          title: Lnbits User Default Extensions
          default: []
        lnbits_extensions_deactivate_all:
          type: boolean
          title: Lnbits Extensions Deactivate All
          default: false
        lnbits_extensions_manifests:
          items:
            type: string
          type: array
          title: Lnbits Extensions Manifests
          default:
            - >-
              https://raw.githubusercontent.com/lnbits/lnbits-extensions/main/extensions.json
        lnbits_admin_users:
          items:
            type: string
          type: array
          title: Lnbits Admin Users
          default: []
        lnbits_allowed_users:
          items:
            type: string
          type: array
          title: Lnbits Allowed Users
          default: []
        lnbits_allow_new_accounts:
          type: boolean
          title: Lnbits Allow New Accounts
          default: true
        is_super_user:
          type: boolean
          title: Is Super User
        lnbits_allowed_funding_sources:
          items:
            type: string
          type: array
          title: Lnbits Allowed Funding Sources
      type: object
      required:
        - is_super_user
      title: AdminSettings
    ApiTokenRequest:
      properties:
        acl_id:
          type: string
          title: Acl Id
        token_name:
          type: string
          title: Token Name
        password:
          type: string
          title: Password
        expiration_time_minutes:
          type: integer
          title: Expiration Time Minutes
      type: object
      required:
        - acl_id
        - token_name
        - password
        - expiration_time_minutes
      title: ApiTokenRequest
    ApiTokenResponse:
      properties:
        id:
          type: string
          title: Id
        api_token:
          type: string
          title: Api Token
      type: object
      required:
        - id
        - api_token
      title: ApiTokenResponse
    AuctionDuration:
      properties:
        days:
          type: integer
          title: Days
          default: 7
        hours:
          type: integer
          title: Hours
          default: 0
        minutes:
          type: integer
          title: Minutes
          default: 0
      type: object
      title: AuctionDuration
    AuctionRoom:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        currency:
          type: string
          title: Currency
        type:
          type: string
          title: Type
          default: auction
        duration_seconds:
          type: integer
          title: Duration Seconds
          default: 0
          no_database: true
        min_bid_up_percentage:
          type: number
          title: Min Bid Up Percentage
          default: 5
        room_percentage:
          type: number
          title: Room Percentage
          default: 10
        user_id:
          type: string
          title: User Id
        created_at:
          type: string
          format: date-time
          title: Created At
        fee_wallet_id:
          type: string
          title: Fee Wallet Id
        is_open_room:
          type: boolean
          title: Is Open Room
          default: false
        extra:
          $ref: '#/components/schemas/AuctionRoomConfig'
      type: object
      required:
        - id
        - name
        - description
        - currency
        - user_id
        - fee_wallet_id
        - extra
      title: AuctionRoom
    AuctionRoomConfig:
      properties:
        duration:
          allOf:
            - $ref: '#/components/schemas/AuctionDuration'
          title: Duration
          default:
            days: 7
            hours: 0
            minutes: 0
        lock_webhook:
          allOf:
            - $ref: '#/components/schemas/Webhook'
          title: Lock Webhook
          default:
            method: GET
            url: ''
            headers: ''
            data: ''
        unlock_webhook:
          allOf:
            - $ref: '#/components/schemas/Webhook'
          title: Unlock Webhook
          default:
            method: GET
            url: ''
            headers: ''
            data: ''
        transfer_webhook:
          allOf:
            - $ref: '#/components/schemas/Webhook'
          title: Transfer Webhook
          default:
            method: GET
            url: ''
            headers: ''
            data: ''
      type: object
      title: AuctionRoomConfig
    AuditCountStat:
      properties:
        field:
          type: string
          title: Field
          default: ''
        total:
          type: number
          title: Total
          default: 0
      type: object
      title: AuditCountStat
    AuditStats:
      properties:
        request_method:
          items:
            $ref: '#/components/schemas/AuditCountStat'
          type: array
          title: Request Method
          default: []
        response_code:
          items:
            $ref: '#/components/schemas/AuditCountStat'
          type: array
          title: Response Code
          default: []
        component:
          items:
            $ref: '#/components/schemas/AuditCountStat'
          type: array
          title: Component
          default: []
        long_duration:
          items:
            $ref: '#/components/schemas/AuditCountStat'
          type: array
          title: Long Duration
          default: []
      type: object
      title: AuditStats
    AutoReverseSubmarineSwap:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
        amount:
          type: integer
          title: Amount
        feerate_limit:
          type: integer
          title: Feerate Limit
        balance:
          type: integer
          title: Balance
        onchain_address:
          type: string
          title: Onchain Address
        instant_settlement:
          type: boolean
          title: Instant Settlement
        time:
          type: string
          format: date-time
          title: Time
        count:
          type: integer
          title: Count
      type: object
      required:
        - id
        - wallet
        - asset
        - amount
        - balance
        - onchain_address
        - instant_settlement
        - count
      title: AutoReverseSubmarineSwap
    BaseWallet:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        adminkey:
          type: string
          title: Adminkey
        inkey:
          type: string
          title: Inkey
        balance_msat:
          type: integer
          title: Balance Msat
      type: object
      required:
        - id
        - name
        - adminkey
        - inkey
        - balance_msat
      title: BaseWallet
    BidRequest:
      properties:
        memo:
          type: string
          title: Memo
        ln_address:
          type: string
          title: Ln Address
        amount:
          type: number
          title: Amount
      type: object
      required:
        - memo
        - amount
      title: BidRequest
    BidResponse:
      properties:
        id:
          type: string
          title: Id
        payment_hash:
          type: string
          title: Payment Hash
        payment_request:
          type: string
          title: Payment Request
      type: object
      required:
        - id
        - payment_hash
        - payment_request
      title: BidResponse
    Bitcoinswitch:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        currency:
          type: string
          title: Currency
        key:
          type: string
          title: Key
        switches:
          items:
            $ref: '#/components/schemas/Switch'
          type: array
          title: Switches
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
        - title
        - wallet
        - currency
        - key
        - switches
      title: Bitcoinswitch
    Bleskomat:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        api_key_id:
          type: string
          title: Api Key Id
        api_key_secret:
          type: string
          title: Api Key Secret
        api_key_encoding:
          type: string
          title: Api Key Encoding
        name:
          type: string
          title: Name
        fiat_currency:
          type: string
          title: Fiat Currency
        exchange_rate_provider:
          type: string
          title: Exchange Rate Provider
        fee:
          type: string
          title: Fee
      type: object
      required:
        - id
        - wallet
        - api_key_id
        - api_key_secret
        - api_key_encoding
        - name
        - fiat_currency
        - exchange_rate_provider
        - fee
      title: Bleskomat
    Body_Create_a_new_wallet_for_user_users_api_v1_user__user_id__wallet_post:
      properties:
        name:
          type: string
          title: Name
        currency:
          type: string
          title: Currency
      type: object
      title: >-
        Body_Create_a_new_wallet_for_user_users_api_v1_user__user_id__wallet_post
    Body_api_connect_peer_node_api_v1_peers_post:
      properties:
        uri:
          type: string
          title: Uri
      type: object
      required:
        - uri
      title: Body_api_connect_peer_node_api_v1_peers_post
    Body_api_create_channel_node_api_v1_channels_post:
      properties:
        peer_id:
          type: string
          title: Peer Id
        funding_amount:
          type: integer
          title: Funding Amount
        push_amount:
          type: integer
          title: Push Amount
        fee_rate:
          type: integer
          title: Fee Rate
      type: object
      required:
        - peer_id
        - funding_amount
      title: Body_api_create_channel_node_api_v1_channels_post
    Body_api_set_channel_fees_node_api_v1_channels__channel_id__put:
      properties:
        fee_ppm:
          type: integer
          title: Fee Ppm
        fee_base_msat:
          type: integer
          title: Fee Base Msat
      type: object
      title: Body_api_set_channel_fees_node_api_v1_channels__channel_id__put
    Body_api_update_wallet_api_v1_wallet_patch:
      properties:
        name:
          type: string
          title: Name
        icon:
          type: string
          title: Icon
        color:
          type: string
          title: Color
        currency:
          type: string
          title: Currency
        pinned:
          type: boolean
          title: Pinned
      type: object
      title: Body_api_update_wallet_api_v1_wallet_patch
    Body_upload_image_admin_api_v1_images_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_upload_image_admin_api_v1_images_post
    BoltzSettings:
      properties:
        boltz_network:
          type: string
          title: Boltz Network
          default: main
        boltz_network_liquid:
          type: string
          title: Boltz Network Liquid
          default: liquidv1
        boltz_url:
          type: string
          title: Boltz Url
          default: https://boltz.exchange/api
      type: object
      title: BoltzSettings
    BuyOrder:
      properties:
        action:
          type: string
          title: Action
        relay_id:
          type: string
          title: Relay Id
        pubkey:
          type: string
          title: Pubkey
        units_to_buy:
          type: integer
          title: Units To Buy
          default: 0
      type: object
      required:
        - action
        - relay_id
        - pubkey
      title: BuyOrder
    Card:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        card_name:
          type: string
          title: Card Name
        uid:
          type: string
          title: Uid
        external_id:
          type: string
          title: External Id
        counter:
          type: integer
          title: Counter
        tx_limit:
          type: string
          title: Tx Limit
        daily_limit:
          type: string
          title: Daily Limit
        enable:
          type: boolean
          title: Enable
        k0:
          type: string
          title: K0
        k1:
          type: string
          title: K1
        k2:
          type: string
          title: K2
        prev_k0:
          type: string
          title: Prev K0
        prev_k1:
          type: string
          title: Prev K1
        prev_k2:
          type: string
          title: Prev K2
        otp:
          type: string
          title: Otp
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - wallet
        - card_name
        - uid
        - external_id
        - counter
        - tx_limit
        - daily_limit
        - enable
        - k0
        - k1
        - k2
        - prev_k0
        - prev_k1
        - prev_k2
        - otp
        - time
      title: Card
    ChannelBalance:
      properties:
        local_msat:
          type: integer
          title: Local Msat
        remote_msat:
          type: integer
          title: Remote Msat
        total_msat:
          type: integer
          title: Total Msat
      type: object
      required:
        - local_msat
        - remote_msat
        - total_msat
      title: ChannelBalance
    ChannelPoint:
      properties:
        funding_txid:
          type: string
          title: Funding Txid
        output_index:
          type: integer
          title: Output Index
      type: object
      required:
        - funding_txid
        - output_index
      title: ChannelPoint
    ChannelState:
      enum:
        - active
        - pending
        - closed
        - inactive
      title: ChannelState
      description: An enumeration.
    ChannelStats:
      properties:
        counts:
          additionalProperties:
            type: integer
          type: object
          title: Counts
        avg_size:
          type: integer
          title: Avg Size
        biggest_size:
          type: integer
          title: Biggest Size
        smallest_size:
          type: integer
          title: Smallest Size
        total_capacity:
          type: integer
          title: Total Capacity
      type: object
      required:
        - counts
        - avg_size
        - total_capacity
      title: ChannelStats
    Charge:
      properties:
        id:
          type: string
          title: Id
        user:
          type: string
          title: User
        amount:
          type: integer
          title: Amount
        time:
          type: integer
          title: Time
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        balance:
          type: integer
          title: Balance
          default: 0
        pending:
          type: integer
          title: Pending
          default: 0
        zeroconf:
          type: boolean
          title: Zeroconf
          default: false
        fasttrack:
          type: boolean
          title: Fasttrack
          default: false
        paid:
          type: boolean
          title: Paid
          default: false
        completelinktext:
          type: string
          title: Completelinktext
          default: Back to Merchant
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        onchainwallet:
          type: string
          title: Onchainwallet
        onchainaddress:
          type: string
          title: Onchainaddress
        lnbitswallet:
          type: string
          title: Lnbitswallet
        payment_request:
          type: string
          title: Payment Request
        payment_hash:
          type: string
          title: Payment Hash
        webhook:
          type: string
          title: Webhook
        completelink:
          type: string
          title: Completelink
        custom_css:
          type: string
          title: Custom Css
        currency:
          type: string
          title: Currency
        currency_amount:
          type: number
          title: Currency Amount
        extra:
          type: string
          title: Extra
      type: object
      required:
        - id
        - user
        - amount
        - time
        - timestamp
      title: Charge
    CheckPaywallInvoice:
      properties:
        payment_hash:
          type: string
          title: Payment Hash
      type: object
      required:
        - payment_hash
      title: CheckPaywallInvoice
    CoinflipSettings:
      properties:
        id:
          type: string
          title: Id
        wallet_id:
          type: string
          title: Wallet Id
        user_id:
          type: string
          title: User Id
        max_players:
          type: integer
          title: Max Players
        max_bet:
          type: integer
          title: Max Bet
        enabled:
          type: boolean
          title: Enabled
        haircut:
          type: number
          title: Haircut
      type: object
      required:
        - id
        - wallet_id
        - user_id
        - max_players
        - max_bet
        - enabled
        - haircut
      title: CoinflipSettings
    ConversionData:
      properties:
        from_:
          type: string
          title: 'From '
          default: sat
        amount:
          type: number
          title: Amount
        to:
          type: string
          title: To
          default: usd
      type: object
      required:
        - amount
      title: ConversionData
    Copilot:
      properties:
        id:
          type: string
          title: Id
        user:
          type: string
          title: User
        title:
          type: string
          title: Title
        lnurl_toggle:
          type: integer
          title: Lnurl Toggle
        wallet:
          type: string
          title: Wallet
        animation1:
          type: string
          title: Animation1
        animation2:
          type: string
          title: Animation2
        animation3:
          type: string
          title: Animation3
        animation1threshold:
          type: integer
          title: Animation1Threshold
        animation2threshold:
          type: integer
          title: Animation2Threshold
        animation3threshold:
          type: integer
          title: Animation3Threshold
        animation1webhook:
          type: string
          title: Animation1Webhook
        animation2webhook:
          type: string
          title: Animation2Webhook
        animation3webhook:
          type: string
          title: Animation3Webhook
        lnurl_title:
          type: string
          title: Lnurl Title
        show_message:
          type: integer
          title: Show Message
        show_ack:
          type: integer
          title: Show Ack
        show_price:
          type: string
          title: Show Price
        amount_made:
          type: integer
          title: Amount Made
        timestamp:
          type: integer
          title: Timestamp
        fullscreen_cam:
          type: integer
          title: Fullscreen Cam
        iframe_url:
          type: string
          title: Iframe Url
      type: object
      required:
        - id
        - title
        - lnurl_toggle
        - animation1threshold
        - animation2threshold
        - animation3threshold
        - show_message
        - show_ack
        - amount_made
        - timestamp
        - fullscreen_cam
      title: Copilot
    CreateAddressData:
      properties:
        domain_id:
          type: string
          title: Domain Id
        local_part:
          type: string
          title: Local Part
        pubkey:
          type: string
          title: Pubkey
          default: ''
        years:
          type: integer
          title: Years
          default: 1
        relays:
          items:
            type: string
          type: array
          title: Relays
        promo_code:
          type: string
          title: Promo Code
        referer:
          type: string
          title: Referer
        create_invoice:
          type: boolean
          title: Create Invoice
          default: false
      type: object
      required:
        - domain_id
        - local_part
      title: CreateAddressData
    CreateAppointment:
      properties:
        name:
          type: string
          title: Name
        email:
          type: string
          title: Email
        info:
          type: string
          title: Info
        start_time:
          type: string
          title: Start Time
        end_time:
          type: string
          title: End Time
        schedule:
          type: string
          title: Schedule
      type: object
      required:
        - name
        - start_time
        - end_time
        - schedule
      title: CreateAppointment
    CreateAuctionItem:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        ln_address:
          type: string
          title: Ln Address
        ask_price:
          type: number
          title: Ask Price
          default: 0
        transfer_code:
          type: string
          title: Transfer Code
      type: object
      required:
        - name
        - transfer_code
      title: CreateAuctionItem
    CreateAuctionRoomData:
      properties:
        fee_wallet_id:
          type: string
          title: Fee Wallet Id
        currency:
          type: string
          title: Currency
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        type:
          type: string
          title: Type
          default: auction
        room_percentage:
          type: number
          title: Room Percentage
          default: 10
        min_bid_up_percentage:
          type: number
          title: Min Bid Up Percentage
          default: 5
        is_open_room:
          type: boolean
          title: Is Open Room
          default: false
      type: object
      required:
        - currency
        - name
        - description
      title: CreateAuctionRoomData
    CreateAutoReverseSubmarineSwap:
      properties:
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
          default: BTC/BTC
        amount:
          type: integer
          title: Amount
        balance:
          type: integer
          title: Balance
          default: 0
        instant_settlement:
          type: boolean
          title: Instant Settlement
        onchain_address:
          type: string
          title: Onchain Address
        feerate_limit:
          type: integer
          title: Feerate Limit
      type: object
      required:
        - wallet
        - amount
        - instant_settlement
        - onchain_address
      title: CreateAutoReverseSubmarineSwap
    CreateBitcoinswitch:
      properties:
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        currency:
          type: string
          title: Currency
        switches:
          items:
            $ref: '#/components/schemas/Switch'
          type: array
          title: Switches
      type: object
      required:
        - title
        - wallet
        - currency
        - switches
      title: CreateBitcoinswitch
    CreateBleskomat:
      properties:
        name:
          type: string
          title: Name
        fiat_currency:
          type: string
          title: Fiat Currency
        exchange_rate_provider:
          type: string
          title: Exchange Rate Provider
        fee:
          type: string
          title: Fee
      type: object
      required:
        - name
        - fiat_currency
        - exchange_rate_provider
        - fee
      title: CreateBleskomat
    CreateCardData:
      properties:
        card_name:
          type: string
          title: Card Name
        uid:
          type: string
          title: Uid
        counter:
          type: integer
          title: Counter
          default: 0
        tx_limit:
          type: integer
          title: Tx Limit
          default: 0
        daily_limit:
          type: integer
          title: Daily Limit
          default: 0
        enable:
          type: boolean
          title: Enable
          default: true
        k0:
          type: string
          title: K0
          default: '00000000000000000000000000000000'
        k1:
          type: string
          title: K1
          default: '00000000000000000000000000000000'
        k2:
          type: string
          title: K2
          default: '00000000000000000000000000000000'
        prev_k0:
          type: string
          title: Prev K0
          default: '00000000000000000000000000000000'
        prev_k1:
          type: string
          title: Prev K1
          default: '00000000000000000000000000000000'
        prev_k2:
          type: string
          title: Prev K2
          default: '00000000000000000000000000000000'
      type: object
      required:
        - card_name
        - uid
      title: CreateCardData
    CreateCharge:
      properties:
        onchainwallet:
          type: string
          title: Onchainwallet
        lnbitswallet:
          type: string
          title: Lnbitswallet
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        webhook:
          type: string
          title: Webhook
        completelink:
          type: string
          title: Completelink
        completelinktext:
          type: string
          title: Completelinktext
          default: Back to Merchant
        time:
          type: integer
          minimum: 1
          title: Time
        amount:
          type: integer
          minimum: 1
          title: Amount
        zeroconf:
          type: boolean
          title: Zeroconf
          default: false
        fasttrack:
          type: boolean
          title: Fasttrack
          default: false
        custom_css:
          type: string
          title: Custom Css
        currency:
          type: string
          title: Currency
        currency_amount:
          type: number
          title: Currency Amount
        extra:
          type: string
          title: Extra
      type: object
      required:
        - description
        - time
      title: CreateCharge
    CreateCoinflip:
      properties:
        settings_id:
          type: string
          title: Settings Id
        name:
          type: string
          title: Name
        number_of_players:
          type: integer
          title: Number Of Players
          default: 0
        buy_in:
          type: integer
          title: Buy In
          default: 0
      type: object
      required:
        - name
      title: CreateCoinflip
    CreateCoinflipSettings:
      properties:
        max_players:
          type: integer
          title: Max Players
          default: 5
        max_bet:
          type: integer
          title: Max Bet
          default: 100
        enabled:
          type: boolean
          title: Enabled
          default: false
        haircut:
          type: number
          title: Haircut
          default: 0
      type: object
      title: CreateCoinflipSettings
    CreateCopilotData:
      properties:
        user:
          type: string
          title: User
        title:
          type: string
          title: Title
        lnurl_toggle:
          type: integer
          title: Lnurl Toggle
          default: 0
        wallet:
          type: string
          title: Wallet
        animation1:
          type: string
          title: Animation1
        animation2:
          type: string
          title: Animation2
        animation3:
          type: string
          title: Animation3
        animation1threshold:
          type: integer
          title: Animation1Threshold
          default: 0
        animation2threshold:
          type: integer
          title: Animation2Threshold
          default: 0
        animation3threshold:
          type: integer
          title: Animation3Threshold
          default: 0
        animation1webhook:
          type: string
          title: Animation1Webhook
        animation2webhook:
          type: string
          title: Animation2Webhook
        animation3webhook:
          type: string
          title: Animation3Webhook
        lnurl_title:
          type: string
          title: Lnurl Title
        show_message:
          type: integer
          title: Show Message
          default: 0
        show_ack:
          type: integer
          title: Show Ack
          default: 0
        show_price:
          type: string
          title: Show Price
        amount_made:
          type: integer
          title: Amount Made
          default: 0
        timestamp:
          type: integer
          title: Timestamp
          default: 0
        fullscreen_cam:
          type: integer
          title: Fullscreen Cam
          default: 0
        iframe_url:
          type: string
          title: Iframe Url
      type: object
      title: CreateCopilotData
    CreateDomainData:
      properties:
        wallet:
          type: string
          title: Wallet
        currency:
          type: string
          title: Currency
        cost:
          type: number
          title: Cost
        domain:
          type: string
          title: Domain
        cost_extra:
          $ref: '#/components/schemas/DomainCostConfig'
      type: object
      required:
        - wallet
        - currency
        - cost
        - domain
      title: CreateDomainData
    CreateEightBallData:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
          default: ''
        wordlist:
          type: string
          title: Wordlist
        lnurlpayamount:
          type: integer
          title: Lnurlpayamount
        wallet:
          type: string
          title: Wallet
      type: object
      required:
        - name
        - wordlist
        - lnurlpayamount
      title: CreateEightBallData
    CreateEvent:
      properties:
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        info:
          type: string
          title: Info
        closing_date:
          type: string
          title: Closing Date
        event_start_date:
          type: string
          title: Event Start Date
        event_end_date:
          type: string
          title: Event End Date
        currency:
          type: string
          title: Currency
          default: sat
        amount_tickets:
          type: integer
          minimum: 0
          title: Amount Tickets
        price_per_ticket:
          type: number
          minimum: 0
          title: Price Per Ticket
        banner:
          type: string
          title: Banner
      type: object
      required:
        - wallet
        - name
        - info
        - closing_date
        - event_start_date
        - event_end_date
        - amount_tickets
        - price_per_ticket
      title: CreateEvent
    CreateExtension:
      properties:
        ext_id:
          type: string
          title: Ext Id
        archive:
          type: string
          title: Archive
        source_repo:
          type: string
          title: Source Repo
        version:
          type: string
          title: Version
        cost_sats:
          type: integer
          title: Cost Sats
          default: 0
        payment_hash:
          type: string
          title: Payment Hash
      type: object
      required:
        - ext_id
        - archive
        - source_repo
        - version
      title: CreateExtension
    CreateFormData:
      properties:
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        webhook:
          type: string
          title: Webhook
        description:
          type: string
          minLength: 0
          title: Description
        amount:
          type: integer
          minimum: 0
          title: Amount
        flatrate:
          type: integer
          title: Flatrate
      type: object
      required:
        - wallet
        - name
        - description
        - amount
        - flatrate
      title: CreateFormData
    CreateFossa:
      properties:
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        currency:
          type: string
          title: Currency
        profit:
          type: number
          title: Profit
        boltz:
          type: boolean
          title: Boltz
          default: false
      type: object
      required:
        - title
        - wallet
        - currency
        - profit
      title: CreateFossa
    CreateGerty:
      properties:
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        refresh_time:
          type: integer
          title: Refresh Time
        utc_offset:
          type: integer
          title: Utc Offset
        wallet:
          type: string
          title: Wallet
        lnbits_wallets:
          type: string
          title: Lnbits Wallets
        mempool_endpoint:
          type: string
          title: Mempool Endpoint
        exchange:
          type: string
          title: Exchange
        display_preferences:
          type: string
          title: Display Preferences
        urls:
          type: string
          title: Urls
      type: object
      required:
        - name
        - type
      title: CreateGerty
    CreateInvoice:
      properties:
        unit:
          type: string
          title: Unit
          default: sat
        internal:
          type: boolean
          title: Internal
          default: false
        out:
          type: boolean
          title: Out
          default: true
        amount:
          type: number
          minimum: 0
          title: Amount
        memo:
          type: string
          maxLength: 640
          title: Memo
        description_hash:
          type: string
          title: Description Hash
        unhashed_description:
          type: string
          title: Unhashed Description
        expiry:
          type: integer
          title: Expiry
        extra:
          type: object
          title: Extra
        webhook:
          type: string
          title: Webhook
        bolt11:
          type: string
          title: Bolt11
        lnurl_callback:
          type: string
          title: Lnurl Callback
      type: object
      title: CreateInvoice
    CreateInvoiceData:
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatusEnum'
          default: draft
        currency:
          type: string
          title: Currency
        company_name:
          type: string
          title: Company Name
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        email:
          type: string
          title: Email
        phone:
          type: string
          title: Phone
        address:
          type: string
          title: Address
        items:
          items:
            $ref: '#/components/schemas/InvoiceItemData'
          type: array
          title: Items
      type: object
      required:
        - currency
        - items
      title: CreateInvoiceData
    CreateItem:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        price:
          type: number
          title: Price
        unit:
          type: string
          title: Unit
        image:
          type: string
          title: Image
      type: object
      required:
        - name
        - description
        - price
        - unit
      title: CreateItem
    CreateJobData:
      properties:
        name:
          type: string
          title: Name
          description: Name of the Job
        status:
          type: boolean
          title: Status
          default: false
        selectedverb:
          type: string
          title: Selectedverb
        url:
          type: string
          title: Url
        headers:
          items:
            $ref: '#/components/schemas/HeaderItems'
          type: array
          title: Headers
        body:
          type: string
          title: Body
        schedule:
          type: string
          title: Schedule
        extra:
          additionalProperties:
            type: string
          type: object
          title: Extra
      type: object
      title: CreateJobData
    CreateJukeLinkData:
      properties:
        user:
          type: string
          title: User
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        sp_user:
          type: string
          title: Sp User
        sp_secret:
          type: string
          title: Sp Secret
        sp_access_token:
          type: string
          title: Sp Access Token
        sp_refresh_token:
          type: string
          title: Sp Refresh Token
        sp_device:
          type: string
          title: Sp Device
        sp_playlists:
          type: string
          title: Sp Playlists
        price:
          type: integer
          title: Price
      type: object
      title: CreateJukeLinkData
    CreateLnpos:
      properties:
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        currency:
          type: string
          title: Currency
          default: sat
        profit:
          type: number
          title: Profit
      type: object
      required:
        - title
        - wallet
      title: CreateLnpos
    CreateLnurl:
      properties:
        description_hash:
          type: string
          title: Description Hash
        callback:
          type: string
          title: Callback
        amount:
          type: integer
          title: Amount
        comment:
          type: string
          title: Comment
        description:
          type: string
          title: Description
        unit:
          type: string
          title: Unit
      type: object
      required:
        - description_hash
        - callback
        - amount
      title: CreateLnurl
    CreateLnurlAuth:
      properties:
        callback:
          type: string
          title: Callback
      type: object
      required:
        - callback
      title: CreateLnurlAuth
    CreateMyExtensionData:
      properties:
        id:
          type: string
          title: Id
          default: ''
        name:
          type: string
          title: Name
        lnurlpayamount:
          type: integer
          title: Lnurlpayamount
        lnurlwithdrawamount:
          type: integer
          title: Lnurlwithdrawamount
        wallet:
          type: string
          title: Wallet
        total:
          type: integer
          title: Total
          default: 0
      type: object
      required:
        - name
        - lnurlpayamount
        - lnurlwithdrawamount
        - wallet
      title: CreateMyExtensionData
    CreateParticipantData:
      properties:
        name:
          type: string
          title: Name
        raisenow:
          type: string
          title: Raisenow
        description:
          type: string
          title: Description
        profile_image:
          type: string
          title: Profile Image
        total:
          type: integer
          title: Total
          default: 0
        lnaddress:
          type: string
          title: Lnaddress
      type: object
      required:
        - name
        - raisenow
      title: CreateParticipantData
    CreatePayLinkData:
      properties:
        description:
          type: string
          title: Description
        wallet:
          type: string
          title: Wallet
        min:
          type: number
          minimum: 0.01
          title: Min
          default: 1
        max:
          type: number
          minimum: 0.01
          title: Max
          default: 1
        currency:
          type: string
          title: Currency
        comment_chars:
          type: integer
          maximum: 799
          minimum: 0
          title: Comment Chars
          default: 0
        webhook_url:
          type: string
          title: Webhook Url
        webhook_headers:
          type: string
          title: Webhook Headers
        webhook_body:
          type: string
          title: Webhook Body
        success_text:
          type: string
          title: Success Text
        success_url:
          type: string
          title: Success Url
        fiat_base_multiplier:
          type: integer
          minimum: 1
          title: Fiat Base Multiplier
          default: 100
        username:
          type: string
          title: Username
        zaps:
          type: boolean
          title: Zaps
          default: false
      type: object
      required:
        - description
      title: CreatePayLinkData
    CreatePayment:
      properties:
        myextension_id:
          type: string
          title: Myextension Id
        amount:
          type: integer
          title: Amount
        memo:
          type: string
          title: Memo
      type: object
      required:
        - myextension_id
        - amount
        - memo
      title: CreatePayment
    CreatePaywall:
      properties:
        url:
          type: string
          title: Url
        memo:
          type: string
          title: Memo
        description:
          type: string
          title: Description
        amount:
          type: integer
          minimum: 0
          title: Amount
        remembers:
          type: boolean
          title: Remembers
        extras:
          $ref: '#/components/schemas/PaywallExtra'
      type: object
      required:
        - url
        - memo
        - amount
        - remembers
      title: CreatePaywall
    CreatePaywallInvoice:
      properties:
        amount:
          type: integer
          minimum: 1
          title: Amount
      type: object
      required:
        - amount
      title: CreatePaywallInvoice
    CreatePsbt:
      properties:
        masterpubs:
          items:
            $ref: '#/components/schemas/MasterPublicKey'
          type: array
          title: Masterpubs
        inputs:
          items:
            $ref: '#/components/schemas/TransactionInput'
          type: array
          title: Inputs
        outputs:
          items:
            $ref: '#/components/schemas/TransactionOutput'
          type: array
          title: Outputs
        fee_rate:
          type: integer
          title: Fee Rate
        tx_size:
          type: integer
          title: Tx Size
      type: object
      required:
        - masterpubs
        - inputs
        - outputs
        - fee_rate
        - tx_size
      title: CreatePsbt
    CreateRaiseNowData:
      properties:
        name:
          type: string
          title: Name
        wallet:
          type: string
          title: Wallet
        description:
          type: string
          title: Description
        background_image:
          type: string
          title: Background Image
        header_image:
          type: string
          title: Header Image
        total:
          type: integer
          title: Total
        live_dates:
          type: string
          title: Live Dates
      type: object
      required:
        - name
        - wallet
      title: CreateRaiseNowData
    CreateReverseSubmarineSwap:
      properties:
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
          default: BTC/BTC
        amount:
          type: integer
          title: Amount
        direction:
          type: string
          title: Direction
          default: send
        instant_settlement:
          type: boolean
          title: Instant Settlement
        onchain_address:
          type: string
          title: Onchain Address
        feerate:
          type: boolean
          title: Feerate
        feerate_value:
          type: integer
          title: Feerate Value
      type: object
      required:
        - wallet
        - amount
        - instant_settlement
        - onchain_address
      title: CreateReverseSubmarineSwap
    CreateSatsDiceLink:
      properties:
        wallet:
          type: string
          title: Wallet
        title:
          type: string
          title: Title
        base_url:
          type: string
          title: Base Url
        min_bet:
          type: integer
          title: Min Bet
        max_bet:
          type: integer
          title: Max Bet
        multiplier:
          type: number
          title: Multiplier
          default: 0
        chance:
          type: number
          title: Chance
          default: 0
        haircut:
          type: number
          title: Haircut
          default: 0
      type: object
      title: CreateSatsDiceLink
    CreateSatsPayTheme:
      properties:
        title:
          type: string
          title: Title
        custom_css:
          type: string
          title: Custom Css
      type: object
      required:
        - title
        - custom_css
      title: CreateSatsPayTheme
    CreateSatspot:
      properties:
        name:
          type: string
          title: Name
        haircut:
          type: integer
          title: Haircut
          default: 0
        closing_date:
          type: string
          format: date-time
          title: Closing Date
          default: '2025-06-26T13:27:37.176367+00:00'
        buy_in:
          type: integer
          title: Buy In
          default: 0
      type: object
      required:
        - name
      title: CreateSatspot
    CreateSchedule:
      properties:
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        start_day:
          type: integer
          maximum: 6
          minimum: 0
          title: Start Day
        end_day:
          type: integer
          maximum: 6
          minimum: 0
          title: End Day
        start_time:
          type: string
          title: Start Time
        end_time:
          type: string
          title: End Time
        amount:
          type: integer
          minimum: 1
          title: Amount
      type: object
      required:
        - wallet
        - name
        - start_day
        - end_day
        - start_time
        - end_time
        - amount
      title: CreateSchedule
    CreateScrubLink:
      properties:
        wallet:
          type: string
          title: Wallet
        description:
          type: string
          title: Description
        payoraddress:
          type: string
          title: Payoraddress
      type: object
      required:
        - wallet
        - description
        - payoraddress
      title: CreateScrubLink
    CreateShop:
      properties:
        wallet:
          type: string
          title: Wallet
        method:
          type: string
          title: Method
          default: wordlist
        wordlist:
          type: string
          title: Wordlist
      type: object
      required:
        - wallet
      title: CreateShop
    CreateSubmarineSwap:
      properties:
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
          default: BTC/BTC
        refund_address:
          type: string
          title: Refund Address
        amount:
          type: integer
          title: Amount
        direction:
          type: string
          title: Direction
          default: receive
        feerate:
          type: boolean
          title: Feerate
        feerate_value:
          type: integer
          title: Feerate Value
      type: object
      required:
        - wallet
        - refund_address
        - amount
      title: CreateSubmarineSwap
    CreateTicket:
      properties:
        name:
          type: string
          title: Name
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
        - name
        - email
      title: CreateTicket
    CreateTicketData:
      properties:
        form:
          type: string
          title: Form
        name:
          type: string
          title: Name
        email:
          type: string
          title: Email
          default: ''
        ltext:
          type: string
          title: Ltext
        sats:
          type: integer
          minimum: 0
          title: Sats
      type: object
      required:
        - form
        - name
        - ltext
        - sats
      title: CreateTicketData
    CreateTip:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        sats:
          type: integer
          title: Sats
        tipjar:
          type: string
          title: Tipjar
        name:
          type: string
          title: Name
          default: Anonymous
        message:
          type: string
          title: Message
          default: ''
      type: object
      required:
        - id
        - wallet
        - sats
        - tipjar
      title: CreateTip
    CreateTipJar:
      properties:
        name:
          type: string
          title: Name
        wallet:
          type: string
          title: Wallet
        webhook:
          type: string
          title: Webhook
          default: ''
        onchain:
          type: string
          title: Onchain
          default: ''
        onchain_limit:
          type: integer
          title: Onchain Limit
          default: 0
      type: object
      required:
        - name
        - wallet
      title: CreateTipJar
    CreateTips:
      properties:
        name:
          type: string
          title: Name
        sats:
          type: string
          title: Sats
        tipjar:
          type: string
          title: Tipjar
        message:
          type: string
          title: Message
      type: object
      required:
        - name
        - sats
        - tipjar
        - message
      title: CreateTips
    CreateTposData:
      properties:
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        currency:
          type: string
          title: Currency
        tax_inclusive:
          type: boolean
          title: Tax Inclusive
          default: true
        tax_default:
          type: number
          title: Tax Default
        tip_options:
          type: string
          title: Tip Options
          default: '[]'
        tip_wallet:
          type: string
          title: Tip Wallet
          default: ''
        withdraw_time:
          type: integer
          title: Withdraw Time
          default: 0
        withdraw_between:
          type: integer
          minimum: 1
          title: Withdraw Between
          default: 10
        withdraw_limit:
          type: integer
          minimum: 1
          title: Withdraw Limit
        withdraw_pin:
          type: integer
          minimum: 1
          title: Withdraw Pin
        withdraw_time_option:
          type: string
          title: Withdraw Time Option
        withdraw_premium:
          type: number
          title: Withdraw Premium
        withdraw_pin_disabled:
          type: boolean
          title: Withdraw Pin Disabled
          default: false
        lnaddress:
          type: boolean
          title: Lnaddress
          default: false
        lnaddress_cut:
          type: integer
          title: Lnaddress Cut
          default: 0
      type: object
      title: CreateTposData
    CreateTposInvoice:
      properties:
        amount:
          type: integer
          minimum: 1
          title: Amount
        memo:
          type: string
          title: Memo
        details:
          type: object
          title: Details
        tip_amount:
          type: integer
          minimum: 1
          title: Tip Amount
        user_lnaddress:
          type: string
          title: User Lnaddress
      type: object
      required:
        - amount
      title: CreateTposInvoice
    CreateTrack:
      properties:
        name:
          type: string
          title: Name
        download_url:
          type: string
          title: Download Url
        price_msat:
          type: integer
          minimum: 0
          title: Price Msat
        producer_id:
          type: string
          title: Producer Id
        producer_name:
          type: string
          title: Producer Name
      type: object
      required:
        - name
      title: CreateTrack
    CreateUnavailableTime:
      properties:
        start_time:
          type: string
          title: Start Time
        end_time:
          type: string
          title: End Time
        schedule:
          type: string
          title: Schedule
      type: object
      required:
        - start_time
        - schedule
      title: CreateUnavailableTime
    CreateUpdateItemData:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
          title: Items
      type: object
      required:
        - items
      title: CreateUpdateItemData
    CreateUser:
      properties:
        id:
          type: string
          title: Id
        email:
          type: string
          title: Email
        username:
          type: string
          maxLength: 20
          minLength: 2
          title: Username
        password:
          type: string
          maxLength: 50
          minLength: 8
          title: Password
        password_repeat:
          type: string
          maxLength: 50
          minLength: 8
          title: Password Repeat
        pubkey:
          type: string
          maxLength: 64
          title: Pubkey
        extensions:
          items:
            type: string
          type: array
          title: Extensions
        extra:
          $ref: '#/components/schemas/UserExtra'
      type: object
      title: CreateUser
    CreateWebPushSubscription:
      properties:
        subscription:
          type: string
          title: Subscription
      type: object
      required:
        - subscription
      title: CreateWebPushSubscription
    CreateWithdrawData:
      properties:
        title:
          type: string
          title: Title
        min_withdrawable:
          type: integer
          minimum: 1
          title: Min Withdrawable
        max_withdrawable:
          type: integer
          minimum: 1
          title: Max Withdrawable
        uses:
          type: integer
          minimum: 1
          title: Uses
        wait_time:
          type: integer
          minimum: 1
          title: Wait Time
        is_unique:
          type: boolean
          title: Is Unique
        webhook_url:
          type: string
          title: Webhook Url
        webhook_headers:
          type: string
          title: Webhook Headers
        webhook_body:
          type: string
          title: Webhook Body
        custom_url:
          type: string
          title: Custom Url
      type: object
      required:
        - title
        - min_withdrawable
        - max_withdrawable
        - uses
        - wait_time
        - is_unique
      title: CreateWithdrawData
    CreateWithdrawPay:
      properties:
        pay_link:
          type: string
          title: Pay Link
      type: object
      required:
        - pay_link
      title: CreateWithdrawPay
    CustomCost:
      properties:
        bracket:
          type: integer
          title: Bracket
        amount:
          type: number
          title: Amount
      type: object
      required:
        - bracket
        - amount
      title: CustomCost
    Customer:
      properties:
        merchant_id:
          type: string
          title: Merchant Id
        public_key:
          type: string
          title: Public Key
        event_created_at:
          type: integer
          title: Event Created At
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        unread_messages:
          type: integer
          title: Unread Messages
          default: 0
      type: object
      required:
        - merchant_id
        - public_key
      title: Customer
    CustomerProfile:
      properties:
        name:
          type: string
          title: Name
        about:
          type: string
          title: About
      type: object
      title: CustomerProfile
    DecodePayment:
      properties:
        data:
          type: string
          title: Data
        filter_fields:
          items:
            type: string
          type: array
          title: Filter Fields
          default: []
      type: object
      required:
        - data
      title: DecodePayment
    DeleteAccessControlList:
      properties:
        id:
          type: string
          title: Id
        password:
          type: string
          title: Password
      type: object
      required:
        - id
        - password
      title: DeleteAccessControlList
    DeleteTokenRequest:
      properties:
        id:
          type: string
          title: Id
        acl_id:
          type: string
          title: Acl Id
        password:
          type: string
          title: Password
      type: object
      required:
        - id
        - acl_id
        - password
      title: DeleteTokenRequest
    DirectMessage:
      properties:
        event_id:
          type: string
          title: Event Id
        event_created_at:
          type: integer
          title: Event Created At
        message:
          type: string
          title: Message
        public_key:
          type: string
          title: Public Key
        type:
          type: integer
          title: Type
          default: -1
        incoming:
          type: boolean
          title: Incoming
          default: false
        time:
          type: integer
          title: Time
        id:
          type: string
          title: Id
      type: object
      required:
        - message
        - public_key
        - id
      title: DirectMessage
    Domain:
      properties:
        id:
          type: string
          title: Id
        currency:
          type: string
          title: Currency
        cost:
          type: number
          title: Cost
        domain:
          type: string
          title: Domain
        wallet:
          type: string
          title: Wallet
        cost_extra:
          $ref: '#/components/schemas/DomainCostConfig'
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - currency
        - cost
        - domain
        - wallet
        - cost_extra
        - time
      title: Domain
    DomainCostConfig:
      properties:
        max_years:
          type: integer
          title: Max Years
          default: 1
        char_count_cost:
          items:
            $ref: '#/components/schemas/CustomCost'
          type: array
          title: Char Count Cost
          default: []
        rank_cost:
          items:
            $ref: '#/components/schemas/CustomCost'
          type: array
          title: Rank Cost
          default: []
        promotions:
          items:
            $ref: '#/components/schemas/Promotion'
          type: array
          title: Promotions
          default: []
      type: object
      title: DomainCostConfig
    EditAuctionRoomData:
      properties:
        fee_wallet_id:
          type: string
          title: Fee Wallet Id
        currency:
          type: string
          title: Currency
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        type:
          type: string
          title: Type
          default: auction
        room_percentage:
          type: number
          title: Room Percentage
          default: 10
        min_bid_up_percentage:
          type: number
          title: Min Bid Up Percentage
          default: 5
        is_open_room:
          type: boolean
          title: Is Open Room
          default: false
        id:
          type: string
          title: Id
        extra:
          $ref: '#/components/schemas/AuctionRoomConfig'
      type: object
      required:
        - currency
        - name
        - description
        - id
        - extra
      title: EditAuctionRoomData
    EditDomainData:
      properties:
        id:
          type: string
          title: Id
        currency:
          type: string
          title: Currency
        cost:
          type: number
          title: Cost
        cost_extra:
          $ref: '#/components/schemas/DomainCostConfig'
      type: object
      required:
        - id
        - currency
        - cost
      title: EditDomainData
    EightBall:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
          default: ''
        wordlist:
          type: string
          title: Wordlist
        lnurlpayamount:
          type: integer
          title: Lnurlpayamount
      type: object
      required:
        - id
        - wallet
        - name
        - wordlist
        - lnurlpayamount
      title: EightBall
    EndpointAccess:
      properties:
        path:
          type: string
          title: Path
        name:
          type: string
          title: Name
        read:
          type: boolean
          title: Read
          default: false
        write:
          type: boolean
          title: Write
          default: false
      type: object
      required:
        - path
        - name
      title: EndpointAccess
    Example:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
      type: object
      required:
        - id
        - wallet
      title: Example
    ExchangeRateProvider:
      properties:
        name:
          type: string
          title: Name
        api_url:
          type: string
          title: Api Url
        path:
          type: string
          title: Path
        exclude_to:
          items:
            type: string
          type: array
          title: Exclude To
          default: []
        ticker_conversion:
          items:
            type: string
          type: array
          title: Ticker Conversion
          default: []
      type: object
      required:
        - name
        - api_url
        - path
      title: ExchangeRateProvider
    Extension:
      properties:
        code:
          type: string
          title: Code
        is_valid:
          type: boolean
          title: Is Valid
        name:
          type: string
          title: Name
        short_description:
          type: string
          title: Short Description
        tile:
          type: string
          title: Tile
        upgrade_hash:
          type: string
          title: Upgrade Hash
          default: ''
      type: object
      required:
        - code
        - is_valid
      title: Extension
    ExtensionRelease:
      properties:
        name:
          type: string
          title: Name
        version:
          type: string
          title: Version
        archive:
          type: string
          title: Archive
        source_repo:
          type: string
          title: Source Repo
        is_github_release:
          type: boolean
          title: Is Github Release
          default: false
        hash:
          type: string
          title: Hash
        min_lnbits_version:
          type: string
          title: Min Lnbits Version
        max_lnbits_version:
          type: string
          title: Max Lnbits Version
        is_version_compatible:
          type: boolean
          title: Is Version Compatible
          default: true
        html_url:
          type: string
          title: Html Url
        description:
          type: string
          title: Description
        warning:
          type: string
          title: Warning
        repo:
          type: string
          title: Repo
        icon:
          type: string
          title: Icon
        details_link:
          type: string
          title: Details Link
        pay_link:
          type: string
          title: Pay Link
        cost_sats:
          type: integer
          title: Cost Sats
        paid_sats:
          type: integer
          title: Paid Sats
          default: 0
        payment_hash:
          type: string
          title: Payment Hash
      type: object
      required:
        - name
        - version
        - archive
        - source_repo
      title: ExtensionRelease
    ExtractPsbt:
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/SerializedTransaction'
          type: array
          title: Inputs
        psbt_base64:
          type: string
          title: Psbt Base64
          default: ''
        network:
          type: string
          title: Network
          default: Mainnet
      type: object
      required:
        - inputs
      title: ExtractPsbt
    ExtractTx:
      properties:
        tx_hex:
          type: string
          title: Tx Hex
          default: ''
        network:
          type: string
          title: Network
          default: Mainnet
      type: object
      title: ExtractTx
    Form:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        webhook:
          type: string
          title: Webhook
        description:
          type: string
          title: Description
        amount:
          type: integer
          title: Amount
        flatrate:
          type: integer
          title: Flatrate
        amountmade:
          type: integer
          title: Amountmade
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - wallet
        - name
        - description
        - amount
        - flatrate
        - amountmade
        - time
      title: Form
    Fossa:
      properties:
        id:
          type: string
          title: Id
        key:
          type: string
          title: Key
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        profit:
          type: number
          title: Profit
        currency:
          type: string
          title: Currency
        boltz:
          type: boolean
          title: Boltz
      type: object
      required:
        - id
        - key
        - title
        - wallet
        - profit
        - currency
        - boltz
      title: Fossa
    FossaPayment:
      properties:
        id:
          type: string
          title: Id
        deviceid:
          type: string
          title: Deviceid
        payhash:
          type: string
          title: Payhash
        payload:
          type: string
          title: Payload
        pin:
          type: integer
          title: Pin
        sats:
          type: integer
          title: Sats
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
        - id
        - deviceid
        - payhash
        - payload
        - pin
        - sats
        - timestamp
      title: FossaPayment
    Gerty:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        utc_offset:
          type: integer
          title: Utc Offset
        display_preferences:
          type: string
          title: Display Preferences
        refresh_time:
          type: integer
          title: Refresh Time
        wallet:
          type: string
          title: Wallet
        lnbits_wallets:
          type: string
          title: Lnbits Wallets
        mempool_endpoint:
          type: string
          title: Mempool Endpoint
        exchange:
          type: string
          title: Exchange
        urls:
          type: string
          title: Urls
        time:
          type: string
          format: date-time
          title: Time
          default: '2025-06-25T13:27:36.336255+00:00'
      type: object
      required:
        - id
        - name
        - type
        - utc_offset
        - display_preferences
      title: Gerty
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HashCheck:
      properties:
        hash:
          type: boolean
          title: Hash
        lnurl:
          type: boolean
          title: Lnurl
      type: object
      required:
        - hash
        - lnurl
      title: HashCheck
    HeaderItems:
      properties:
        key:
          type: string
          title: Key
        value:
          type: string
          title: Value
      type: object
      required:
        - key
        - value
      title: HeaderItems
    Hit:
      properties:
        id:
          type: string
          title: Id
        card_id:
          type: string
          title: Card Id
        ip:
          type: string
          title: Ip
        spent:
          type: boolean
          title: Spent
        useragent:
          type: string
          title: Useragent
        old_ctr:
          type: integer
          title: Old Ctr
        new_ctr:
          type: integer
          title: New Ctr
        amount:
          type: integer
          title: Amount
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - card_id
        - ip
        - spent
        - useragent
        - old_ctr
        - new_ctr
        - amount
        - time
      title: Hit
    IdentifierRanking:
      properties:
        name:
          type: string
          title: Name
        rank:
          type: integer
          title: Rank
      type: object
      required:
        - name
        - rank
      title: IdentifierRanking
    Image:
      properties:
        filename:
          type: string
          title: Filename
        directory:
          type: string
          title: Directory
          default: library
      type: object
      required:
        - filename
      title: Image
    Invoice:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatusEnum'
          default: draft
        currency:
          type: string
          title: Currency
        company_name:
          type: string
          title: Company Name
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        email:
          type: string
          title: Email
        phone:
          type: string
          title: Phone
        address:
          type: string
          title: Address
        time:
          type: string
          format: date-time
          title: Time
          default: '2025-06-25T13:27:36.157951+00:00'
      type: object
      required:
        - id
        - wallet
        - currency
      title: Invoice
    InvoiceAmountPayment:
      properties:
        famount:
          type: integer
          minimum: 1
          title: Famount
          description: Amount to pay in fiat currency.
      type: object
      required:
        - famount
      title: InvoiceAmountPayment
    InvoiceFull:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatusEnum'
          default: draft
        currency:
          type: string
          title: Currency
        company_name:
          type: string
          title: Company Name
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        email:
          type: string
          title: Email
        phone:
          type: string
          title: Phone
        address:
          type: string
          title: Address
        time:
          type: string
          format: date-time
          title: Time
          default: '2025-06-25T13:27:36.157951+00:00'
        items:
          items:
            $ref: '#/components/schemas/InvoiceItem'
          type: array
          title: Items
          default: []
        payments:
          type: integer
          title: Payments
          default: 0
      type: object
      required:
        - id
        - wallet
        - currency
      title: InvoiceFull
    InvoiceItem:
      properties:
        id:
          type: string
          title: Id
        invoice_id:
          type: string
          title: Invoice Id
        description:
          type: string
          title: Description
        amount:
          type: integer
          title: Amount
      type: object
      required:
        - id
        - invoice_id
        - description
        - amount
      title: InvoiceItem
    InvoiceItemData:
      properties:
        id:
          type: string
          title: Id
        description:
          type: string
          title: Description
        amount:
          type: number
          minimum: 0.01
          title: Amount
      type: object
      required:
        - description
        - amount
      title: InvoiceItemData
    InvoiceStatusEnum:
      type: string
      enum:
        - draft
        - open
        - paid
        - canceled
      title: InvoiceStatusEnum
      description: An enumeration.
    Item:
      properties:
        image:
          type: string
          title: Image
        price:
          type: number
          title: Price
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        tax:
          type: number
          minimum: 0
          title: Tax
          default: 0
        disabled:
          type: boolean
          title: Disabled
          default: false
        categories:
          items:
            type: string
          type: array
          title: Categories
          default: []
      type: object
      required:
        - price
        - title
      title: Item
    Job:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        admin:
          type: string
          title: Admin
        status:
          type: boolean
          title: Status
        schedule:
          type: string
          title: Schedule
        selectedverb:
          type: string
          title: Selectedverb
        url:
          type: string
          title: Url
        headers:
          items:
            $ref: '#/components/schemas/HeaderItems'
          type: array
          title: Headers
        body:
          type: string
          title: Body
        extra:
          additionalProperties:
            type: string
          type: object
          title: Extra
      type: object
      required:
        - id
        - name
        - admin
        - status
        - schedule
      title: Job
    JoinCoinflipGame:
      properties:
        game_id:
          type: string
          title: Game Id
        settings_id:
          type: string
          title: Settings Id
        ln_address:
          type: string
          title: Ln Address
      type: object
      title: JoinCoinflipGame
    JoinSatspotGame:
      properties:
        satspot_id:
          type: string
          title: Satspot Id
        ln_address:
          type: string
          title: Ln Address
      type: object
      title: JoinSatspotGame
    Jukebox:
      properties:
        id:
          type: string
          title: Id
        user:
          type: string
          title: User
        title:
          type: string
          title: Title
        wallet:
          type: string
          title: Wallet
        inkey:
          type: string
          title: Inkey
        sp_user:
          type: string
          title: Sp User
        sp_secret:
          type: string
          title: Sp Secret
        sp_access_token:
          type: string
          title: Sp Access Token
        sp_refresh_token:
          type: string
          title: Sp Refresh Token
        sp_device:
          type: string
          title: Sp Device
        sp_playlists:
          type: string
          title: Sp Playlists
        price:
          type: integer
          title: Price
        profit:
          type: integer
          title: Profit
      type: object
      required:
        - id
        - user
        - title
        - wallet
        - sp_user
        - sp_secret
        - price
        - profit
      title: Jukebox
    Livestream:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        fee_pct:
          type: integer
          title: Fee Pct
          default: 10
        current_track:
          type: string
          title: Current Track
      type: object
      required:
        - id
        - wallet
      title: Livestream
    LivestreamOverview:
      properties:
        lnurl:
          type: string
          title: Lnurl
        livestream:
          $ref: '#/components/schemas/Livestream'
        tracks:
          items:
            $ref: '#/components/schemas/Track'
          type: array
          title: Tracks
        producers:
          items:
            $ref: '#/components/schemas/Producer'
          type: array
          title: Producers
      type: object
      required:
        - lnurl
        - livestream
        - tracks
        - producers
      title: LivestreamOverview
    LnAddressConfig:
      properties:
        wallet:
          type: string
          title: Wallet
        min:
          type: integer
          title: Min
          default: 1
        max:
          type: integer
          title: Max
          default: 10000000
        pay_link_id:
          type: string
          title: Pay Link Id
          default: ''
      type: object
      required:
        - wallet
      title: LnAddressConfig
    LndhubAddInvoice:
      properties:
        amt:
          type: integer
          title: Amt
        memo:
          type: string
          title: Memo
        preimage:
          type: string
          title: Preimage
      type: object
      required:
        - amt
        - memo
      title: LndhubAddInvoice
    LndhubAuthData:
      properties:
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
        refresh_token:
          type: string
          title: Refresh Token
      type: object
      title: LndhubAuthData
    LndhubCreateInvoice:
      properties:
        invoice:
          type: string
          title: Invoice
      type: object
      required:
        - invoice
      title: LndhubCreateInvoice
    LnurlCharge:
      properties:
        id:
          type: string
          title: Id
        tpos_id:
          type: string
          title: Tpos Id
        amount:
          type: integer
          title: Amount
        claimed:
          type: boolean
          title: Claimed
          default: false
      type: object
      required:
        - id
        - tpos_id
      title: LnurlCharge
    Lnurlencode:
      properties:
        url:
          type: string
          title: Url
      type: object
      required:
        - url
      title: Lnurlencode
    LnurlpSettings:
      properties:
        nostr_private_key:
          type: string
          title: Nostr Private Key
      type: object
      required:
        - nostr_private_key
      title: LnurlpSettings
    LogEntry:
      properties:
        id:
          type: string
          title: Id
        job_id:
          type: string
          title: Job Id
        status:
          type: string
          title: Status
        response:
          type: string
          title: Response
        timestamp:
          type: string
          format: date-time
          title: Timestamp
          default: '2025-06-25T13:27:37.300211+00:00'
      type: object
      required:
        - id
        - job_id
      title: LogEntry
    LoginUsernamePassword:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
        - username
        - password
      title: LoginUsernamePassword
    LoginUsr:
      properties:
        usr:
          type: string
          title: Usr
      type: object
      required:
        - usr
      title: LoginUsr
    MasterPublicKey:
      properties:
        id:
          type: string
          title: Id
        public_key:
          type: string
          title: Public Key
        fingerprint:
          type: string
          title: Fingerprint
      type: object
      required:
        - id
        - public_key
        - fingerprint
      title: MasterPublicKey
    Merchant:
      properties:
        private_key:
          type: string
          title: Private Key
        public_key:
          type: string
          title: Public Key
        config:
          allOf:
            - $ref: '#/components/schemas/MerchantConfig'
          title: Config
          default:
            active: false
            restore_in_progress: false
            sync_from_nostr: false
        id:
          type: string
          title: Id
        time:
          type: integer
          title: Time
          default: 0
      type: object
      required:
        - private_key
        - public_key
        - id
      title: Merchant
    MerchantConfig:
      properties:
        name:
          type: string
          title: Name
        about:
          type: string
          title: About
        picture:
          type: string
          title: Picture
        event_id:
          type: string
          title: Event Id
        active:
          type: boolean
          title: Active
          default: false
        restore_in_progress:
          type: boolean
          title: Restore In Progress
          default: false
        sync_from_nostr:
          type: boolean
          title: Sync From Nostr
          default: false
      type: object
      title: MerchantConfig
    MyExtension:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        lnurlpayamount:
          type: integer
          title: Lnurlpayamount
        lnurlwithdrawamount:
          type: integer
          title: Lnurlwithdrawamount
        wallet:
          type: string
          title: Wallet
        total:
          type: integer
          title: Total
        lnurlpay:
          type: string
          title: Lnurlpay
          default: ''
        lnurlwithdraw:
          type: string
          title: Lnurlwithdraw
          default: ''
      type: object
      required:
        - id
        - name
        - lnurlpayamount
        - lnurlwithdrawamount
        - wallet
        - total
      title: MyExtension
    Nip5Settings:
      properties:
        cloudflare_access_token:
          type: string
          title: Cloudflare Access Token
        lnaddress_api_admin_key:
          type: string
          title: Lnaddress Api Admin Key
          default: ''
        lnaddress_api_endpoint:
          type: string
          title: Lnaddress Api Endpoint
          default: https://nostr.com
      type: object
      title: Nip5Settings
    NodeChannel:
      properties:
        peer_id:
          type: string
          title: Peer Id
        balance:
          $ref: '#/components/schemas/ChannelBalance'
        state:
          $ref: '#/components/schemas/ChannelState'
        id:
          type: string
          title: Id
        short_id:
          type: string
          title: Short Id
        point:
          $ref: '#/components/schemas/ChannelPoint'
        name:
          type: string
          title: Name
        color:
          type: string
          title: Color
        fee_ppm:
          type: integer
          title: Fee Ppm
        fee_base_msat:
          type: integer
          title: Fee Base Msat
      type: object
      required:
        - peer_id
        - balance
        - state
      title: NodeChannel
    NodeFees:
      properties:
        total_msat:
          type: integer
          title: Total Msat
        daily_msat:
          type: integer
          title: Daily Msat
        weekly_msat:
          type: integer
          title: Weekly Msat
        monthly_msat:
          type: integer
          title: Monthly Msat
      type: object
      required:
        - total_msat
      title: NodeFees
    NodeInfoResponse:
      properties:
        id:
          type: string
          title: Id
        backend_name:
          type: string
          title: Backend Name
        alias:
          type: string
          title: Alias
        color:
          type: string
          title: Color
        num_peers:
          type: integer
          title: Num Peers
        blockheight:
          type: integer
          title: Blockheight
        channel_stats:
          $ref: '#/components/schemas/ChannelStats'
        addresses:
          items:
            type: string
          type: array
          title: Addresses
        onchain_balance_sat:
          type: integer
          title: Onchain Balance Sat
        onchain_confirmed_sat:
          type: integer
          title: Onchain Confirmed Sat
        fees:
          $ref: '#/components/schemas/NodeFees'
        balance_msat:
          type: integer
          title: Balance Msat
      type: object
      required:
        - id
        - backend_name
        - alias
        - color
        - num_peers
        - blockheight
        - channel_stats
        - addresses
        - onchain_balance_sat
        - onchain_confirmed_sat
        - fees
        - balance_msat
      title: NodeInfoResponse
    NodePeerInfo:
      properties:
        id:
          type: string
          title: Id
        alias:
          type: string
          title: Alias
        color:
          type: string
          title: Color
        last_timestamp:
          type: integer
          title: Last Timestamp
        addresses:
          items:
            type: string
          type: array
          title: Addresses
      type: object
      required:
        - id
      title: NodePeerInfo
    NodeRank:
      properties:
        capacity:
          type: integer
          title: Capacity
        channelcount:
          type: integer
          title: Channelcount
        age:
          type: integer
          title: Age
        growth:
          type: integer
          title: Growth
        availability:
          type: integer
          title: Availability
      type: object
      title: NodeRank
    NostrAccount:
      properties:
        pubkey:
          type: string
          title: Pubkey
        relay_id:
          type: string
          title: Relay Id
        sats:
          type: integer
          title: Sats
          default: 0
        storage:
          type: integer
          title: Storage
          default: 0
        paid_to_join:
          type: boolean
          title: Paid To Join
          default: false
        allowed:
          type: boolean
          title: Allowed
          default: false
        blocked:
          type: boolean
          title: Blocked
          default: false
      type: object
      required:
        - pubkey
        - relay_id
      title: NostrAccount
    NostrPartialAccount:
      properties:
        relay_id:
          type: string
          title: Relay Id
        pubkey:
          type: string
          title: Pubkey
        allowed:
          type: boolean
          title: Allowed
        blocked:
          type: boolean
          title: Blocked
      type: object
      required:
        - relay_id
        - pubkey
      title: NostrPartialAccount
    NostrRelay:
      properties:
        id:
          type: string
          title: Id
        user_id:
          type: string
          title: User Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        pubkey:
          type: string
          title: Pubkey
        contact:
          type: string
          title: Contact
        active:
          type: boolean
          title: Active
          default: false
        meta:
          allOf:
            - $ref: '#/components/schemas/RelaySpec'
          title: Meta
          default:
            require_auth_events: false
            skiped_auth_events: []
            forced_auth_events: []
            require_auth_filter: false
            wallet: ''
            is_paid_relay: false
            cost_to_join: 0
            storage_cost_value: 0
            storage_cost_unit: MB
            free_storage_value: 1
            free_storage_unit: MB
            full_storage_action: prune
            max_events_per_hour: 0
            created_at_days_past: 0
            created_at_hours_past: 0
            created_at_minutes_past: 0
            created_at_seconds_past: 0
            created_at_days_future: 0
            created_at_hours_future: 0
            created_at_minutes_future: 0
            created_at_seconds_future: 0
            max_client_filters: 0
            limit_per_filter: 1000
            domain: ''
      type: object
      required:
        - id
        - name
      title: NostrRelay
    Order:
      properties:
        id:
          type: string
          title: Id
        event_id:
          type: string
          title: Event Id
        event_created_at:
          type: integer
          title: Event Created At
        public_key:
          type: string
          title: Public Key
        merchant_public_key:
          type: string
          title: Merchant Public Key
        shipping_id:
          type: string
          title: Shipping Id
        items:
          items:
            $ref: '#/components/schemas/OrderItem'
          type: array
          title: Items
        contact:
          $ref: '#/components/schemas/OrderContact'
        address:
          type: string
          title: Address
        stall_id:
          type: string
          title: Stall Id
        invoice_id:
          type: string
          title: Invoice Id
        total:
          type: number
          title: Total
        paid:
          type: boolean
          title: Paid
          default: false
        shipped:
          type: boolean
          title: Shipped
          default: false
        time:
          type: integer
          title: Time
        extra:
          $ref: '#/components/schemas/OrderExtra'
      type: object
      required:
        - id
        - public_key
        - merchant_public_key
        - shipping_id
        - items
        - stall_id
        - invoice_id
        - total
        - extra
      title: Order
    OrderContact:
      properties:
        nostr:
          type: string
          title: Nostr
        phone:
          type: string
          title: Phone
        email:
          type: string
          title: Email
      type: object
      title: OrderContact
    OrderExtra:
      properties:
        products:
          items:
            $ref: '#/components/schemas/ProductOverview'
          type: array
          title: Products
        currency:
          type: string
          title: Currency
        btc_price:
          type: string
          title: Btc Price
        shipping_cost:
          type: number
          title: Shipping Cost
          default: 0
        shipping_cost_sat:
          type: number
          title: Shipping Cost Sat
          default: 0
        fail_message:
          type: string
          title: Fail Message
      type: object
      required:
        - products
        - currency
        - btc_price
      title: OrderExtra
    OrderItem:
      properties:
        product_id:
          type: string
          title: Product Id
        quantity:
          type: integer
          title: Quantity
      type: object
      required:
        - product_id
        - quantity
      title: OrderItem
    OrderReissue:
      properties:
        id:
          type: string
          title: Id
        shipping_id:
          type: string
          title: Shipping Id
      type: object
      required:
        - id
      title: OrderReissue
    OrderStatusUpdate:
      properties:
        id:
          type: string
          title: Id
        message:
          type: string
          title: Message
        paid:
          type: boolean
          title: Paid
          default: false
        shipped:
          type: boolean
          title: Shipped
      type: object
      required:
        - id
      title: OrderStatusUpdate
    Page:
      properties:
        data:
          items: {}
          type: array
          title: Data
        total:
          type: integer
          title: Total
      type: object
      required:
        - data
        - total
      title: Page
    PartialDirectMessage:
      properties:
        event_id:
          type: string
          title: Event Id
        event_created_at:
          type: integer
          title: Event Created At
        message:
          type: string
          title: Message
        public_key:
          type: string
          title: Public Key
        type:
          type: integer
          title: Type
          default: -1
        incoming:
          type: boolean
          title: Incoming
          default: false
        time:
          type: integer
          title: Time
      type: object
      required:
        - message
        - public_key
      title: PartialDirectMessage
    PartialMerchant:
      properties:
        private_key:
          type: string
          title: Private Key
        public_key:
          type: string
          title: Public Key
        config:
          allOf:
            - $ref: '#/components/schemas/MerchantConfig'
          title: Config
          default:
            active: false
            restore_in_progress: false
            sync_from_nostr: false
      type: object
      required:
        - private_key
        - public_key
      title: PartialMerchant
    Participant:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        raisenow:
          type: string
          title: Raisenow
        description:
          type: string
          title: Description
        profile_image:
          type: string
          title: Profile Image
        total:
          type: integer
          title: Total
        lnaddress:
          type: string
          title: Lnaddress
        lnurlpay:
          type: string
          title: Lnurlpay
      type: object
      required:
        - id
        - name
        - raisenow
      title: Participant
    PayToEnableInfo:
      properties:
        amount:
          type: integer
          title: Amount
          default: 0
        required:
          type: boolean
          title: Required
          default: false
        wallet:
          type: string
          title: Wallet
      type: object
      title: PayToEnableInfo
    Payment:
      properties:
        checking_id:
          type: string
          title: Checking Id
        payment_hash:
          type: string
          title: Payment Hash
        wallet_id:
          type: string
          title: Wallet Id
        amount:
          type: integer
          title: Amount
        fee:
          type: integer
          title: Fee
        bolt11:
          type: string
          title: Bolt11
        status:
          type: string
          title: Status
          default: pending
        memo:
          type: string
          title: Memo
        expiry:
          type: string
          format: date-time
          title: Expiry
        webhook:
          type: string
          title: Webhook
        webhook_status:
          type: string
          title: Webhook Status
        preimage:
          type: string
          title: Preimage
        tag:
          type: string
          title: Tag
        extension:
          type: string
          title: Extension
        time:
          type: string
          format: date-time
          title: Time
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        extra:
          type: object
          title: Extra
          default: {}
      type: object
      required:
        - checking_id
        - payment_hash
        - wallet_id
        - amount
        - fee
        - bolt11
      title: Payment
    PaymentCountStat:
      properties:
        field:
          type: string
          title: Field
          default: ''
        total:
          type: number
          title: Total
          default: 0
      type: object
      title: PaymentCountStat
    PaymentDailyStats:
      properties:
        date:
          type: string
          format: date-time
          title: Date
        balance:
          type: number
          title: Balance
          default: 0
        balance_in:
          type: number
          title: Balance In
          default: 0
        balance_out:
          type: number
          title: Balance Out
          default: 0
        payments_count:
          type: integer
          title: Payments Count
          default: 0
        count_in:
          type: integer
          title: Count In
          default: 0
        count_out:
          type: integer
          title: Count Out
          default: 0
        fee:
          type: number
          title: Fee
          default: 0
      type: object
      required:
        - date
      title: PaymentDailyStats
    PaymentHistoryPoint:
      properties:
        date:
          type: string
          format: date-time
          title: Date
        income:
          type: integer
          title: Income
        spending:
          type: integer
          title: Spending
        balance:
          type: integer
          title: Balance
      type: object
      required:
        - date
        - income
        - spending
        - balance
      title: PaymentHistoryPoint
    PaymentWalletStats:
      properties:
        wallet_id:
          type: string
          title: Wallet Id
          default: ''
        wallet_name:
          type: string
          title: Wallet Name
          default: ''
        user_id:
          type: string
          title: User Id
          default: ''
        payments_count:
          type: integer
          title: Payments Count
        balance:
          type: number
          title: Balance
          default: 0
      type: object
      required:
        - payments_count
      title: PaymentWalletStats
    Paywall:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        url:
          type: string
          title: Url
        memo:
          type: string
          title: Memo
        description:
          type: string
          title: Description
        amount:
          type: integer
          title: Amount
        remembers:
          type: boolean
          title: Remembers
        time:
          type: string
          format: date-time
          title: Time
          default: '2025-06-25T13:27:36.266830+00:00'
        extras:
          allOf:
            - $ref: '#/components/schemas/PaywallExtra'
          title: Extras
          default:
            type: url
      type: object
      required:
        - id
        - wallet
        - url
        - memo
        - amount
        - remembers
      title: Paywall
    PaywallExtra:
      properties:
        type:
          type: string
          title: Type
          default: url
        file_config:
          $ref: '#/components/schemas/PaywallFileConfig'
      type: object
      title: PaywallExtra
    PaywallFileConfig:
      properties:
        url:
          type: string
          title: Url
        headers:
          additionalProperties:
            type: string
          type: object
          title: Headers
      type: object
      required:
        - url
        - headers
      title: PaywallFileConfig
    Producer:
      properties:
        id:
          type: string
          title: Id
        livestream:
          type: string
          title: Livestream
        user:
          type: string
          title: User
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - livestream
        - user
        - wallet
        - name
      title: Producer
    Product:
      properties:
        id:
          type: string
          title: Id
        stall_id:
          type: string
          title: Stall Id
        name:
          type: string
          title: Name
        categories:
          items:
            type: string
          type: array
          title: Categories
          default: []
        images:
          items:
            type: string
          type: array
          title: Images
          default: []
        price:
          type: number
          title: Price
        quantity:
          type: integer
          title: Quantity
        active:
          type: boolean
          title: Active
          default: true
        pending:
          type: boolean
          title: Pending
          default: false
        config:
          allOf:
            - $ref: '#/components/schemas/ProductConfig'
          title: Config
          default:
            use_autoreply: false
            shipping: []
        event_id:
          type: string
          title: Event Id
        event_created_at:
          type: integer
          title: Event Created At
      type: object
      required:
        - stall_id
        - name
        - price
        - quantity
      title: Product
    ProductConfig:
      properties:
        description:
          type: string
          title: Description
        currency:
          type: string
          title: Currency
        use_autoreply:
          type: boolean
          title: Use Autoreply
          default: false
        autoreply_message:
          type: string
          title: Autoreply Message
        shipping:
          items:
            $ref: '#/components/schemas/ProductShippingCost'
          type: array
          title: Shipping
          default: []
      type: object
      title: ProductConfig
    ProductOverview:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        price:
          type: number
          title: Price
        product_shipping_cost:
          type: number
          title: Product Shipping Cost
      type: object
      required:
        - id
        - name
        - price
      title: ProductOverview
    ProductShippingCost:
      properties:
        id:
          type: string
          title: Id
        cost:
          type: integer
          title: Cost
      type: object
      required:
        - id
        - cost
      title: ProductShippingCost
    PromoCodeStatus:
      properties:
        buyer_discount:
          type: number
          title: Buyer Discount
        allow_referer:
          type: boolean
          title: Allow Referer
          default: false
        referer:
          type: string
          title: Referer
      type: object
      title: PromoCodeStatus
    Promotion:
      properties:
        code:
          type: string
          title: Code
          default: ''
        buyer_discount_percent:
          type: number
          title: Buyer Discount Percent
        referer_bonus_percent:
          type: number
          title: Referer Bonus Percent
        selected_referer:
          type: string
          title: Selected Referer
      type: object
      required:
        - buyer_discount_percent
        - referer_bonus_percent
      title: Promotion
    PublicAuctionItem:
      properties:
        id:
          type: string
          title: Id
        auction_room_id:
          type: string
          title: Auction Room Id
        name:
          type: string
          title: Name
        active:
          type: boolean
          title: Active
          default: true
        description:
          type: string
          title: Description
        ask_price:
          type: number
          title: Ask Price
          default: 0
        current_price:
          type: number
          title: Current Price
          default: 0
        created_at:
          type: string
          format: date-time
          title: Created At
        expires_at:
          type: string
          format: date-time
          title: Expires At
        current_price_sat:
          type: number
          title: Current Price Sat
          default: 0
          no_database: true
        bid_count:
          type: integer
          title: Bid Count
          default: 0
          no_database: true
        currency:
          type: string
          title: Currency
          default: sat
          no_database: true
        next_min_bid:
          type: number
          title: Next Min Bid
          default: 0
          no_database: true
        time_left_seconds:
          type: integer
          title: Time Left Seconds
          default: 0
          no_database: true
        user_is_owner:
          type: boolean
          title: User Is Owner
          default: false
          no_database: true
        user_is_participant:
          type: boolean
          title: User Is Participant
          default: false
          no_database: true
        user_is_top_bidder:
          type: boolean
          title: User Is Top Bidder
          default: false
          no_database: true
      type: object
      required:
        - id
        - auction_room_id
        - name
        - expires_at
      title: PublicAuctionItem
    PublicAuctionRoom:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        currency:
          type: string
          title: Currency
        type:
          type: string
          title: Type
          default: auction
        duration_seconds:
          type: integer
          title: Duration Seconds
          default: 0
          no_database: true
        min_bid_up_percentage:
          type: number
          title: Min Bid Up Percentage
          default: 5
        room_percentage:
          type: number
          title: Room Percentage
          default: 10
      type: object
      required:
        - id
        - name
        - description
        - currency
      title: PublicAuctionRoom
    PublicNodeInfo:
      properties:
        id:
          type: string
          title: Id
        backend_name:
          type: string
          title: Backend Name
        alias:
          type: string
          title: Alias
        color:
          type: string
          title: Color
        num_peers:
          type: integer
          title: Num Peers
        blockheight:
          type: integer
          title: Blockheight
        channel_stats:
          $ref: '#/components/schemas/ChannelStats'
        addresses:
          items:
            type: string
          type: array
          title: Addresses
      type: object
      required:
        - id
        - backend_name
        - alias
        - color
        - num_peers
        - blockheight
        - channel_stats
        - addresses
      title: PublicNodeInfo
    RaiseNow:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        wallet:
          type: string
          title: Wallet
        description:
          type: string
          title: Description
        background_image:
          type: string
          title: Background Image
        header_image:
          type: string
          title: Header Image
        total:
          type: integer
          title: Total
          default: 0
        live_dates:
          type: string
          title: Live Dates
        lnurlpay:
          type: string
          title: Lnurlpay
      type: object
      required:
        - id
        - name
        - wallet
      title: RaiseNow
    Refund:
      properties:
        id:
          type: string
          title: Id
        hit_id:
          type: string
          title: Hit Id
        refund_amount:
          type: integer
          title: Refund Amount
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - hit_id
        - refund_amount
        - time
      title: Refund
    RegisterUser:
      properties:
        email:
          type: string
          title: Email
        username:
          type: string
          maxLength: 20
          minLength: 2
          title: Username
        password:
          type: string
          maxLength: 50
          minLength: 8
          title: Password
        password_repeat:
          type: string
          maxLength: 50
          minLength: 8
          title: Password Repeat
      type: object
      required:
        - username
        - password
        - password_repeat
      title: RegisterUser
    Relay:
      properties:
        id:
          type: string
          title: Id
        url:
          type: string
          title: Url
        active:
          type: boolean
          title: Active
        connected:
          type: boolean
          title: Connected
          no_database: true
        connected_string:
          type: string
          title: Connected String
          no_database: true
        status:
          allOf:
            - $ref: '#/components/schemas/RelayStatus'
          title: Status
          no_database: true
        ping:
          type: integer
          title: Ping
          no_database: true
      type: object
      title: Relay
    RelaySpec:
      properties:
        requireAuthEvents:
          type: boolean
          title: Requireauthevents
          default: false
        skipedAuthEvents:
          items: {}
          type: array
          title: Skipedauthevents
          default: []
        forcedAuthEvents:
          items: {}
          type: array
          title: Forcedauthevents
          default: []
        requireAuthFilter:
          type: boolean
          title: Requireauthfilter
          default: false
        wallet:
          type: string
          title: Wallet
          default: ''
        isPaidRelay:
          type: boolean
          title: Ispaidrelay
          default: false
        costToJoin:
          type: integer
          title: Costtojoin
          default: 0
        storageCostValue:
          type: integer
          title: Storagecostvalue
          default: 0
        storageCostUnit:
          type: string
          title: Storagecostunit
          default: MB
        freeStorageValue:
          type: integer
          title: Freestoragevalue
          default: 1
        freeStorageUnit:
          type: string
          title: Freestorageunit
          default: MB
        fullStorageAction:
          type: string
          title: Fullstorageaction
          default: prune
        maxEventsPerHour:
          type: integer
          title: Maxeventsperhour
          default: 0
        createdAtDaysPast:
          type: integer
          title: Createdatdayspast
          default: 0
        createdAtHoursPast:
          type: integer
          title: Createdathourspast
          default: 0
        createdAtMinutesPast:
          type: integer
          title: Createdatminutespast
          default: 0
        createdAtSecondsPast:
          type: integer
          title: Createdatsecondspast
          default: 0
        createdAtDaysFuture:
          type: integer
          title: Createdatdaysfuture
          default: 0
        createdAtHoursFuture:
          type: integer
          title: Createdathoursfuture
          default: 0
        createdAtMinutesFuture:
          type: integer
          title: Createdatminutesfuture
          default: 0
        createdAtSecondsFuture:
          type: integer
          title: Createdatsecondsfuture
          default: 0
        maxClientFilters:
          type: integer
          title: Maxclientfilters
          default: 0
        limitPerFilter:
          type: integer
          title: Limitperfilter
          default: 1000
        domain:
          type: string
          title: Domain
          default: ''
      type: object
      title: RelaySpec
    RelayStatus:
      properties:
        num_sent_events:
          type: integer
          title: Num Sent Events
          default: 0
        num_received_events:
          type: integer
          title: Num Received Events
          default: 0
        error_counter:
          type: integer
          title: Error Counter
          default: 0
        error_list:
          items: {}
          type: array
          title: Error List
          default: []
        notice_list:
          items: {}
          type: array
          title: Notice List
          default: []
      type: object
      title: RelayStatus
    ReleasePaymentInfo:
      properties:
        amount:
          type: integer
          title: Amount
        pay_link:
          type: string
          title: Pay Link
        payment_hash:
          type: string
          title: Payment Hash
        payment_request:
          type: string
          title: Payment Request
      type: object
      title: ReleasePaymentInfo
    ResetUserPassword:
      properties:
        reset_key:
          type: string
          title: Reset Key
        password:
          type: string
          maxLength: 50
          minLength: 8
          title: Password
        password_repeat:
          type: string
          maxLength: 50
          minLength: 8
          title: Password Repeat
      type: object
      required:
        - reset_key
        - password
        - password_repeat
      title: ResetUserPassword
    ReverseSubmarineSwap:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
        amount:
          type: integer
          title: Amount
        direction:
          type: string
          title: Direction
        feerate:
          type: boolean
          title: Feerate
        feerate_value:
          type: integer
          title: Feerate Value
        onchain_address:
          type: string
          title: Onchain Address
        instant_settlement:
          type: boolean
          title: Instant Settlement
        time:
          type: string
          format: date-time
          title: Time
        status:
          type: string
          title: Status
        boltz_id:
          type: string
          title: Boltz Id
        preimage:
          type: string
          title: Preimage
        claim_privkey:
          type: string
          title: Claim Privkey
        lockup_address:
          type: string
          title: Lockup Address
        invoice:
          type: string
          title: Invoice
        onchain_amount:
          type: integer
          title: Onchain Amount
        timeout_block_height:
          type: integer
          title: Timeout Block Height
        redeem_script:
          type: string
          title: Redeem Script
        blinding_key:
          type: string
          title: Blinding Key
      type: object
      required:
        - id
        - wallet
        - asset
        - amount
        - direction
        - feerate
        - onchain_address
        - instant_settlement
        - status
        - boltz_id
        - preimage
        - claim_privkey
        - lockup_address
        - invoice
        - onchain_amount
        - timeout_block_height
        - redeem_script
      title: ReverseSubmarineSwap
    RotateAddressData:
      properties:
        secret:
          type: string
          title: Secret
        pubkey:
          type: string
          title: Pubkey
      type: object
      required:
        - secret
        - pubkey
      title: RotateAddressData
    SatsPayTheme:
      properties:
        css_id:
          type: string
          title: Css Id
        title:
          type: string
          title: Title
        custom_css:
          type: string
          title: Custom Css
        user:
          type: string
          title: User
      type: object
      required:
        - css_id
        - title
        - custom_css
        - user
      title: SatsPayTheme
    SatspaySettings:
      properties:
        webhook_method:
          type: string
          title: Webhook Method
          default: GET
        mempool_url:
          type: string
          title: Mempool Url
          default: https://mempool.space
        network:
          type: string
          title: Network
          default: Mainnet
      type: object
      title: SatspaySettings
    ScrubLink:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        description:
          type: string
          title: Description
        payoraddress:
          type: string
          title: Payoraddress
      type: object
      required:
        - id
        - wallet
        - description
        - payoraddress
      title: ScrubLink
    SerializedTransaction:
      properties:
        tx_hex:
          type: string
          title: Tx Hex
      type: object
      required:
        - tx_hex
      title: SerializedTransaction
    SignedTransaction:
      properties:
        tx_hex:
          type: string
          title: Tx Hex
        tx_json:
          type: string
          title: Tx Json
      type: object
      title: SignedTransaction
    SimpleItem:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: SimpleItem
    SimpleStatus:
      properties:
        success:
          type: boolean
          title: Success
        message:
          type: string
          title: Message
      type: object
      required:
        - success
        - message
      title: SimpleStatus
    Stall:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        currency:
          type: string
          title: Currency
          default: sat
        shipping_zones:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
          title: Shipping Zones
          default: []
        config:
          allOf:
            - $ref: '#/components/schemas/StallConfig'
          title: Config
          default: {}
        pending:
          type: boolean
          title: Pending
          default: false
        event_id:
          type: string
          title: Event Id
        event_created_at:
          type: integer
          title: Event Created At
      type: object
      required:
        - wallet
        - name
      title: Stall
    StallConfig:
      properties:
        image_url:
          type: string
          title: Image Url
        description:
          type: string
          title: Description
      type: object
      title: StallConfig
    SubmarineSwap:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        asset:
          type: string
          title: Asset
        amount:
          type: integer
          title: Amount
        direction:
          type: string
          title: Direction
        feerate:
          type: boolean
          title: Feerate
        feerate_value:
          type: integer
          title: Feerate Value
        payment_hash:
          type: string
          title: Payment Hash
        time:
          type: string
          format: date-time
          title: Time
        status:
          type: string
          title: Status
        refund_privkey:
          type: string
          title: Refund Privkey
        refund_address:
          type: string
          title: Refund Address
        boltz_id:
          type: string
          title: Boltz Id
        expected_amount:
          type: integer
          title: Expected Amount
        timeout_block_height:
          type: integer
          title: Timeout Block Height
        address:
          type: string
          title: Address
        bip21:
          type: string
          title: Bip21
        redeem_script:
          type: string
          title: Redeem Script
        blinding_key:
          type: string
          title: Blinding Key
      type: object
      required:
        - id
        - wallet
        - asset
        - amount
        - direction
        - feerate
        - payment_hash
        - status
        - refund_privkey
        - refund_address
        - boltz_id
        - expected_amount
        - timeout_block_height
        - address
        - bip21
        - redeem_script
      title: SubmarineSwap
    Switch:
      properties:
        amount:
          type: number
          title: Amount
          default: 0
        duration:
          type: integer
          title: Duration
          default: 0
        pin:
          type: integer
          title: Pin
          default: 0
        comment:
          type: boolean
          title: Comment
          default: false
        variable:
          type: boolean
          title: Variable
          default: false
        lnurl:
          type: string
          title: Lnurl
      type: object
      title: Switch
    Target:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        source:
          type: string
          title: Source
        percent:
          type: number
          title: Percent
        alias:
          type: string
          title: Alias
      type: object
      required:
        - id
        - wallet
        - source
        - percent
      title: Target
    TargetPut:
      properties:
        wallet:
          type: string
          title: Wallet
        alias:
          type: string
          title: Alias
          default: ''
        percent:
          type: number
          maximum: 100
          minimum: 0
          title: Percent
      type: object
      required:
        - wallet
        - percent
      title: TargetPut
    TargetPutList:
      properties:
        targets:
          items:
            $ref: '#/components/schemas/TargetPut'
          type: array
          title: Targets
      type: object
      required:
        - targets
      title: TargetPutList
    TestMessage:
      properties:
        sender_private_key:
          type: string
          title: Sender Private Key
        reciever_public_key:
          type: string
          title: Reciever Public Key
        message:
          type: string
          title: Message
      type: object
      required:
        - reciever_public_key
        - message
      title: TestMessage
    TestMessageResponse:
      properties:
        private_key:
          type: string
          title: Private Key
        public_key:
          type: string
          title: Public Key
        event_json:
          type: string
          title: Event Json
      type: object
      required:
        - private_key
        - public_key
        - event_json
      title: TestMessageResponse
    Tip:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        name:
          type: string
          title: Name
        message:
          type: string
          title: Message
        sats:
          type: integer
          title: Sats
        tipjar:
          type: string
          title: Tipjar
      type: object
      required:
        - id
        - wallet
        - name
        - message
        - sats
        - tipjar
      title: Tip
      description: A Tip represents a single donation
    TipJar:
      properties:
        name:
          type: string
          title: Name
        wallet:
          type: string
          title: Wallet
        webhook:
          type: string
          title: Webhook
          default: ''
        onchain:
          type: string
          title: Onchain
          default: ''
        onchain_limit:
          type: integer
          title: Onchain Limit
          default: 0
        id:
          type: string
          title: Id
      type: object
      required:
        - name
        - wallet
        - id
      title: TipJar
      description: A TipJar represents a user's tip jar
    Tpos:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        currency:
          type: string
          title: Currency
        tax_inclusive:
          type: boolean
          title: Tax Inclusive
        tax_default:
          type: number
          title: Tax Default
        withdraw_time:
          type: integer
          title: Withdraw Time
        withdraw_between:
          type: integer
          title: Withdraw Between
        withdraw_limit:
          type: integer
          title: Withdraw Limit
        withdraw_time_option:
          type: string
          title: Withdraw Time Option
        withdraw_premium:
          type: number
          title: Withdraw Premium
        withdraw_pin_disabled:
          type: boolean
          title: Withdraw Pin Disabled
        withdrawn_amount:
          type: integer
          title: Withdrawn Amount
          default: 0
        lnaddress:
          type: boolean
          title: Lnaddress
        lnaddress_cut:
          type: integer
          title: Lnaddress Cut
          default: 0
        items:
          type: string
          title: Items
        tip_options:
          type: string
          title: Tip Options
        wallet:
          type: string
          title: Wallet
        tip_wallet:
          type: string
          title: Tip Wallet
        withdraw_pin:
          type: integer
          title: Withdraw Pin
      type: object
      required:
        - id
        - name
        - currency
        - tax_inclusive
        - withdraw_time
        - withdraw_between
        - wallet
      title: Tpos
    Track:
      properties:
        id:
          type: string
          title: Id
        livestream:
          type: string
          title: Livestream
        producer:
          type: string
          title: Producer
        name:
          type: string
          title: Name
        download_url:
          type: string
          title: Download Url
        price_msat:
          type: integer
          title: Price Msat
          default: 0
      type: object
      required:
        - id
        - livestream
        - producer
        - name
      title: Track
    TransactionInput:
      properties:
        tx_id:
          type: string
          title: Tx Id
        vout:
          type: integer
          title: Vout
        amount:
          type: integer
          title: Amount
        address:
          type: string
          title: Address
        branch_index:
          type: integer
          title: Branch Index
        address_index:
          type: integer
          title: Address Index
        wallet:
          type: string
          title: Wallet
        tx_hex:
          type: string
          title: Tx Hex
      type: object
      required:
        - tx_id
        - vout
        - amount
        - address
        - branch_index
        - address_index
        - wallet
        - tx_hex
      title: TransactionInput
    TransactionOutput:
      properties:
        amount:
          type: integer
          title: Amount
        address:
          type: string
          title: Address
        branch_index:
          type: integer
          title: Branch Index
        address_index:
          type: integer
          title: Address Index
        wallet:
          type: string
          title: Wallet
      type: object
      required:
        - amount
        - address
      title: TransactionOutput
    UpdateAccessControlList:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        endpoints:
          items:
            $ref: '#/components/schemas/EndpointAccess'
          type: array
          title: Endpoints
          default: []
        token_id_list:
          items:
            $ref: '#/components/schemas/SimpleItem'
          type: array
          title: Token Id List
          default: []
        password:
          type: string
          title: Password
      type: object
      required:
        - id
        - name
        - password
      title: UpdateAccessControlList
    UpdateAddressData:
      properties:
        pubkey:
          type: string
          title: Pubkey
        relays:
          items:
            type: string
          type: array
          title: Relays
      type: object
      title: UpdateAddressData
    UpdateBalance:
      properties:
        id:
          type: string
          title: Id
        amount:
          type: integer
          title: Amount
      type: object
      required:
        - id
        - amount
      title: UpdateBalance
    UpdateInvoiceData:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatusEnum'
          default: draft
        currency:
          type: string
          title: Currency
        company_name:
          type: string
          title: Company Name
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        email:
          type: string
          title: Email
        phone:
          type: string
          title: Phone
        address:
          type: string
          title: Address
        items:
          items:
            $ref: '#/components/schemas/InvoiceItemData'
          type: array
          title: Items
      type: object
      required:
        - id
        - wallet
        - currency
        - items
      title: UpdateInvoiceData
    UpdateJobData:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
          description: Name of the Job
        status:
          type: boolean
          title: Status
        selectedverb:
          type: string
          title: Selectedverb
        url:
          type: string
          title: Url
        headers:
          items:
            $ref: '#/components/schemas/HeaderItems'
          type: array
          title: Headers
        body:
          type: string
          title: Body
        schedule:
          type: string
          title: Schedule
          description: Schedule to run
        extra:
          additionalProperties:
            type: string
          type: object
          title: Extra
          description: Partial update for extra field
      type: object
      required:
        - id
        - status
      title: UpdateJobData
    UpdateSettings:
      properties:
        keycloak_discovery_url:
          type: string
          title: Keycloak Discovery Url
          default: ''
        keycloak_client_id:
          type: string
          title: Keycloak Client Id
          default: ''
        keycloak_client_secret:
          type: string
          title: Keycloak Client Secret
          default: ''
        keycloak_client_custom_org:
          type: string
          title: Keycloak Client Custom Org
        keycloak_client_custom_icon:
          type: string
          title: Keycloak Client Custom Icon
        github_client_id:
          type: string
          title: Github Client Id
          default: ''
        github_client_secret:
          type: string
          title: Github Client Secret
          default: ''
        google_client_id:
          type: string
          title: Google Client Id
          default: ''
        google_client_secret:
          type: string
          title: Google Client Secret
          default: ''
        nostr_absolute_request_urls:
          items:
            type: string
          type: array
          title: Nostr Absolute Request Urls
          default:
            - http://127.0.0.1:5000
            - http://localhost:5000
        auth_token_expire_minutes:
          type: integer
          exclusiveMinimum: 0
          title: Auth Token Expire Minutes
          default: 525600
        auth_allowed_methods:
          items:
            type: string
          type: array
          title: Auth Allowed Methods
          default:
            - user-id-only
            - username-password
        auth_credetials_update_threshold:
          type: integer
          exclusiveMinimum: 0
          title: Auth Credetials Update Threshold
          default: 120
        auth_all_methods:
          items: {}
          type: array
          title: Auth All Methods
          default:
            - user-id-only
            - username-password
            - nostr-auth-nip98
            - google-auth
            - github-auth
            - keycloak-auth
        lnbits_audit_enabled:
          type: boolean
          title: Lnbits Audit Enabled
          default: true
        lnbits_audit_retention_days:
          type: integer
          minimum: 0
          title: Lnbits Audit Retention Days
          default: 7
        lnbits_audit_log_ip_address:
          type: boolean
          title: Lnbits Audit Log Ip Address
          default: false
        lnbits_audit_log_path_params:
          type: boolean
          title: Lnbits Audit Log Path Params
          default: true
        lnbits_audit_log_query_params:
          type: boolean
          title: Lnbits Audit Log Query Params
          default: true
        lnbits_audit_log_request_body:
          type: boolean
          title: Lnbits Audit Log Request Body
          default: false
        lnbits_audit_include_paths:
          items:
            type: string
          type: array
          title: Lnbits Audit Include Paths
          default:
            - .*api/v1/.*
        lnbits_audit_exclude_paths:
          items:
            type: string
          type: array
          title: Lnbits Audit Exclude Paths
          default:
            - /static
        lnbits_audit_http_methods:
          items:
            type: string
          type: array
          title: Lnbits Audit Http Methods
          default:
            - POST
            - PUT
            - PATCH
            - DELETE
        lnbits_audit_http_response_codes:
          items:
            type: string
          type: array
          title: Lnbits Audit Http Response Codes
          default:
            - 4.*
            - 5.*
        lnbits_node_ui:
          type: boolean
          title: Lnbits Node Ui
          default: false
        lnbits_public_node_ui:
          type: boolean
          title: Lnbits Public Node Ui
          default: false
        lnbits_node_ui_transactions:
          type: boolean
          title: Lnbits Node Ui Transactions
          default: false
        lnbits_webpush_pubkey:
          type: string
          title: Lnbits Webpush Pubkey
        lnbits_webpush_privkey:
          type: string
          title: Lnbits Webpush Privkey
        lightning_invoice_expiry:
          type: integer
          exclusiveMinimum: 0
          title: Lightning Invoice Expiry
          default: 3600
        strike_api_endpoint:
          type: string
          title: Strike Api Endpoint
          default: https://api.strike.me/v1
          env: STRIKE_API_ENDPOINT
        strike_api_key:
          type: string
          title: Strike Api Key
          env: STRIKE_API_KEY
        breez_api_key:
          type: string
          title: Breez Api Key
        breez_greenlight_seed:
          type: string
          title: Breez Greenlight Seed
        breez_greenlight_invite_code:
          type: string
          title: Breez Greenlight Invite Code
        breez_greenlight_device_key:
          type: string
          title: Breez Greenlight Device Key
        breez_greenlight_device_cert:
          type: string
          title: Breez Greenlight Device Cert
        breez_use_trampoline:
          type: boolean
          title: Breez Use Trampoline
          default: true
        nwc_pairing_url:
          type: string
          title: Nwc Pairing Url
        lntips_api_endpoint:
          type: string
          title: Lntips Api Endpoint
        lntips_api_key:
          type: string
          title: Lntips Api Key
        lntips_admin_key:
          type: string
          title: Lntips Admin Key
        lntips_invoice_key:
          type: string
          title: Lntips Invoice Key
        spark_url:
          type: string
          title: Spark Url
        spark_token:
          type: string
          title: Spark Token
        opennode_api_endpoint:
          type: string
          title: Opennode Api Endpoint
        opennode_key:
          type: string
          title: Opennode Key
        opennode_admin_key:
          type: string
          title: Opennode Admin Key
        opennode_invoice_key:
          type: string
          title: Opennode Invoice Key
        phoenixd_api_endpoint:
          type: string
          title: Phoenixd Api Endpoint
          default: http://localhost:9740/
        phoenixd_api_password:
          type: string
          title: Phoenixd Api Password
        zbd_api_endpoint:
          type: string
          title: Zbd Api Endpoint
          default: https://api.zebedee.io/v0/
        zbd_api_key:
          type: string
          title: Zbd Api Key
        boltz_client_endpoint:
          type: string
          title: Boltz Client Endpoint
          default: 127.0.0.1:9002
        boltz_client_macaroon:
          type: string
          title: Boltz Client Macaroon
        boltz_client_wallet:
          type: string
          title: Boltz Client Wallet
          default: lnbits
        boltz_client_password:
          type: string
          title: Boltz Client Password
          default: ''
        boltz_client_cert:
          type: string
          title: Boltz Client Cert
        boltz_mnemonic:
          type: string
          title: Boltz Mnemonic
        alby_api_endpoint:
          type: string
          title: Alby Api Endpoint
          default: https://api.getalby.com/
        alby_access_token:
          type: string
          title: Alby Access Token
        blink_api_endpoint:
          type: string
          title: Blink Api Endpoint
          default: https://api.blink.sv/graphql
        blink_ws_endpoint:
          type: string
          title: Blink Ws Endpoint
          default: wss://ws.blink.sv/graphql
        blink_token:
          type: string
          title: Blink Token
        lnpay_api_endpoint:
          type: string
          title: Lnpay Api Endpoint
        lnpay_api_key:
          type: string
          title: Lnpay Api Key
        lnpay_wallet_key:
          type: string
          title: Lnpay Wallet Key
        lnpay_admin_key:
          type: string
          title: Lnpay Admin Key
        lnd_grpc_endpoint:
          type: string
          title: Lnd Grpc Endpoint
        lnd_grpc_cert:
          type: string
          title: Lnd Grpc Cert
        lnd_grpc_port:
          type: integer
          title: Lnd Grpc Port
        lnd_grpc_admin_macaroon:
          type: string
          title: Lnd Grpc Admin Macaroon
        lnd_grpc_invoice_macaroon:
          type: string
          title: Lnd Grpc Invoice Macaroon
        lnd_grpc_macaroon:
          type: string
          title: Lnd Grpc Macaroon
        lnd_grpc_macaroon_encrypted:
          type: string
          title: Lnd Grpc Macaroon Encrypted
        lnd_rest_endpoint:
          type: string
          title: Lnd Rest Endpoint
        lnd_rest_cert:
          type: string
          title: Lnd Rest Cert
        lnd_rest_macaroon:
          type: string
          title: Lnd Rest Macaroon
        lnd_rest_macaroon_encrypted:
          type: string
          title: Lnd Rest Macaroon Encrypted
        lnd_rest_route_hints:
          type: boolean
          title: Lnd Rest Route Hints
          default: true
        lnd_rest_allow_self_payment:
          type: boolean
          title: Lnd Rest Allow Self Payment
          default: false
        lnd_cert:
          type: string
          title: Lnd Cert
        lnd_admin_macaroon:
          type: string
          title: Lnd Admin Macaroon
        lnd_invoice_macaroon:
          type: string
          title: Lnd Invoice Macaroon
        lnd_rest_admin_macaroon:
          type: string
          title: Lnd Rest Admin Macaroon
        lnd_rest_invoice_macaroon:
          type: string
          title: Lnd Rest Invoice Macaroon
        eclair_url:
          type: string
          title: Eclair Url
        eclair_pass:
          type: string
          title: Eclair Pass
        corelightning_rest_url:
          type: string
          title: Corelightning Rest Url
        corelightning_rest_macaroon:
          type: string
          title: Corelightning Rest Macaroon
        corelightning_rest_cert:
          type: string
          title: Corelightning Rest Cert
        corelightning_rpc:
          type: string
          title: Corelightning Rpc
        corelightning_pay_command:
          type: string
          title: Corelightning Pay Command
          default: pay
        clightning_rpc:
          type: string
          title: Clightning Rpc
        cliche_endpoint:
          type: string
          title: Cliche Endpoint
        lnbits_endpoint:
          type: string
          title: Lnbits Endpoint
          default: https://demo.lnbits.com
        lnbits_key:
          type: string
          title: Lnbits Key
        lnbits_admin_key:
          type: string
          title: Lnbits Admin Key
        lnbits_invoice_key:
          type: string
          title: Lnbits Invoice Key
        fake_wallet_secret:
          type: string
          title: Fake Wallet Secret
          default: ToTheMoon1
        lnbits_denomination:
          type: string
          title: Lnbits Denomination
          default: sats
        lnbits_backend_wallet_class:
          type: string
          title: Lnbits Backend Wallet Class
          default: VoidWallet
        lnbits_funding_source_pay_invoice_wait_seconds:
          type: integer
          minimum: 0
          title: Lnbits Funding Source Pay Invoice Wait Seconds
          default: 5
        lnbits_nostr_notifications_enabled:
          type: boolean
          title: Lnbits Nostr Notifications Enabled
          default: false
        lnbits_nostr_notifications_private_key:
          type: string
          title: Lnbits Nostr Notifications Private Key
          default: ''
        lnbits_nostr_notifications_identifiers:
          items:
            type: string
          type: array
          title: Lnbits Nostr Notifications Identifiers
          default: []
        lnbits_telegram_notifications_enabled:
          type: boolean
          title: Lnbits Telegram Notifications Enabled
          default: false
        lnbits_telegram_notifications_access_token:
          type: string
          title: Lnbits Telegram Notifications Access Token
          default: ''
        lnbits_telegram_notifications_chat_id:
          type: string
          title: Lnbits Telegram Notifications Chat Id
          default: ''
        lnbits_email_notifications_enabled:
          type: boolean
          title: Lnbits Email Notifications Enabled
          default: false
        lnbits_email_notifications_email:
          type: string
          title: Lnbits Email Notifications Email
          default: ''
        lnbits_email_notifications_username:
          type: string
          title: Lnbits Email Notifications Username
          default: ''
        lnbits_email_notifications_password:
          type: string
          title: Lnbits Email Notifications Password
          default: ''
        lnbits_email_notifications_server:
          type: string
          title: Lnbits Email Notifications Server
          default: smtp.protonmail.ch
        lnbits_email_notifications_port:
          type: integer
          title: Lnbits Email Notifications Port
          default: 587
        lnbits_email_notifications_to_emails:
          items:
            type: string
          type: array
          title: Lnbits Email Notifications To Emails
          default: []
        lnbits_notification_settings_update:
          type: boolean
          title: Lnbits Notification Settings Update
          default: true
        lnbits_notification_credit_debit:
          type: boolean
          title: Lnbits Notification Credit Debit
          default: true
        notification_balance_delta_changed:
          type: boolean
          title: Notification Balance Delta Changed
          default: true
        lnbits_notification_server_start_stop:
          type: boolean
          title: Lnbits Notification Server Start Stop
          default: true
        lnbits_notification_watchdog:
          type: boolean
          title: Lnbits Notification Watchdog
          default: false
        lnbits_notification_server_status_hours:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Notification Server Status Hours
          default: 24
        lnbits_notification_incoming_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Notification Incoming Payment Amount Sats
          default: 1000000
        lnbits_notification_outgoing_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Notification Outgoing Payment Amount Sats
          default: 1000000
        lnbits_rate_limit_no:
          type: integer
          minimum: 0
          title: Lnbits Rate Limit No
          default: 200
        lnbits_rate_limit_unit:
          type: string
          title: Lnbits Rate Limit Unit
          default: minute
        lnbits_allowed_ips:
          items:
            type: string
          type: array
          title: Lnbits Allowed Ips
          default: []
        lnbits_blocked_ips:
          items:
            type: string
          type: array
          title: Lnbits Blocked Ips
          default: []
        lnbits_callback_url_rules:
          items:
            type: string
          type: array
          title: Lnbits Callback Url Rules
          default:
            - https?://([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})(:\d+)?
        lnbits_wallet_limit_max_balance:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Max Balance
          default: 0
        lnbits_wallet_limit_daily_max_withdraw:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Daily Max Withdraw
          default: 0
        lnbits_wallet_limit_secs_between_trans:
          type: integer
          minimum: 0
          title: Lnbits Wallet Limit Secs Between Trans
          default: 0
        lnbits_only_allow_incoming_payments:
          type: boolean
          title: Lnbits Only Allow Incoming Payments
          default: false
        lnbits_watchdog_switch_to_voidwallet:
          type: boolean
          title: Lnbits Watchdog Switch To Voidwallet
          default: false
        lnbits_watchdog_interval_minutes:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Watchdog Interval Minutes
          default: 60
        lnbits_watchdog_delta:
          type: integer
          exclusiveMinimum: 0
          title: Lnbits Watchdog Delta
          default: 1000000
        lnbits_max_outgoing_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Max Outgoing Payment Amount Sats
          default: 10000000
        lnbits_max_incoming_payment_amount_sats:
          type: integer
          minimum: 0
          title: Lnbits Max Incoming Payment Amount Sats
          default: 10000000
        lnbits_exchange_rate_cache_seconds:
          type: integer
          minimum: 0
          title: Lnbits Exchange Rate Cache Seconds
          default: 30
        lnbits_exchange_history_size:
          type: integer
          minimum: 0
          title: Lnbits Exchange History Size
          default: 60
        lnbits_exchange_history_refresh_interval_seconds:
          type: integer
          minimum: 0
          title: Lnbits Exchange History Refresh Interval Seconds
          default: 300
        lnbits_exchange_rate_providers:
          items:
            $ref: '#/components/schemas/ExchangeRateProvider'
          type: array
          title: Lnbits Exchange Rate Providers
          default:
            - name: Binance
              api_url: https://api.binance.com/api/v3/ticker/price?symbol=BTC{TO}
              path: $.price
              exclude_to:
                - czk
              ticker_conversion:
                - USD:USDT
            - name: Blockchain
              api_url: https://blockchain.info/frombtc?currency={TO}&value=100000000
              path: ''
              exclude_to: []
              ticker_conversion: []
            - name: Exir
              api_url: https://api.exir.io/v1/ticker?symbol=btc-{to}
              path: $.last
              exclude_to:
                - czk
                - eur
              ticker_conversion:
                - USD:USDT
            - name: Bitfinex
              api_url: https://api.bitfinex.com/v1/pubticker/btc{to}
              path: $.last_price
              exclude_to:
                - czk
              ticker_conversion: []
            - name: Bitstamp
              api_url: https://www.bitstamp.net/api/v2/ticker/btc{to}/
              path: $.last
              exclude_to:
                - czk
              ticker_conversion: []
            - name: Coinbase
              api_url: https://api.coinbase.com/v2/exchange-rates?currency=BTC
              path: $.data.rates.{TO}
              exclude_to: []
              ticker_conversion: []
            - name: Kraken
              api_url: https://api.kraken.com/0/public/Ticker?pair=XBT{TO}
              path: $.result.XXBTZ{TO}.c[0]
              exclude_to:
                - czk
              ticker_conversion: []
            - name: yadio
              api_url: https://api.yadio.io/exrates/BTC
              path: $.BTC.{TO}
              exclude_to: []
              ticker_conversion: []
        lnbits_reserve_fee_min:
          type: integer
          minimum: 0
          title: Lnbits Reserve Fee Min
          default: 2000
        lnbits_reserve_fee_percent:
          type: number
          minimum: 0
          title: Lnbits Reserve Fee Percent
          default: 1
        lnbits_service_fee:
          type: number
          minimum: 0
          title: Lnbits Service Fee
          default: 0
        lnbits_service_fee_ignore_internal:
          type: boolean
          title: Lnbits Service Fee Ignore Internal
          default: true
        lnbits_service_fee_max:
          type: integer
          title: Lnbits Service Fee Max
          default: 0
        lnbits_service_fee_wallet:
          type: string
          title: Lnbits Service Fee Wallet
        lnbits_baseurl:
          type: string
          title: Lnbits Baseurl
          default: http://127.0.0.1:5000/
        lnbits_hide_api:
          type: boolean
          title: Lnbits Hide Api
          default: false
        lnbits_upload_size_bytes:
          type: integer
          minimum: 0
          title: Lnbits Upload Size Bytes
          default: 512000
        lnbits_upload_allowed_types:
          items:
            type: string
          type: array
          title: Lnbits Upload Allowed Types
          default:
            - image/png
            - image/jpeg
            - image/jpg
            - image/heic
            - image/heif
            - image/heics
            - png
            - jpeg
            - jpg
            - heic
            - heif
            - heics
        lnbits_site_title:
          type: string
          title: Lnbits Site Title
          default: LNbits
        lnbits_site_tagline:
          type: string
          title: Lnbits Site Tagline
          default: free and open-source lightning wallet
        lnbits_site_description:
          type: string
          title: Lnbits Site Description
          default: The world's most powerful suite of bitcoin tools.
        lnbits_show_home_page_elements:
          type: boolean
          title: Lnbits Show Home Page Elements
          default: true
        lnbits_default_wallet_name:
          type: string
          title: Lnbits Default Wallet Name
          default: LNbits wallet
        lnbits_custom_badge:
          type: string
          title: Lnbits Custom Badge
        lnbits_custom_badge_color:
          type: string
          title: Lnbits Custom Badge Color
          default: warning
        lnbits_theme_options:
          items:
            type: string
          type: array
          title: Lnbits Theme Options
          default:
            - classic
            - freedom
            - mint
            - salvador
            - monochrome
            - autumn
            - cyber
            - flamingo
            - bitcoin
        lnbits_custom_logo:
          type: string
          title: Lnbits Custom Logo
        lnbits_custom_image:
          type: string
          title: Lnbits Custom Image
          default: /static/images/logos/lnbits.svg
        lnbits_ad_space_title:
          type: string
          title: Lnbits Ad Space Title
          default: Supported by
        lnbits_ad_space:
          type: string
          title: Lnbits Ad Space
          default: >-
            https://shop.lnbits.com/;/static/images/bitcoin-shop-banner.png;/static/images/bitcoin-shop-banner.png,https://affil.trezor.io/aff_c?offer_id=169&aff_id=33845;/static/images/bitcoin-hardware-wallet.png;/static/images/bitcoin-hardware-wallet.png,https://opensats.org/;/static/images/open-sats.png;/static/images/open-sats.png
        lnbits_ad_space_enabled:
          type: boolean
          title: Lnbits Ad Space Enabled
          default: false
        lnbits_allowed_currencies:
          items:
            type: string
          type: array
          title: Lnbits Allowed Currencies
          default: []
        lnbits_default_accounting_currency:
          type: string
          title: Lnbits Default Accounting Currency
        lnbits_qr_logo:
          type: string
          title: Lnbits Qr Logo
          default: /static/images/favicon_qr_logo.png
        lnbits_default_reaction:
          type: string
          title: Lnbits Default Reaction
          default: confettiBothSides
        lnbits_default_theme:
          type: string
          title: Lnbits Default Theme
          default: salvador
        lnbits_default_border:
          type: string
          title: Lnbits Default Border
          default: hard-border
        lnbits_default_gradient:
          type: boolean
          title: Lnbits Default Gradient
          default: true
        lnbits_default_bgimage:
          type: string
          title: Lnbits Default Bgimage
        lnbits_admin_extensions:
          items:
            type: string
          type: array
          title: Lnbits Admin Extensions
          default: []
        lnbits_user_default_extensions:
          items:
            type: string
          type: array
          title: Lnbits User Default Extensions
          default: []
        lnbits_extensions_deactivate_all:
          type: boolean
          title: Lnbits Extensions Deactivate All
          default: false
        lnbits_extensions_manifests:
          items:
            type: string
          type: array
          title: Lnbits Extensions Manifests
          default:
            - >-
              https://raw.githubusercontent.com/lnbits/lnbits-extensions/main/extensions.json
        lnbits_admin_users:
          items:
            type: string
          type: array
          title: Lnbits Admin Users
          default: []
        lnbits_allowed_users:
          items:
            type: string
          type: array
          title: Lnbits Allowed Users
          default: []
        lnbits_allow_new_accounts:
          type: boolean
          title: Lnbits Allow New Accounts
          default: true
      additionalProperties: false
      type: object
      title: UpdateSettings
    UpdateSuperuserPassword:
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 2
          title: Username
        password:
          type: string
          maxLength: 50
          minLength: 8
          title: Password
        password_repeat:
          type: string
          maxLength: 50
          minLength: 8
          title: Password Repeat
      type: object
      required:
        - username
        - password
        - password_repeat
      title: UpdateSuperuserPassword
    UpdateUser:
      properties:
        user_id:
          type: string
          title: User Id
        email:
          type: string
          title: Email
        username:
          type: string
          maxLength: 20
          minLength: 2
          title: Username
        extra:
          $ref: '#/components/schemas/UserExtra'
      type: object
      required:
        - user_id
        - username
      title: UpdateUser
    UpdateUserPassword:
      properties:
        user_id:
          type: string
          title: User Id
        password_old:
          type: string
          title: Password Old
        password:
          type: string
          maxLength: 50
          minLength: 8
          title: Password
        password_repeat:
          type: string
          maxLength: 50
          minLength: 8
          title: Password Repeat
        username:
          type: string
          maxLength: 20
          minLength: 2
          title: Username
      type: object
      required:
        - user_id
        - password
        - password_repeat
        - username
      title: UpdateUserPassword
    UpdateUserPubkey:
      properties:
        user_id:
          type: string
          title: User Id
        pubkey:
          type: string
          maxLength: 64
          title: Pubkey
      type: object
      required:
        - user_id
        - pubkey
      title: UpdateUserPubkey
    User:
      properties:
        id:
          type: string
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        email:
          type: string
          title: Email
        username:
          type: string
          title: Username
        pubkey:
          type: string
          title: Pubkey
        extensions:
          items:
            type: string
          type: array
          title: Extensions
          default: []
        wallets:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
          title: Wallets
          default: []
        admin:
          type: boolean
          title: Admin
          default: false
        super_user:
          type: boolean
          title: Super User
          default: false
        has_password:
          type: boolean
          title: Has Password
          default: false
        extra:
          allOf:
            - $ref: '#/components/schemas/UserExtra'
          title: Extra
          default:
            email_verified: false
            provider: lnbits
            visible_wallet_count: 10
      type: object
      required:
        - id
        - created_at
        - updated_at
      title: User
    UserAcls:
      properties:
        id:
          type: string
          title: Id
        access_control_list:
          items:
            $ref: '#/components/schemas/AccessControlList'
          type: array
          title: Access Control List
          default: []
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
      title: UserAcls
    UserExtra:
      properties:
        email_verified:
          type: boolean
          title: Email Verified
          default: false
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        display_name:
          type: string
          title: Display Name
        picture:
          type: string
          title: Picture
        provider:
          type: string
          title: Provider
          default: lnbits
        visible_wallet_count:
          type: integer
          title: Visible Wallet Count
          default: 10
      type: object
      title: UserExtra
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    Wallet:
      properties:
        id:
          type: string
          title: Id
        user:
          type: string
          title: User
        name:
          type: string
          title: Name
        adminkey:
          type: string
          title: Adminkey
        inkey:
          type: string
          title: Inkey
        deleted:
          type: boolean
          title: Deleted
          default: false
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        currency:
          type: string
          title: Currency
        balance_msat:
          type: integer
          title: Balance Msat
          default: 0
          no_database: true
        extra:
          allOf:
            - $ref: '#/components/schemas/WalletExtra'
          title: Extra
          default:
            icon: flash_on
            color: primary
            pinned: false
      type: object
      required:
        - id
        - user
        - name
        - adminkey
        - inkey
      title: Wallet
    WalletAccount:
      properties:
        id:
          type: string
          title: Id
        user:
          type: string
          title: User
        masterpub:
          type: string
          title: Masterpub
        fingerprint:
          type: string
          title: Fingerprint
        title:
          type: string
          title: Title
        address_no:
          type: integer
          title: Address No
        balance:
          type: integer
          title: Balance
        type:
          type: string
          title: Type
          default: ''
        network:
          type: string
          title: Network
          default: Mainnet
        meta:
          type: string
          title: Meta
          default: '{}'
      type: object
      required:
        - id
        - user
        - masterpub
        - fingerprint
        - title
        - address_no
        - balance
      title: WalletAccount
    WalletExtra:
      properties:
        icon:
          type: string
          title: Icon
          default: flash_on
        color:
          type: string
          title: Color
          default: primary
        pinned:
          type: boolean
          title: Pinned
          default: false
      type: object
      title: WalletExtra
    WebPushSubscription:
      properties:
        endpoint:
          type: string
          title: Endpoint
        user:
          type: string
          title: User
        data:
          type: string
          title: Data
        host:
          type: string
          title: Host
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
        - endpoint
        - user
        - data
        - host
        - timestamp
      title: WebPushSubscription
    Webhook:
      properties:
        method:
          type: string
          title: Method
          default: GET
        url:
          type: string
          title: Url
          default: ''
        headers:
          type: string
          title: Headers
          default: ''
        data:
          type: string
          title: Data
          default: ''
      type: object
      title: Webhook
    Zone:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        currency:
          type: string
          title: Currency
        cost:
          type: number
          title: Cost
        countries:
          items:
            type: string
          type: array
          title: Countries
          default: []
      type: object
      required:
        - currency
        - cost
      title: Zone
    lnbits__core__models__lnurl__PayLnurlWData:
      properties:
        lnurl_w:
          type: string
          title: Lnurl W
      type: object
      required:
        - lnurl_w
      title: PayLnurlWData
    lnbits__core__models__wallets__CreateWallet:
      properties:
        name:
          type: string
          title: Name
      type: object
      title: CreateWallet
    lnbits__extensions__events__models__Ticket:
      properties:
        id:
          type: string
          title: Id
        wallet:
          type: string
          title: Wallet
        event:
          type: string
          title: Event
        name:
          type: string
          title: Name
        email:
          type: string
          title: Email
        registered:
          type: boolean
          title: Registered
        paid:
          type: boolean
          title: Paid
        time:
          type: string
          format: date-time
          title: Time
        reg_timestamp:
          type: string
          format: date-time
          title: Reg Timestamp
      type: object
      required:
        - id
        - wallet
        - event
        - name
        - email
        - registered
        - paid
        - time
        - reg_timestamp
      title: Ticket
    lnbits__extensions__lnticket__models__Ticket:
      properties:
        id:
          type: string
          title: Id
        form:
          type: string
          title: Form
        email:
          type: string
          title: Email
        ltext:
          type: string
          title: Ltext
        name:
          type: string
          title: Name
        wallet:
          type: string
          title: Wallet
        sats:
          type: integer
          title: Sats
        paid:
          type: boolean
          title: Paid
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
        - id
        - form
        - email
        - ltext
        - name
        - wallet
        - sats
        - paid
        - time
      title: Ticket
    lnbits__extensions__nostrclient__models__Config:
      properties:
        private_ws:
          type: boolean
          title: Private Ws
          default: true
        public_ws:
          type: boolean
          title: Public Ws
          default: false
      type: object
      title: Config
    lnbits__extensions__nostrnip5__models__Address:
      properties:
        id:
          type: string
          title: Id
        owner_id:
          type: string
          title: Owner Id
        domain_id:
          type: string
          title: Domain Id
        local_part:
          type: string
          title: Local Part
        active:
          type: boolean
          title: Active
        time:
          type: string
          format: date-time
          title: Time
        expires_at:
          type: string
          format: date-time
          title: Expires At
        pubkey:
          type: string
          title: Pubkey
        reimburse_amount:
          type: integer
          title: Reimburse Amount
          default: 0
        promo_code_status:
          allOf:
            - $ref: '#/components/schemas/PromoCodeStatus'
          title: Promo Code Status
          default:
            allow_referer: false
          no_database: true
        extra:
          allOf:
            - $ref: '#/components/schemas/AddressExtra'
          title: Extra
          default:
            activated_by_owner: false
            years: 1
            max_years: 1
            relays: []
            ln_address:
              wallet: ''
              min: 1
              max: 10000000
              pay_link_id: ''
      type: object
      required:
        - id
        - domain_id
        - local_part
        - active
        - time
        - expires_at
      title: Address
    lnbits__extensions__tpos__models__PayLnurlWData:
      properties:
        lnurl:
          type: string
          title: Lnurl
      type: object
      required:
        - lnurl
      title: PayLnurlWData
    lnbits__extensions__watchonly__models__Address:
      properties:
        id:
          type: string
          title: Id
        address:
          type: string
          title: Address
        wallet:
          type: string
          title: Wallet
        amount:
          type: integer
          title: Amount
          default: 0
        branch_index:
          type: integer
          title: Branch Index
          default: 0
        address_index:
          type: integer
          title: Address Index
        note:
          type: string
          title: Note
        has_activity:
          type: boolean
          title: Has Activity
          default: false
      type: object
      required:
        - id
        - address
        - wallet
        - address_index
      title: Address
    lnbits__extensions__watchonly__models__Config:
      properties:
        mempool_endpoint:
          type: string
          title: Mempool Endpoint
          default: https://mempool.space
        receive_gap_limit:
          type: integer
          title: Receive Gap Limit
          default: 20
        change_gap_limit:
          type: integer
          title: Change Gap Limit
          default: 5
        sats_denominated:
          type: boolean
          title: Sats Denominated
          default: true
        network:
          type: string
          title: Network
          default: Mainnet
      type: object
      title: Config
    lnbits__extensions__watchonly__models__CreateWallet:
      properties:
        masterpub:
          type: string
          title: Masterpub
          default: ''
        title:
          type: string
          title: Title
          default: ''
        network:
          type: string
          title: Network
          default: Mainnet
        meta:
          type: string
          title: Meta
          default: '{}'
      type: object
      title: CreateWallet
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      description: OAuth2 access token for authentication with username and password.
      flows:
        password:
          scopes: {}
          tokenUrl: api/v1/auth
    HTTPBearer:
      type: http
      description: Bearer Token for custom ACL based access control
      scheme: bearer
    APIKeyHeader:
      type: apiKey
      description: Admin or Invoice key for wallet API's
      in: header
      name: X-API-KEY
    APIKeyQuery:
      type: apiKey
      description: Admin or Invoice key for wallet API's
      in: query
      name: api-key
